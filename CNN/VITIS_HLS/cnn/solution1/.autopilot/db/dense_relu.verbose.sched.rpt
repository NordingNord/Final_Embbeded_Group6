

================================================================
== Vitis HLS Report for 'dense_relu'
================================================================
* Date:           Fri Dec 22 00:43:55 2023

* Version:        2020.2 (Build 3064766 on Wed Nov 18 09:12:47 MST 2020)
* Project:        cnn
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu3eg-sbva484-1-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+-----------+------------+
    |  Clock |  Target  | Estimated | Uncertainty|
    +--------+----------+-----------+------------+
    |ap_clk  |  10.00 ns|  12.036 ns|     2.70 ns|
    +--------+----------+-----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      317|      317|  3.815 us|  3.815 us|  317|  317|     none|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                     |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name      |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_157_1   |      316|      316|        79|          -|          -|     4|        no|
        | + VITIS_LOOP_159_2  |       69|       69|        10|          4|          1|    16|       yes|
        +---------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 4, depth = 10


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 20
* Pipeline : 1
  Pipeline-0 : II = 4, D = 10, States = { 3 4 5 6 7 8 9 10 11 12 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 13 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 3 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 2 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.48>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%output_3_read_1 = read i32 @_ssdm_op_Read.ap_auto.float, i32 %output_3_read" [../src/hls/cnn.cpp:152]   --->   Operation 21 'read' 'output_3_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%output_2_read_1 = read i32 @_ssdm_op_Read.ap_auto.float, i32 %output_2_read" [../src/hls/cnn.cpp:152]   --->   Operation 22 'read' 'output_2_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%output_1_read_1 = read i32 @_ssdm_op_Read.ap_auto.float, i32 %output_1_read" [../src/hls/cnn.cpp:152]   --->   Operation 23 'read' 'output_1_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%output_0_read_1 = read i32 @_ssdm_op_Read.ap_auto.float, i32 %output_0_read" [../src/hls/cnn.cpp:152]   --->   Operation 24 'read' 'output_0_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.48ns)   --->   "%br_ln157 = br void" [../src/hls/cnn.cpp:157]   --->   Operation 25 'br' 'br_ln157' <Predicate = true> <Delay = 0.48>

State 2 <SV = 1> <Delay = 0.74>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%output_0_0 = phi i32 %output_0_read_1, void %.lr.ph6, i32 %output_0_2, void %._crit_edge.loopexit" [../src/hls/cnn.cpp:152]   --->   Operation 26 'phi' 'output_0_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%output_1_0 = phi i32 %output_1_read_1, void %.lr.ph6, i32 %output_1_2, void %._crit_edge.loopexit" [../src/hls/cnn.cpp:152]   --->   Operation 27 'phi' 'output_1_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%output_2_0 = phi i32 %output_2_read_1, void %.lr.ph6, i32 %output_2_2, void %._crit_edge.loopexit" [../src/hls/cnn.cpp:152]   --->   Operation 28 'phi' 'output_2_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%output_3_0 = phi i32 %output_3_read_1, void %.lr.ph6, i32 %output_3_2, void %._crit_edge.loopexit" [../src/hls/cnn.cpp:152]   --->   Operation 29 'phi' 'output_3_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%i = phi i3 0, void %.lr.ph6, i3 %add_ln157, void %._crit_edge.loopexit" [../src/hls/cnn.cpp:157]   --->   Operation 30 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.74ns)   --->   "%add_ln157 = add i3 %i, i3 1" [../src/hls/cnn.cpp:157]   --->   Operation 31 'add' 'add_ln157' <Predicate = true> <Delay = 0.74> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 32 [1/1] (0.69ns)   --->   "%icmp_ln157 = icmp_eq  i3 %i, i3 4" [../src/hls/cnn.cpp:157]   --->   Operation 32 'icmp' 'icmp_ln157' <Predicate = true> <Delay = 0.69> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 4, i64 4, i64 4"   --->   Operation 33 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%br_ln157 = br i1 %icmp_ln157, void %.split2, void %._crit_edge7.loopexit" [../src/hls/cnn.cpp:157]   --->   Operation 34 'br' 'br_ln157' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%zext_ln157 = zext i3 %i" [../src/hls/cnn.cpp:157]   --->   Operation 35 'zext' 'zext_ln157' <Predicate = (!icmp_ln157)> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%specloopname_ln157 = specloopname void @_ssdm_op_SpecLoopName, void @empty_1" [../src/hls/cnn.cpp:157]   --->   Operation 36 'specloopname' 'specloopname_ln157' <Predicate = (!icmp_ln157)> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%empty_52 = trunc i3 %i" [../src/hls/cnn.cpp:157]   --->   Operation 37 'trunc' 'empty_52' <Predicate = (!icmp_ln157)> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.60ns)   --->   "%tmp = mux i32 @_ssdm_op_Mux.ap_auto.4float.i2, i32 %output_0_0, i32 %output_1_0, i32 %output_2_0, i32 %output_3_0, i2 %empty_52" [../src/hls/cnn.cpp:161]   --->   Operation 38 'mux' 'tmp' <Predicate = (!icmp_ln157)> <Delay = 0.60> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.60> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (0.48ns)   --->   "%br_ln159 = br void" [../src/hls/cnn.cpp:159]   --->   Operation 39 'br' 'br_ln159' <Predicate = (!icmp_ln157)> <Delay = 0.48>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%mrv = insertvalue i128 <undef>, i32 %output_0_0" [../src/hls/cnn.cpp:168]   --->   Operation 40 'insertvalue' 'mrv' <Predicate = (icmp_ln157)> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%mrv_1 = insertvalue i128 %mrv, i32 %output_1_0" [../src/hls/cnn.cpp:168]   --->   Operation 41 'insertvalue' 'mrv_1' <Predicate = (icmp_ln157)> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%mrv_2 = insertvalue i128 %mrv_1, i32 %output_2_0" [../src/hls/cnn.cpp:168]   --->   Operation 42 'insertvalue' 'mrv_2' <Predicate = (icmp_ln157)> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%mrv_3 = insertvalue i128 %mrv_2, i32 %output_3_0" [../src/hls/cnn.cpp:168]   --->   Operation 43 'insertvalue' 'mrv_3' <Predicate = (icmp_ln157)> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%ret_ln168 = ret i128 %mrv_3" [../src/hls/cnn.cpp:168]   --->   Operation 44 'ret' 'ret_ln168' <Predicate = (icmp_ln157)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 6.01>
ST_3 : Operation 45 [1/1] (0.00ns)   --->   "%ii = phi i5 %add_ln159, void %.split, i5 0, void %.split2" [../src/hls/cnn.cpp:159]   --->   Operation 45 'phi' 'ii' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 46 [1/1] (0.00ns)   --->   "%add108 = phi i32 %add, void %.split, i32 %tmp, void %.split2" [../src/hls/cnn.cpp:161]   --->   Operation 46 'phi' 'add108' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 47 [1/1] (0.87ns)   --->   "%add_ln159 = add i5 %ii, i5 1" [../src/hls/cnn.cpp:159]   --->   Operation 47 'add' 'add_ln159' <Predicate = true> <Delay = 0.87> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 48 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 48 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 49 [1/1] (0.87ns)   --->   "%icmp_ln159 = icmp_eq  i5 %ii, i5 16" [../src/hls/cnn.cpp:159]   --->   Operation 49 'icmp' 'icmp_ln159' <Predicate = true> <Delay = 0.87> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 50 [1/1] (0.00ns)   --->   "%empty_53 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 16, i64 16, i64 16"   --->   Operation 50 'speclooptripcount' 'empty_53' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 51 [1/1] (0.00ns)   --->   "%br_ln159 = br i1 %icmp_ln159, void %.split, void %._crit_edge.loopexit" [../src/hls/cnn.cpp:159]   --->   Operation 51 'br' 'br_ln159' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 52 [1/1] (0.00ns)   --->   "%ii_cast4 = zext i5 %ii" [../src/hls/cnn.cpp:159]   --->   Operation 52 'zext' 'ii_cast4' <Predicate = (!icmp_ln159)> <Delay = 0.00>
ST_3 : Operation 53 [1/1] (0.00ns)   --->   "%input_addr = getelementptr i32 %input_r, i64 0, i64 %ii_cast4" [../src/hls/cnn.cpp:161]   --->   Operation 53 'getelementptr' 'input_addr' <Predicate = (!icmp_ln159)> <Delay = 0.00>
ST_3 : Operation 54 [2/2] (0.79ns)   --->   "%input_load = load i4 %input_addr" [../src/hls/cnn.cpp:161]   --->   Operation 54 'load' 'input_load' <Predicate = (!icmp_ln159)> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_3 : Operation 55 [1/1] (0.00ns)   --->   "%trunc_ln161 = trunc i5 %ii" [../src/hls/cnn.cpp:161]   --->   Operation 55 'trunc' 'trunc_ln161' <Predicate = (!icmp_ln159)> <Delay = 0.00>
ST_3 : Operation 56 [1/1] (0.00ns)   --->   "%shl_ln = bitconcatenate i6 @_ssdm_op_BitConcatenate.i6.i4.i2, i4 %trunc_ln161, i2 0" [../src/hls/cnn.cpp:161]   --->   Operation 56 'bitconcatenate' 'shl_ln' <Predicate = (!icmp_ln159)> <Delay = 0.00>
ST_3 : Operation 57 [1/1] (0.88ns)   --->   "%add_ln161 = add i6 %shl_ln, i6 %zext_ln157" [../src/hls/cnn.cpp:161]   --->   Operation 57 'add' 'add_ln161' <Predicate = (!icmp_ln159)> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 58 [1/1] (0.00ns)   --->   "%zext_ln161 = zext i6 %add_ln161" [../src/hls/cnn.cpp:161]   --->   Operation 58 'zext' 'zext_ln161' <Predicate = (!icmp_ln159)> <Delay = 0.00>
ST_3 : Operation 59 [1/1] (0.00ns)   --->   "%layer_12_weights_addr = getelementptr i32 %layer_12_weights, i64 0, i64 %zext_ln161" [../src/hls/cnn.cpp:161]   --->   Operation 59 'getelementptr' 'layer_12_weights_addr' <Predicate = (!icmp_ln159)> <Delay = 0.00>
ST_3 : Operation 60 [2/2] (1.35ns)   --->   "%layer_12_weights_load = load i6 %layer_12_weights_addr" [../src/hls/cnn.cpp:161]   --->   Operation 60 'load' 'layer_12_weights_load' <Predicate = (!icmp_ln159)> <Delay = 1.35> <CoreInst = "ROM">   --->   Core 101 'ROM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 64> <ROM>

State 4 <SV = 3> <Delay = 6.02>
ST_4 : Operation 61 [1/2] (0.79ns)   --->   "%input_load = load i4 %input_addr" [../src/hls/cnn.cpp:161]   --->   Operation 61 'load' 'input_load' <Predicate = (!icmp_ln159)> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_4 : Operation 62 [1/2] (1.35ns)   --->   "%layer_12_weights_load = load i6 %layer_12_weights_addr" [../src/hls/cnn.cpp:161]   --->   Operation 62 'load' 'layer_12_weights_load' <Predicate = (!icmp_ln159)> <Delay = 1.35> <CoreInst = "ROM">   --->   Core 101 'ROM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 64> <ROM>
ST_4 : Operation 63 [4/4] (4.67ns)   --->   "%mul7 = fmul i32 %input_load, i32 %layer_12_weights_load" [../src/hls/cnn.cpp:161]   --->   Operation 63 'fmul' 'mul7' <Predicate = (!icmp_ln159)> <Delay = 4.67> <CoreInst = "FMul_maxdsp">   --->   Core 30 'FMul_maxdsp' <Latency = 3> <II = 1> <Delay = 4.67> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 4.67>
ST_5 : Operation 64 [3/4] (4.67ns)   --->   "%mul7 = fmul i32 %input_load, i32 %layer_12_weights_load" [../src/hls/cnn.cpp:161]   --->   Operation 64 'fmul' 'mul7' <Predicate = (!icmp_ln159)> <Delay = 4.67> <CoreInst = "FMul_maxdsp">   --->   Core 30 'FMul_maxdsp' <Latency = 3> <II = 1> <Delay = 4.67> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 4.67>
ST_6 : Operation 65 [2/4] (4.67ns)   --->   "%mul7 = fmul i32 %input_load, i32 %layer_12_weights_load" [../src/hls/cnn.cpp:161]   --->   Operation 65 'fmul' 'mul7' <Predicate = (!icmp_ln159)> <Delay = 4.67> <CoreInst = "FMul_maxdsp">   --->   Core 30 'FMul_maxdsp' <Latency = 3> <II = 1> <Delay = 4.67> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 4.67>
ST_7 : Operation 66 [1/4] (4.67ns)   --->   "%mul7 = fmul i32 %input_load, i32 %layer_12_weights_load" [../src/hls/cnn.cpp:161]   --->   Operation 66 'fmul' 'mul7' <Predicate = (!icmp_ln159)> <Delay = 4.67> <CoreInst = "FMul_maxdsp">   --->   Core 30 'FMul_maxdsp' <Latency = 3> <II = 1> <Delay = 4.67> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 6.01>
ST_8 : Operation 67 [5/5] (6.01ns)   --->   "%add = fadd i32 %add108, i32 %mul7" [../src/hls/cnn.cpp:161]   --->   Operation 67 'fadd' 'add' <Predicate = (!icmp_ln159)> <Delay = 6.01> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 4> <II = 1> <Delay = 6.01> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 12.0>
ST_9 : Operation 68 [4/5] (6.01ns)   --->   "%add = fadd i32 %add108, i32 %mul7" [../src/hls/cnn.cpp:161]   --->   Operation 68 'fadd' 'add' <Predicate = (!icmp_ln159)> <Delay = 6.01> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 4> <II = 1> <Delay = 6.01> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 9> <Delay = 12.0>
ST_10 : Operation 69 [3/5] (6.01ns)   --->   "%add = fadd i32 %add108, i32 %mul7" [../src/hls/cnn.cpp:161]   --->   Operation 69 'fadd' 'add' <Predicate = (!icmp_ln159)> <Delay = 6.01> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 4> <II = 1> <Delay = 6.01> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 10> <Delay = 12.0>
ST_11 : Operation 70 [2/5] (6.01ns)   --->   "%add = fadd i32 %add108, i32 %mul7" [../src/hls/cnn.cpp:161]   --->   Operation 70 'fadd' 'add' <Predicate = (!icmp_ln159)> <Delay = 6.01> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 4> <II = 1> <Delay = 6.01> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 11> <Delay = 12.0>
ST_12 : Operation 71 [1/1] (0.00ns)   --->   "%specloopname_ln159 = specloopname void @_ssdm_op_SpecLoopName, void @empty_2" [../src/hls/cnn.cpp:159]   --->   Operation 71 'specloopname' 'specloopname_ln159' <Predicate = (!icmp_ln159)> <Delay = 0.00>
ST_12 : Operation 72 [1/5] (6.01ns)   --->   "%add = fadd i32 %add108, i32 %mul7" [../src/hls/cnn.cpp:161]   --->   Operation 72 'fadd' 'add' <Predicate = (!icmp_ln159)> <Delay = 6.01> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 4> <II = 1> <Delay = 6.01> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 73 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 73 'br' 'br_ln0' <Predicate = (!icmp_ln159)> <Delay = 0.00>

State 13 <SV = 3> <Delay = 1.56>
ST_13 : Operation 74 [1/1] (0.51ns)   --->   "%icmp_ln161 = icmp_eq  i2 %empty_52, i2 0" [../src/hls/cnn.cpp:161]   --->   Operation 74 'icmp' 'icmp_ln161' <Predicate = true> <Delay = 0.51> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 75 [1/1] (0.00ns) (grouped into LUT with out node select_ln161_1)   --->   "%select_ln161 = select i1 %icmp_ln161, i32 %add108, i32 %output_0_0" [../src/hls/cnn.cpp:161]   --->   Operation 75 'select' 'select_ln161' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_13 : Operation 76 [1/1] (0.51ns)   --->   "%icmp_ln161_1 = icmp_eq  i2 %empty_52, i2 1" [../src/hls/cnn.cpp:161]   --->   Operation 76 'icmp' 'icmp_ln161_1' <Predicate = true> <Delay = 0.51> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 77 [1/1] (0.52ns) (out node of the LUT)   --->   "%select_ln161_1 = select i1 %icmp_ln161_1, i32 %output_0_0, i32 %select_ln161" [../src/hls/cnn.cpp:161]   --->   Operation 77 'select' 'select_ln161_1' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_13 : Operation 78 [1/1] (0.51ns)   --->   "%icmp_ln161_2 = icmp_eq  i2 %empty_52, i2 2" [../src/hls/cnn.cpp:161]   --->   Operation 78 'icmp' 'icmp_ln161_2' <Predicate = true> <Delay = 0.51> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 79 [1/1] (0.00ns) (grouped into LUT with out node select_ln161_4)   --->   "%select_ln161_3 = select i1 %icmp_ln161, i32 %output_3_0, i32 %add108" [../src/hls/cnn.cpp:161]   --->   Operation 79 'select' 'select_ln161_3' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_13 : Operation 80 [1/1] (0.52ns) (out node of the LUT)   --->   "%select_ln161_4 = select i1 %icmp_ln161_1, i32 %output_3_0, i32 %select_ln161_3" [../src/hls/cnn.cpp:161]   --->   Operation 80 'select' 'select_ln161_4' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_13 : Operation 81 [1/1] (0.52ns) (out node of the LUT)   --->   "%empty_57 = select i1 %icmp_ln161_2, i32 %output_3_0, i32 %select_ln161_4" [../src/hls/cnn.cpp:161]   --->   Operation 81 'select' 'empty_57' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 14 <SV = 4> <Delay = 7.14>
ST_14 : Operation 82 [1/1] (0.52ns) (out node of the LUT)   --->   "%empty_54 = select i1 %icmp_ln161_2, i32 %output_0_0, i32 %select_ln161_1" [../src/hls/cnn.cpp:161]   --->   Operation 82 'select' 'empty_54' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_14 : Operation 83 [1/1] (0.00ns) (grouped into LUT with out node empty_55)   --->   "%select_ln161_2 = select i1 %icmp_ln161_1, i32 %add108, i32 %output_1_0" [../src/hls/cnn.cpp:161]   --->   Operation 83 'select' 'select_ln161_2' <Predicate = (!icmp_ln161_2)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_14 : Operation 84 [1/1] (0.52ns) (out node of the LUT)   --->   "%empty_55 = select i1 %icmp_ln161_2, i32 %output_1_0, i32 %select_ln161_2" [../src/hls/cnn.cpp:161]   --->   Operation 84 'select' 'empty_55' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_14 : Operation 85 [1/1] (0.52ns)   --->   "%empty_56 = select i1 %icmp_ln161_2, i32 %add108, i32 %output_2_0" [../src/hls/cnn.cpp:161]   --->   Operation 85 'select' 'empty_56' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_14 : Operation 86 [1/1] (0.60ns)   --->   "%tmp_s = mux i32 @_ssdm_op_Mux.ap_auto.4float.i2, i32 -0.0359252, i32 0.10518, i32 -0.0214452, i32 -0.0500885, i2 %empty_52" [../src/hls/cnn.cpp:164]   --->   Operation 86 'mux' 'tmp_s' <Predicate = true> <Delay = 0.60> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.60> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 87 [1/1] (0.60ns)   --->   "%tmp_43 = mux i32 @_ssdm_op_Mux.ap_auto.4float.i2, i32 %empty_54, i32 %empty_55, i32 %empty_56, i32 %empty_57, i2 %empty_52" [../src/hls/cnn.cpp:164]   --->   Operation 87 'mux' 'tmp_43' <Predicate = true> <Delay = 0.60> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.60> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 88 [5/5] (6.01ns)   --->   "%add1 = fadd i32 %tmp_43, i32 %tmp_s" [../src/hls/cnn.cpp:164]   --->   Operation 88 'fadd' 'add1' <Predicate = true> <Delay = 6.01> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 4> <II = 1> <Delay = 6.01> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 15 <SV = 5> <Delay = 6.01>
ST_15 : Operation 89 [4/5] (6.01ns)   --->   "%add1 = fadd i32 %tmp_43, i32 %tmp_s" [../src/hls/cnn.cpp:164]   --->   Operation 89 'fadd' 'add1' <Predicate = true> <Delay = 6.01> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 4> <II = 1> <Delay = 6.01> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 16 <SV = 6> <Delay = 6.01>
ST_16 : Operation 90 [3/5] (6.01ns)   --->   "%add1 = fadd i32 %tmp_43, i32 %tmp_s" [../src/hls/cnn.cpp:164]   --->   Operation 90 'fadd' 'add1' <Predicate = true> <Delay = 6.01> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 4> <II = 1> <Delay = 6.01> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 17 <SV = 7> <Delay = 6.01>
ST_17 : Operation 91 [2/5] (6.01ns)   --->   "%add1 = fadd i32 %tmp_43, i32 %tmp_s" [../src/hls/cnn.cpp:164]   --->   Operation 91 'fadd' 'add1' <Predicate = true> <Delay = 6.01> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 4> <II = 1> <Delay = 6.01> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 18 <SV = 8> <Delay = 6.01>
ST_18 : Operation 92 [1/5] (6.01ns)   --->   "%add1 = fadd i32 %tmp_43, i32 %tmp_s" [../src/hls/cnn.cpp:164]   --->   Operation 92 'fadd' 'add1' <Predicate = true> <Delay = 6.01> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 4> <II = 1> <Delay = 6.01> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 19 <SV = 9> <Delay = 3.34>
ST_19 : Operation 93 [2/2] (3.34ns)   --->   "%tmp_45 = fcmp_ogt  i32 %add1, i32 0" [../src/hls/cnn.cpp:49]   --->   Operation 93 'fcmp' 'tmp_45' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 20 <SV = 10> <Delay = 4.92>
ST_20 : Operation 94 [1/1] (0.00ns)   --->   "%bitcast_ln49 = bitcast i32 %add1" [../src/hls/cnn.cpp:49]   --->   Operation 94 'bitcast' 'bitcast_ln49' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 95 [1/1] (0.00ns)   --->   "%tmp_44 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln49, i32 23, i32 30" [../src/hls/cnn.cpp:49]   --->   Operation 95 'partselect' 'tmp_44' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 96 [1/1] (0.00ns)   --->   "%trunc_ln49 = trunc i32 %bitcast_ln49" [../src/hls/cnn.cpp:49]   --->   Operation 96 'trunc' 'trunc_ln49' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 97 [1/1] (0.85ns)   --->   "%icmp_ln49 = icmp_ne  i8 %tmp_44, i8 255" [../src/hls/cnn.cpp:49]   --->   Operation 97 'icmp' 'icmp_ln49' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 98 [1/1] (0.97ns)   --->   "%icmp_ln49_6 = icmp_eq  i23 %trunc_ln49, i23 0" [../src/hls/cnn.cpp:49]   --->   Operation 98 'icmp' 'icmp_ln49_6' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 99 [1/1] (0.00ns) (grouped into LUT with out node select_ln49)   --->   "%or_ln49 = or i1 %icmp_ln49_6, i1 %icmp_ln49" [../src/hls/cnn.cpp:49]   --->   Operation 99 'or' 'or_ln49' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 100 [1/2] (3.34ns)   --->   "%tmp_45 = fcmp_ogt  i32 %add1, i32 0" [../src/hls/cnn.cpp:49]   --->   Operation 100 'fcmp' 'tmp_45' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 101 [1/1] (0.00ns) (grouped into LUT with out node select_ln49)   --->   "%and_ln49 = and i1 %or_ln49, i1 %tmp_45" [../src/hls/cnn.cpp:49]   --->   Operation 101 'and' 'and_ln49' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 102 [1/1] (0.52ns) (out node of the LUT)   --->   "%select_ln49 = select i1 %and_ln49, i32 %add1, i32 0" [../src/hls/cnn.cpp:49]   --->   Operation 102 'select' 'select_ln49' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_20 : Operation 103 [1/1] (0.00ns) (grouped into LUT with out node select_ln49_4)   --->   "%select_ln49_3 = select i1 %icmp_ln161, i32 %empty_57, i32 %select_ln49" [../src/hls/cnn.cpp:49]   --->   Operation 103 'select' 'select_ln49_3' <Predicate = (!icmp_ln161_2 & !icmp_ln161_1)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_20 : Operation 104 [1/1] (0.52ns) (out node of the LUT)   --->   "%select_ln49_4 = select i1 %icmp_ln161_1, i32 %empty_57, i32 %select_ln49_3" [../src/hls/cnn.cpp:49]   --->   Operation 104 'select' 'select_ln49_4' <Predicate = (!icmp_ln161_2)> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_20 : Operation 105 [1/1] (0.52ns) (out node of the LUT)   --->   "%output_3_2 = select i1 %icmp_ln161_2, i32 %output_3_0, i32 %select_ln49_4" [../src/hls/cnn.cpp:161]   --->   Operation 105 'select' 'output_3_2' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_20 : Operation 106 [1/1] (0.52ns)   --->   "%output_2_2 = select i1 %icmp_ln161_2, i32 %select_ln49, i32 %output_2_0" [../src/hls/cnn.cpp:161]   --->   Operation 106 'select' 'output_2_2' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_20 : Operation 107 [1/1] (0.00ns) (grouped into LUT with out node output_1_2)   --->   "%select_ln49_5 = select i1 %icmp_ln161_1, i32 %select_ln49, i32 %empty_55" [../src/hls/cnn.cpp:49]   --->   Operation 107 'select' 'select_ln49_5' <Predicate = (!icmp_ln161_2)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_20 : Operation 108 [1/1] (0.52ns) (out node of the LUT)   --->   "%output_1_2 = select i1 %icmp_ln161_2, i32 %output_1_0, i32 %select_ln49_5" [../src/hls/cnn.cpp:161]   --->   Operation 108 'select' 'output_1_2' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_20 : Operation 109 [1/1] (0.00ns) (grouped into LUT with out node select_ln49_7)   --->   "%select_ln49_6 = select i1 %icmp_ln161, i32 %select_ln49, i32 %empty_54" [../src/hls/cnn.cpp:49]   --->   Operation 109 'select' 'select_ln49_6' <Predicate = (!icmp_ln161_2 & !icmp_ln161_1)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_20 : Operation 110 [1/1] (0.52ns) (out node of the LUT)   --->   "%select_ln49_7 = select i1 %icmp_ln161_1, i32 %empty_54, i32 %select_ln49_6" [../src/hls/cnn.cpp:49]   --->   Operation 110 'select' 'select_ln49_7' <Predicate = (!icmp_ln161_2)> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_20 : Operation 111 [1/1] (0.52ns) (out node of the LUT)   --->   "%output_0_2 = select i1 %icmp_ln161_2, i32 %output_0_0, i32 %select_ln49_7" [../src/hls/cnn.cpp:161]   --->   Operation 111 'select' 'output_0_2' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_20 : Operation 112 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 112 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 0.489ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('output_0_0', ../src/hls/cnn.cpp:152) with incoming values : ('output[0]', ../src/hls/cnn.cpp:152) ('output_0_2', ../src/hls/cnn.cpp:161) [14]  (0.489 ns)

 <State 2>: 0.746ns
The critical path consists of the following:
	'phi' operation ('i', ../src/hls/cnn.cpp:157) with incoming values : ('add_ln157', ../src/hls/cnn.cpp:157) [18]  (0 ns)
	'add' operation ('add_ln157', ../src/hls/cnn.cpp:157) [19]  (0.746 ns)

 <State 3>: 6.02ns
The critical path consists of the following:
	'phi' operation ('add108', ../src/hls/cnn.cpp:161) with incoming values : ('tmp', ../src/hls/cnn.cpp:161) ('add', ../src/hls/cnn.cpp:161) [31]  (0 ns)
	'fadd' operation ('add', ../src/hls/cnn.cpp:161) [49]  (6.02 ns)

 <State 4>: 6.02ns
The critical path consists of the following:
	'load' operation ('layer_12_weights_load', ../src/hls/cnn.cpp:161) on array 'layer_12_weights' [47]  (1.35 ns)
	'fmul' operation ('mul7', ../src/hls/cnn.cpp:161) [48]  (4.67 ns)

 <State 5>: 4.67ns
The critical path consists of the following:
	'fmul' operation ('mul7', ../src/hls/cnn.cpp:161) [48]  (4.67 ns)

 <State 6>: 4.67ns
The critical path consists of the following:
	'fmul' operation ('mul7', ../src/hls/cnn.cpp:161) [48]  (4.67 ns)

 <State 7>: 4.67ns
The critical path consists of the following:
	'fmul' operation ('mul7', ../src/hls/cnn.cpp:161) [48]  (4.67 ns)

 <State 8>: 6.02ns
The critical path consists of the following:
	'fadd' operation ('add', ../src/hls/cnn.cpp:161) [49]  (6.02 ns)

 <State 9>: 12ns
The critical path consists of the following:
	'fadd' operation ('add', ../src/hls/cnn.cpp:161) [49]  (6.02 ns)
	'phi' operation ('add108', ../src/hls/cnn.cpp:161) with incoming values : ('tmp', ../src/hls/cnn.cpp:161) ('add', ../src/hls/cnn.cpp:161) [31]  (0 ns)
	'fadd' operation ('add', ../src/hls/cnn.cpp:161) [49]  (6.02 ns)

 <State 10>: 12ns
The critical path consists of the following:
	'fadd' operation ('add', ../src/hls/cnn.cpp:161) [49]  (6.02 ns)
	'phi' operation ('add108', ../src/hls/cnn.cpp:161) with incoming values : ('tmp', ../src/hls/cnn.cpp:161) ('add', ../src/hls/cnn.cpp:161) [31]  (0 ns)
	'fadd' operation ('add', ../src/hls/cnn.cpp:161) [49]  (6.02 ns)

 <State 11>: 12ns
The critical path consists of the following:
	'fadd' operation ('add', ../src/hls/cnn.cpp:161) [49]  (6.02 ns)
	'phi' operation ('add108', ../src/hls/cnn.cpp:161) with incoming values : ('tmp', ../src/hls/cnn.cpp:161) ('add', ../src/hls/cnn.cpp:161) [31]  (0 ns)
	'fadd' operation ('add', ../src/hls/cnn.cpp:161) [49]  (6.02 ns)

 <State 12>: 12ns
The critical path consists of the following:
	'fadd' operation ('add', ../src/hls/cnn.cpp:161) [49]  (6.02 ns)
	'phi' operation ('add108', ../src/hls/cnn.cpp:161) with incoming values : ('tmp', ../src/hls/cnn.cpp:161) ('add', ../src/hls/cnn.cpp:161) [31]  (0 ns)
	'fadd' operation ('add', ../src/hls/cnn.cpp:161) [49]  (6.02 ns)

 <State 13>: 1.56ns
The critical path consists of the following:
	'icmp' operation ('icmp_ln161', ../src/hls/cnn.cpp:161) [52]  (0.512 ns)
	'select' operation ('select_ln161_3', ../src/hls/cnn.cpp:161) [61]  (0 ns)
	'select' operation ('select_ln161_4', ../src/hls/cnn.cpp:161) [62]  (0.525 ns)
	'select' operation ('empty_57', ../src/hls/cnn.cpp:161) [63]  (0.525 ns)

 <State 14>: 7.15ns
The critical path consists of the following:
	'select' operation ('empty_54', ../src/hls/cnn.cpp:161) [57]  (0.525 ns)
	'mux' operation ('tmp_43', ../src/hls/cnn.cpp:164) [65]  (0.605 ns)
	'fadd' operation ('add1', ../src/hls/cnn.cpp:164) [66]  (6.02 ns)

 <State 15>: 6.02ns
The critical path consists of the following:
	'fadd' operation ('add1', ../src/hls/cnn.cpp:164) [66]  (6.02 ns)

 <State 16>: 6.02ns
The critical path consists of the following:
	'fadd' operation ('add1', ../src/hls/cnn.cpp:164) [66]  (6.02 ns)

 <State 17>: 6.02ns
The critical path consists of the following:
	'fadd' operation ('add1', ../src/hls/cnn.cpp:164) [66]  (6.02 ns)

 <State 18>: 6.02ns
The critical path consists of the following:
	'fadd' operation ('add1', ../src/hls/cnn.cpp:164) [66]  (6.02 ns)

 <State 19>: 3.35ns
The critical path consists of the following:
	'fcmp' operation ('tmp_45', ../src/hls/cnn.cpp:49) [73]  (3.35 ns)

 <State 20>: 4.92ns
The critical path consists of the following:
	'fcmp' operation ('tmp_45', ../src/hls/cnn.cpp:49) [73]  (3.35 ns)
	'and' operation ('and_ln49', ../src/hls/cnn.cpp:49) [74]  (0 ns)
	'select' operation ('select_ln49', ../src/hls/cnn.cpp:49) [75]  (0.525 ns)
	'select' operation ('select_ln49_3', ../src/hls/cnn.cpp:49) [76]  (0 ns)
	'select' operation ('select_ln49_4', ../src/hls/cnn.cpp:49) [77]  (0.525 ns)
	'select' operation ('output_3_2', ../src/hls/cnn.cpp:161) [78]  (0.525 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
