-- ==============================================================
-- Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity infer_conv2d_1_layer_2_weights_rom is 
    generic(
             DWIDTH     : integer := 32; 
             AWIDTH     : integer := 9; 
             MEM_SIZE    : integer := 288
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of infer_conv2d_1_layer_2_weights_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "00111101111010010101110111110110", 
    1 => "00111110001100111101001001001000", 
    2 => "10111101001111100011001111110001", 
    3 => "10111110101001011001010110101010", 
    4 => "10111110000000000101101000101011", 
    5 => "00111101100100100101111011111100", 
    6 => "00111011110111000101101111000000", 
    7 => "10111110000010011010011011000010", 
    8 => "10111110010011011010000011110011", 
    9 => "10111101111011010001110010000001", 
    10 => "10111101011001001111111001001001", 
    11 => "00111101101110001011000111001100", 
    12 => "10111101000000010111101110010101", 
    13 => "10111101111111000011000101001101", 
    14 => "10111101110111011010110000010101", 
    15 => "00111101101001100000010101110100", 
    16 => "00111110001000111011101101100110", 
    17 => "00111110011100001100001111010111", 
    18 => "00111110001010100101101000010101", 
    19 => "00111101100111111000000000100110", 
    20 => "00111100001111011101110110000000", 
    21 => "10111101011111111011111110100100", 
    22 => "00111100101110010111010000001000", 
    23 => "00111110010010110001000011100001", 
    24 => "00111101001110100111101111101110", 
    25 => "00111110000001110110010010111100", 
    26 => "10111110000100010111010111100100", 
    27 => "10111101101100100110011011001100", 
    28 => "10111101100000001100110100101110", 
    29 => "00111110011110110000110110100100", 
    30 => "00111110100001111110000010011111", 
    31 => "10111110000110111101010010111111", 
    32 => "10111110010010010011100110010011", 
    33 => "00111101111011100010010001011011", 
    34 => "10111110001100001110111000111001", 
    35 => "10111110011000111000101000011011", 
    36 => "00111100101010111101001011110000", 
    37 => "10111101101011010010101101000110", 
    38 => "00111101100010101110100100111110", 
    39 => "10111101100001011111000110100100", 
    40 => "10111101101001100111101101000011", 
    41 => "00111110001010111010001110010100", 
    42 => "00111110001001001001000100000001", 
    43 => "00111110000101101100100010101011", 
    44 => "00111101100000001010101001111001", 
    45 => "00111100110111001011111101001000", 
    46 => "10111101010100001010011011110100", 
    47 => "00111101101000001110110011011010", 
    48 => "00111110010111010111111101010110", 
    49 => "00111110100111011010101110000011", 
    50 => "00111110010010100111100110110110", 
    51 => "00111100001110110111100000000101", 
    52 => "00111101010101110011111001011100", 
    53 => "00111101001100011100010101000111", 
    54 => "00111101010101001010100111100110", 
    55 => "00111110000101010110101011110111", 
    56 => "10111101011011111000010111011010", 
    57 => "00111110000011010111111000011111", 
    58 => "00111101110001101110101000111101", 
    59 => "00111101110110101111100101011001", 
    60 => "00111101110110101101111111110110", 
    61 => "00111110011110001111101011011001", 
    62 => "00111101110101110110110010111111", 
    63 => "10111110100000000100111110000100", 
    64 => "10111101100010000110111111001010", 
    65 => "00111110010010000010111001011000", 
    66 => "00111110000111100010110011101000", 
    67 => "00111110000111101010100010100001", 
    68 => "00111101010101001100000111011100", 
    69 => "00111101011011001001011111001100", 
    70 => "10111101001111001011000000001010", 
    71 => "00111101110010100101000101110000", 
    72 => "00111110001001110101100111010010", 
    73 => "00111110000010100010011010111100", 
    74 => "00111110000001000100000000011001", 
    75 => "10111101110111000101100000001110", 
    76 => "10111110000000000101101111111101", 
    77 => "10111101001010100110100001101100", 
    78 => "10111110000000000001010001001111", 
    79 => "00111110000100000101101010000101", 
    80 => "10111101011111101101101010001000", 
    81 => "00111110011010011100011011000010", 
    82 => "00111110010001111000100011101100", 
    83 => "00111101100110101001110000101111", 
    84 => "10111101100011011000110001100101", 
    85 => "10111101100101101110101110011010", 
    86 => "10111110000011001011001100001010", 
    87 => "10111110000101111111010101100111", 
    88 => "10111110100011010000001011110111", 
    89 => "00111101111101011011110011111010", 
    90 => "10111101101100011110001000100101", 
    91 => "10111101011100110100000010010100", 
    92 => "10111101111011111011001010000010", 
    93 => "00111101111010111100111000000110", 
    94 => "00111101011101001000111110110011", 
    95 => "10111100011011001011110111110001", 
    96 => "00111110010001000110011110000111", 
    97 => "10111101101011001001100001000101", 
    98 => "10111110011110111111111100101010", 
    99 => "10111110001001000011011100010011", 
    100 => "00111100100100000011101011010000", 
    101 => "10111011110010000000101000000000", 
    102 => "00111100010101010010101101110000", 
    103 => "10111100000001111110000010010000", 
    104 => "00111101100010101101100011100001", 
    105 => "00111110001010010011011101001010", 
    106 => "00111101111001110000111011010001", 
    107 => "00111011000010110010100011000010", 
    108 => "00111101100010001100101011000000", 
    109 => "10111101001001100110001000100010", 
    110 => "00111101010001001001011101100000", 
    111 => "10111110010010001010010111110000", 
    112 => "00111100011010101011110011000010", 
    113 => "00111110000100010111000000111110", 
    114 => "00111101111001001011011101100100", 
    115 => "10111100111000000010110011000111", 
    116 => "10111101100011011011100011100010", 
    117 => "10111101101101000111101110010111", 
    118 => "10111110000010100100001011111000", 
    119 => "00111101111010111011000101001000", 
    120 => "10111100111010111101111000001110", 
    121 => "10111110010111000000001001000011", 
    122 => "10111101100001111110001011111110", 
    123 => "10111110000110000010110111110100", 
    124 => "00111101011010011111000010010100", 
    125 => "10111101101000111111000001001000", 
    126 => "00111110001110100001001001110011", 
    127 => "10111110000110001101011100011011", 
    128 => "00111110000001001111110100110001", 
    129 => "10111101110000111100100100101011", 
    130 => "00111101011001010001010001000110", 
    131 => "00111110001000111001100011111010", 
    132 => "10111101111110111101110101110001", 
    133 => "00111100110000001111010111101000", 
    134 => "00111101101111010010001011011000", 
    135 => "10111100000001100100011101100000", 
    136 => "00111110011101100000100111100110", 
    137 => "00111110001000101011100101110011", 
    138 => "10111101000101110010011110001001", 
    139 => "10111011110110000000100110011000", 
    140 => "10111101101100010101010000111111", 
    141 => "00111101001100010000101001011100", 
    142 => "00111100110000000001110101011000", 
    143 => "00111101110010000100101011110010", 
    144 => "00111101100010010100010010101010", 
    145 => "00111110001100011001111100011011", 
    146 => "10111101100100100101011111101011", 
    147 => "00111101100101011001101110101100", 
    148 => "10111101110110110101101110000110", 
    149 => "10111101110110100010001010101010", 
    150 => "00111101100001111001000000100100", 
    151 => "00111101101111100001100110101101", 
    152 => "00111101100111000010111011000100", 
    153 => "00111101001010000010001100110111", 
    154 => "00111101010101100100000010110011", 
    155 => "00111101110011100100011110100111", 
    156 => "00111101111010000011101010111110", 
    157 => "00111101100110001100111101101000", 
    158 => "10111101110010101101110000000010", 
    159 => "00111101011111101100010100011011", 
    160 => "10111110100000100110110110010000", 
    161 => "10111100111100000110000011010110", 
    162 => "00111110010000110111001111011001", 
    163 => "00111110001110110111001111000110", 
    164 => "00111100110100000001001110111000", 
    165 => "10111100000011010011110111100000", 
    166 => "10111101001011111000011000000010", 
    167 => "10111101101111011001000000111000", 
    168 => "00111110001000111100111100000010", 
    169 => "10111101100010111010110110010110", 
    170 => "00111101010101100001101110000000", 
    171 => "00111011111010111110001111100111", 
    172 => "00111101101111001010110011101110", 
    173 => "10111101000001011101101101010100", 
    174 => "10111110000001010011110010010000", 
    175 => "00111110001011101010001100011010", 
    176 => "00111010011011110011101011001010", 
    177 => "00111011001111000100000001011011", 
    178 => "00111101010010101111010001000011", 
    179 => "00111101011110100100100111110100", 
    180 => "10111100111011001110100011011100", 
    181 => "00111101000010010000101000000111", 
    182 => "10111101001110111011000110000111", 
    183 => "00111101000100110101010101110100", 
    184 => "10111110011110000111011010010100", 
    185 => "10111101100000000010001111010100", 
    186 => "00111101011010000111110000010010", 
    187 => "10111110000110010101010100100111", 
    188 => "10111101110111010001110010011110", 
    189 => "00111110001011101100100101100011", 
    190 => "10111110010100001001000011000001", 
    191 => "00111101100011101101000011011010", 
    192 => "00111110000110101100001101101100", 
    193 => "00111101010110100100010100000011", 
    194 => "10111101111001110000001110011110", 
    195 => "00111101101011001110111111011000", 
    196 => "10111101001000011111001011000100", 
    197 => "10111101101010100100101100100100", 
    198 => "10111101110000001100101001110101", 
    199 => "00111101000001100111111111010000", 
    200 => "00111110010010101111001010110111", 
    201 => "00111101010100100100100001000110", 
    202 => "10111101110001010011101101111001", 
    203 => "00111110000111110001111000001001", 
    204 => "10111101000011110110010000101110", 
    205 => "00111101011111100110100010010000", 
    206 => "10111110000011011000000110001111", 
    207 => "10111110101000001001110101000010", 
    208 => "10111101010110001010100100101110", 
    209 => "10111110001100000111011000110000", 
    210 => "00111101010000001110101101010101", 
    211 => "10111100111001000001001011111110", 
    212 => "10111101110000000110110011011101", 
    213 => "00111101111011111111001111001010", 
    214 => "10111101010000010010110000011100", 
    215 => "10111101101001111001011010101111", 
    216 => "00111110010001101100000000001111", 
    217 => "10111110100101101010000110000100", 
    218 => "00111101100101011001011100000010", 
    219 => "10111101100111000110101000010011", 
    220 => "10111110000010100000111100001100", 
    221 => "10111110110001010100101001010011", 
    222 => "10111110001101011100001101101000", 
    223 => "00111110011100101110011001000110", 
    224 => "00111101110011000010000011101000", 
    225 => "10111110101100100101100110010101", 
    226 => "00111010110100111010111110001110", 
    227 => "00111100011011011101101010011011", 
    228 => "00111101110010010001001110011000", 
    229 => "00111100011100100110001101100000", 
    230 => "10111101010100000111110110001110", 
    231 => "10111101110000001110010111101101", 
    232 => "00111110000000010001111011000110", 
    233 => "10111101001000000011001100001001", 
    234 => "00111101111101000001101100111011", 
    235 => "00111110000110011000110100101100", 
    236 => "10111100010011110100000010011111", 
    237 => "10111101101010100010011000111001", 
    238 => "10111011010001000011000110000000", 
    239 => "10111101101100010000001110011110", 
    240 => "00111101110111000111100011010111", 
    241 => "10111110101100000000101000101011", 
    242 => "00111110000010001100001011011010", 
    243 => "10111010011000000100000110111110", 
    244 => "00111101001101110011000100101000", 
    245 => "10111101100010001110100110010011", 
    246 => "00111101101000010010100000000101", 
    247 => "00111101110100010000011100011111", 
    248 => "00111110100001000101011110010001", 
    249 => "10111100100111100011001010001011", 
    250 => "10111101111101100001001101001100", 
    251 => "10111101000100110011010001010001", 
    252 => "00111100001111010001111110100000", 
    253 => "10111101100110010000100011000011", 
    254 => "10111110000100111101011110000010", 
    255 => "00111101110110100001110010101111", 
    256 => "10111110001111001001000001010110", 
    257 => "10111101100010011111010010000001", 
    258 => "00111101001100011001011000000010", 
    259 => "00111110000011000101100100010000", 
    260 => "10111101101011011010010010011010", 
    261 => "10111110000011110100100000101000", 
    262 => "10111101011100000011101010001000", 
    263 => "10111101101100010010101110000010", 
    264 => "10111101101011010101111000101110", 
    265 => "10111101100101011001001010100011", 
    266 => "10111101001000111011111111100000", 
    267 => "00111101011001001001110100001000", 
    268 => "10111100011110000011001000111011", 
    269 => "00111101011110011011111000000000", 
    270 => "00111011100111010111111101100000", 
    271 => "00111101101111011110001010010010", 
    272 => "00111101111111000110011100001000", 
    273 => "10111110110010011011100111100000", 
    274 => "00111101011100010000100001001010", 
    275 => "00111101111011001101110010101111", 
    276 => "10111101100000001100111000011011", 
    277 => "00111101000000001100111000000000", 
    278 => "00111100110010011101100010101001", 
    279 => "10111101110010010101010110010011", 
    280 => "00111110011101101100101001010010", 
    281 => "00111110000010010100001110010000", 
    282 => "10111101100101011010011011100001", 
    283 => "00111101000010011101111100111000", 
    284 => "10111100100101111111101101101100", 
    285 => "10111110010101110110100111001001", 
    286 => "10111101101000011011010111000000", 
    287 => "00111101111011110010011111101101" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity infer_conv2d_1_layer_2_weights is
    generic (
        DataWidth : INTEGER := 32;
        AddressRange : INTEGER := 288;
        AddressWidth : INTEGER := 9);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of infer_conv2d_1_layer_2_weights is
    component infer_conv2d_1_layer_2_weights_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    infer_conv2d_1_layer_2_weights_rom_U :  component infer_conv2d_1_layer_2_weights_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


