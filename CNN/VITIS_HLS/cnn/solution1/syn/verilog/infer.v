// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="infer_infer,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu3eg-sbva484-1-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=12.036000,HLS_SYN_LAT=37038382,HLS_SYN_TPT=none,HLS_SYN_MEM=458,HLS_SYN_DSP=0,HLS_SYN_FF=7474,HLS_SYN_LUT=13130,HLS_VERSION=2020_2}" *)

module infer (
        ap_clk,
        ap_rst_n,
        infer_input_V_TDATA,
        infer_input_V_TVALID,
        infer_input_V_TREADY,
        infer_output_V_TDATA,
        infer_output_V_TVALID,
        infer_output_V_TREADY,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 124'd1;
parameter    ap_ST_fsm_pp0_stage0 = 124'd2;
parameter    ap_ST_fsm_state8 = 124'd4;
parameter    ap_ST_fsm_pp1_stage0 = 124'd8;
parameter    ap_ST_fsm_state22 = 124'd16;
parameter    ap_ST_fsm_state23 = 124'd32;
parameter    ap_ST_fsm_state24 = 124'd64;
parameter    ap_ST_fsm_state25 = 124'd128;
parameter    ap_ST_fsm_state26 = 124'd256;
parameter    ap_ST_fsm_state27 = 124'd512;
parameter    ap_ST_fsm_state28 = 124'd1024;
parameter    ap_ST_fsm_state29 = 124'd2048;
parameter    ap_ST_fsm_state30 = 124'd4096;
parameter    ap_ST_fsm_state31 = 124'd8192;
parameter    ap_ST_fsm_state32 = 124'd16384;
parameter    ap_ST_fsm_state33 = 124'd32768;
parameter    ap_ST_fsm_state34 = 124'd65536;
parameter    ap_ST_fsm_state35 = 124'd131072;
parameter    ap_ST_fsm_state36 = 124'd262144;
parameter    ap_ST_fsm_state37 = 124'd524288;
parameter    ap_ST_fsm_state38 = 124'd1048576;
parameter    ap_ST_fsm_state39 = 124'd2097152;
parameter    ap_ST_fsm_state40 = 124'd4194304;
parameter    ap_ST_fsm_state41 = 124'd8388608;
parameter    ap_ST_fsm_state42 = 124'd16777216;
parameter    ap_ST_fsm_state43 = 124'd33554432;
parameter    ap_ST_fsm_state44 = 124'd67108864;
parameter    ap_ST_fsm_state45 = 124'd134217728;
parameter    ap_ST_fsm_state46 = 124'd268435456;
parameter    ap_ST_fsm_state47 = 124'd536870912;
parameter    ap_ST_fsm_state48 = 124'd1073741824;
parameter    ap_ST_fsm_state49 = 124'd2147483648;
parameter    ap_ST_fsm_state50 = 124'd4294967296;
parameter    ap_ST_fsm_state51 = 124'd8589934592;
parameter    ap_ST_fsm_state52 = 124'd17179869184;
parameter    ap_ST_fsm_state53 = 124'd34359738368;
parameter    ap_ST_fsm_state54 = 124'd68719476736;
parameter    ap_ST_fsm_pp6_stage0 = 124'd137438953472;
parameter    ap_ST_fsm_pp6_stage1 = 124'd274877906944;
parameter    ap_ST_fsm_pp6_stage2 = 124'd549755813888;
parameter    ap_ST_fsm_pp6_stage3 = 124'd1099511627776;
parameter    ap_ST_fsm_pp6_stage4 = 124'd2199023255552;
parameter    ap_ST_fsm_pp6_stage5 = 124'd4398046511104;
parameter    ap_ST_fsm_pp6_stage6 = 124'd8796093022208;
parameter    ap_ST_fsm_pp6_stage7 = 124'd17592186044416;
parameter    ap_ST_fsm_pp6_stage8 = 124'd35184372088832;
parameter    ap_ST_fsm_pp6_stage9 = 124'd70368744177664;
parameter    ap_ST_fsm_pp6_stage10 = 124'd140737488355328;
parameter    ap_ST_fsm_pp6_stage11 = 124'd281474976710656;
parameter    ap_ST_fsm_pp6_stage12 = 124'd562949953421312;
parameter    ap_ST_fsm_pp6_stage13 = 124'd1125899906842624;
parameter    ap_ST_fsm_pp6_stage14 = 124'd2251799813685248;
parameter    ap_ST_fsm_pp6_stage15 = 124'd4503599627370496;
parameter    ap_ST_fsm_pp6_stage16 = 124'd9007199254740992;
parameter    ap_ST_fsm_pp6_stage17 = 124'd18014398509481984;
parameter    ap_ST_fsm_pp6_stage18 = 124'd36028797018963968;
parameter    ap_ST_fsm_pp6_stage19 = 124'd72057594037927936;
parameter    ap_ST_fsm_pp6_stage20 = 124'd144115188075855872;
parameter    ap_ST_fsm_pp6_stage21 = 124'd288230376151711744;
parameter    ap_ST_fsm_pp6_stage22 = 124'd576460752303423488;
parameter    ap_ST_fsm_pp6_stage23 = 124'd1152921504606846976;
parameter    ap_ST_fsm_pp6_stage24 = 124'd2305843009213693952;
parameter    ap_ST_fsm_pp6_stage25 = 124'd4611686018427387904;
parameter    ap_ST_fsm_pp6_stage26 = 124'd9223372036854775808;
parameter    ap_ST_fsm_pp6_stage27 = 124'd18446744073709551616;
parameter    ap_ST_fsm_pp6_stage28 = 124'd36893488147419103232;
parameter    ap_ST_fsm_pp6_stage29 = 124'd73786976294838206464;
parameter    ap_ST_fsm_pp6_stage30 = 124'd147573952589676412928;
parameter    ap_ST_fsm_pp6_stage31 = 124'd295147905179352825856;
parameter    ap_ST_fsm_pp6_stage32 = 124'd590295810358705651712;
parameter    ap_ST_fsm_pp6_stage33 = 124'd1180591620717411303424;
parameter    ap_ST_fsm_pp6_stage34 = 124'd2361183241434822606848;
parameter    ap_ST_fsm_pp6_stage35 = 124'd4722366482869645213696;
parameter    ap_ST_fsm_pp6_stage36 = 124'd9444732965739290427392;
parameter    ap_ST_fsm_pp6_stage37 = 124'd18889465931478580854784;
parameter    ap_ST_fsm_pp6_stage38 = 124'd37778931862957161709568;
parameter    ap_ST_fsm_pp6_stage39 = 124'd75557863725914323419136;
parameter    ap_ST_fsm_pp6_stage40 = 124'd151115727451828646838272;
parameter    ap_ST_fsm_pp6_stage41 = 124'd302231454903657293676544;
parameter    ap_ST_fsm_pp6_stage42 = 124'd604462909807314587353088;
parameter    ap_ST_fsm_pp6_stage43 = 124'd1208925819614629174706176;
parameter    ap_ST_fsm_pp6_stage44 = 124'd2417851639229258349412352;
parameter    ap_ST_fsm_pp6_stage45 = 124'd4835703278458516698824704;
parameter    ap_ST_fsm_pp6_stage46 = 124'd9671406556917033397649408;
parameter    ap_ST_fsm_pp6_stage47 = 124'd19342813113834066795298816;
parameter    ap_ST_fsm_pp6_stage48 = 124'd38685626227668133590597632;
parameter    ap_ST_fsm_pp6_stage49 = 124'd77371252455336267181195264;
parameter    ap_ST_fsm_pp6_stage50 = 124'd154742504910672534362390528;
parameter    ap_ST_fsm_pp6_stage51 = 124'd309485009821345068724781056;
parameter    ap_ST_fsm_pp6_stage52 = 124'd618970019642690137449562112;
parameter    ap_ST_fsm_pp6_stage53 = 124'd1237940039285380274899124224;
parameter    ap_ST_fsm_pp6_stage54 = 124'd2475880078570760549798248448;
parameter    ap_ST_fsm_pp6_stage55 = 124'd4951760157141521099596496896;
parameter    ap_ST_fsm_pp6_stage56 = 124'd9903520314283042199192993792;
parameter    ap_ST_fsm_pp6_stage57 = 124'd19807040628566084398385987584;
parameter    ap_ST_fsm_pp6_stage58 = 124'd39614081257132168796771975168;
parameter    ap_ST_fsm_pp6_stage59 = 124'd79228162514264337593543950336;
parameter    ap_ST_fsm_pp6_stage60 = 124'd158456325028528675187087900672;
parameter    ap_ST_fsm_pp6_stage61 = 124'd316912650057057350374175801344;
parameter    ap_ST_fsm_pp6_stage62 = 124'd633825300114114700748351602688;
parameter    ap_ST_fsm_pp6_stage63 = 124'd1267650600228229401496703205376;
parameter    ap_ST_fsm_pp6_stage64 = 124'd2535301200456458802993406410752;
parameter    ap_ST_fsm_pp6_stage65 = 124'd5070602400912917605986812821504;
parameter    ap_ST_fsm_pp6_stage66 = 124'd10141204801825835211973625643008;
parameter    ap_ST_fsm_pp6_stage67 = 124'd20282409603651670423947251286016;
parameter    ap_ST_fsm_pp6_stage68 = 124'd40564819207303340847894502572032;
parameter    ap_ST_fsm_pp6_stage69 = 124'd81129638414606681695789005144064;
parameter    ap_ST_fsm_pp6_stage70 = 124'd162259276829213363391578010288128;
parameter    ap_ST_fsm_pp6_stage71 = 124'd324518553658426726783156020576256;
parameter    ap_ST_fsm_pp6_stage72 = 124'd649037107316853453566312041152512;
parameter    ap_ST_fsm_pp6_stage73 = 124'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_pp6_stage74 = 124'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_pp6_stage75 = 124'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_pp6_stage76 = 124'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_pp6_stage77 = 124'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_pp6_stage78 = 124'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_pp6_stage79 = 124'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_pp6_stage80 = 124'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_pp6_stage81 = 124'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_pp6_stage82 = 124'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_pp6_stage83 = 124'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state145 = 124'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_pp7_stage0 = 124'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state149 = 124'd10633823966279326983230456482242756608;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 4;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input  [31:0] infer_input_V_TDATA;
input   infer_input_V_TVALID;
output   infer_input_V_TREADY;
output  [31:0] infer_output_V_TDATA;
output   infer_output_V_TVALID;
input   infer_output_V_TREADY;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [123:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
reg   [5:0] layer_12_weights_address0;
reg    layer_12_weights_ce0;
wire   [31:0] layer_12_weights_q0;
reg    infer_input_V_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
wire   [0:0] icmp_ln200_fu_922_p2;
reg    infer_output_V_TDATA_blk_n;
wire    ap_CS_fsm_pp7_stage0;
reg    ap_enable_reg_pp7_iter1;
wire    ap_block_pp7_stage0;
reg   [0:0] icmp_ln315_reg_1940;
reg    ap_enable_reg_pp7_iter2;
reg   [0:0] icmp_ln315_reg_1940_pp7_iter1_reg;
reg   [11:0] i_reg_632;
reg   [11:0] i_reg_632_pp0_iter1_reg;
reg    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
reg    ap_block_pp0_stage0_11001;
reg   [11:0] i_reg_632_pp0_iter2_reg;
reg   [11:0] i_reg_632_pp0_iter3_reg;
reg   [11:0] i_reg_632_pp0_iter4_reg;
reg   [11:0] indvar_flatten_reg_644;
reg   [5:0] i_1_reg_655;
reg   [5:0] ii_reg_666;
reg   [2:0] i_6_reg_721;
reg   [2:0] i_7_reg_733;
wire    ap_CS_fsm_pp6_stage1;
reg    ap_enable_reg_pp6_iter0;
wire    ap_block_state56_pp6_stage1_iter0;
wire    ap_block_state140_pp6_stage1_iter1;
wire    ap_block_pp6_stage1_11001;
reg   [0:0] icmp_ln176_reg_1753;
wire    ap_CS_fsm_pp6_stage4;
wire    ap_block_state59_pp6_stage4_iter0;
wire    ap_block_state143_pp6_stage4_iter1;
wire    ap_block_pp6_stage4_11001;
wire    ap_CS_fsm_pp6_stage7;
wire    ap_block_state62_pp6_stage7_iter0;
wire    ap_block_pp6_stage7_11001;
wire    ap_CS_fsm_pp6_stage10;
wire    ap_block_state65_pp6_stage10_iter0;
wire    ap_block_pp6_stage10_11001;
wire    ap_CS_fsm_pp6_stage13;
wire    ap_block_state68_pp6_stage13_iter0;
wire    ap_block_pp6_stage13_11001;
wire    ap_CS_fsm_pp6_stage16;
wire    ap_block_state71_pp6_stage16_iter0;
wire    ap_block_pp6_stage16_11001;
wire    ap_CS_fsm_pp6_stage2;
wire    ap_block_state57_pp6_stage2_iter0;
wire    ap_block_state141_pp6_stage2_iter1;
wire    ap_block_pp6_stage2_11001;
wire    ap_CS_fsm_pp6_stage5;
wire    ap_block_state60_pp6_stage5_iter0;
wire    ap_block_state144_pp6_stage5_iter1;
wire    ap_block_pp6_stage5_11001;
wire    ap_CS_fsm_pp6_stage8;
wire    ap_block_state63_pp6_stage8_iter0;
wire    ap_block_pp6_stage8_11001;
wire    ap_CS_fsm_pp6_stage11;
wire    ap_block_state66_pp6_stage11_iter0;
wire    ap_block_pp6_stage11_11001;
wire    ap_CS_fsm_pp6_stage14;
wire    ap_block_state69_pp6_stage14_iter0;
wire    ap_block_pp6_stage14_11001;
wire    ap_CS_fsm_pp6_stage3;
wire    ap_block_state58_pp6_stage3_iter0;
wire    ap_block_state142_pp6_stage3_iter1;
wire    ap_block_pp6_stage3_11001;
wire    ap_CS_fsm_pp6_stage6;
wire    ap_block_state61_pp6_stage6_iter0;
wire    ap_block_pp6_stage6_11001;
wire    ap_CS_fsm_pp6_stage9;
wire    ap_block_state64_pp6_stage9_iter0;
wire    ap_block_pp6_stage9_11001;
wire    ap_CS_fsm_pp6_stage12;
wire    ap_block_state67_pp6_stage12_iter0;
wire    ap_block_pp6_stage12_11001;
wire    ap_CS_fsm_pp6_stage15;
wire    ap_block_state70_pp6_stage15_iter0;
wire    ap_block_pp6_stage15_11001;
wire   [31:0] grp_fu_856_p2;
reg   [31:0] reg_896;
reg   [31:0] reg_901;
reg   [31:0] reg_906;
wire    ap_CS_fsm_pp6_stage19;
wire    ap_block_state74_pp6_stage19_iter0;
wire    ap_block_pp6_stage19_11001;
wire   [31:0] grp_fu_852_p2;
reg   [31:0] reg_911;
wire    ap_CS_fsm_pp6_stage24;
wire    ap_block_state79_pp6_stage24_iter0;
wire    ap_block_pp6_stage24_11001;
wire    ap_CS_fsm_pp6_stage29;
wire    ap_block_state84_pp6_stage29_iter0;
wire    ap_block_pp6_stage29_11001;
wire    ap_CS_fsm_pp6_stage34;
wire    ap_block_state89_pp6_stage34_iter0;
wire    ap_block_pp6_stage34_11001;
wire    ap_CS_fsm_pp6_stage39;
wire    ap_block_state94_pp6_stage39_iter0;
wire    ap_block_pp6_stage39_11001;
wire    ap_CS_fsm_pp6_stage44;
wire    ap_block_state99_pp6_stage44_iter0;
wire    ap_block_pp6_stage44_11001;
wire    ap_CS_fsm_pp6_stage49;
wire    ap_block_state104_pp6_stage49_iter0;
wire    ap_block_pp6_stage49_11001;
wire    ap_CS_fsm_pp6_stage54;
wire    ap_block_state109_pp6_stage54_iter0;
wire    ap_block_pp6_stage54_11001;
wire    ap_CS_fsm_pp6_stage59;
wire    ap_block_state114_pp6_stage59_iter0;
wire    ap_block_pp6_stage59_11001;
wire    ap_CS_fsm_pp6_stage64;
wire    ap_block_state119_pp6_stage64_iter0;
wire    ap_block_pp6_stage64_11001;
wire    ap_CS_fsm_pp6_stage69;
wire    ap_block_state124_pp6_stage69_iter0;
wire    ap_block_pp6_stage69_11001;
wire    ap_CS_fsm_pp6_stage74;
wire    ap_block_state129_pp6_stage74_iter0;
wire    ap_block_pp6_stage74_11001;
wire    ap_CS_fsm_pp6_stage79;
wire    ap_block_state134_pp6_stage79_iter0;
wire    ap_block_pp6_stage79_11001;
wire    ap_CS_fsm_pp6_stage0;
reg    ap_enable_reg_pp6_iter1;
wire    ap_block_state55_pp6_stage0_iter0;
wire    ap_block_state139_pp6_stage0_iter1;
wire    ap_block_pp6_stage0_11001;
wire   [11:0] add_ln200_fu_916_p2;
reg   [11:0] add_ln200_reg_1432;
reg   [0:0] icmp_ln200_reg_1437;
reg   [0:0] icmp_ln200_reg_1437_pp0_iter1_reg;
reg   [0:0] icmp_ln200_reg_1437_pp0_iter2_reg;
reg   [0:0] icmp_ln200_reg_1437_pp0_iter3_reg;
reg   [0:0] icmp_ln200_reg_1437_pp0_iter4_reg;
reg   [31:0] single_pixel_reg_1441;
wire   [31:0] grp_fu_866_p1;
reg   [31:0] conv_reg_1446;
wire   [11:0] add_ln31_fu_933_p2;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state9_pp1_stage0_iter0;
wire    ap_block_state10_pp1_stage0_iter1;
wire    ap_block_state11_pp1_stage0_iter2;
wire    ap_block_state12_pp1_stage0_iter3;
wire    ap_block_state13_pp1_stage0_iter4;
wire    ap_block_state14_pp1_stage0_iter5;
wire    ap_block_state15_pp1_stage0_iter6;
wire    ap_block_state16_pp1_stage0_iter7;
wire    ap_block_state17_pp1_stage0_iter8;
wire    ap_block_state18_pp1_stage0_iter9;
wire    ap_block_state19_pp1_stage0_iter10;
wire    ap_block_state20_pp1_stage0_iter11;
wire    ap_block_state21_pp1_stage0_iter12;
wire    ap_block_pp1_stage0_11001;
wire   [0:0] icmp_ln31_fu_965_p2;
reg   [0:0] icmp_ln31_reg_1456;
reg   [0:0] icmp_ln31_reg_1456_pp1_iter1_reg;
reg   [0:0] icmp_ln31_reg_1456_pp1_iter2_reg;
reg   [0:0] icmp_ln31_reg_1456_pp1_iter3_reg;
reg   [0:0] icmp_ln31_reg_1456_pp1_iter4_reg;
reg   [0:0] icmp_ln31_reg_1456_pp1_iter5_reg;
reg   [0:0] icmp_ln31_reg_1456_pp1_iter6_reg;
reg   [0:0] icmp_ln31_reg_1456_pp1_iter7_reg;
reg   [0:0] icmp_ln31_reg_1456_pp1_iter8_reg;
reg   [0:0] icmp_ln31_reg_1456_pp1_iter9_reg;
reg   [0:0] icmp_ln31_reg_1456_pp1_iter10_reg;
reg   [0:0] icmp_ln31_reg_1456_pp1_iter11_reg;
wire   [5:0] select_ln31_2_fu_1025_p3;
reg   [11:0] image_input_addr_1_reg_1465;
reg   [11:0] image_input_addr_1_reg_1465_pp1_iter1_reg;
reg   [11:0] image_input_addr_1_reg_1465_pp1_iter2_reg;
reg   [11:0] image_input_addr_1_reg_1465_pp1_iter3_reg;
reg   [11:0] image_input_addr_1_reg_1465_pp1_iter4_reg;
reg   [11:0] image_input_addr_1_reg_1465_pp1_iter5_reg;
reg   [11:0] image_input_addr_1_reg_1465_pp1_iter6_reg;
reg   [11:0] image_input_addr_1_reg_1465_pp1_iter7_reg;
reg   [11:0] image_input_addr_1_reg_1465_pp1_iter8_reg;
reg   [11:0] image_input_addr_1_reg_1465_pp1_iter9_reg;
reg   [11:0] image_input_addr_1_reg_1465_pp1_iter10_reg;
reg   [11:0] image_input_addr_1_reg_1465_pp1_iter11_reg;
wire   [5:0] add_ln33_fu_1048_p2;
wire   [31:0] image_input_q1;
reg   [31:0] image_input_load_reg_1476;
reg    ap_enable_reg_pp1_iter1;
wire   [31:0] grp_fu_861_p2;
reg   [31:0] conv12_i_reg_1481;
wire   [6:0] add_ln22_fu_1054_p2;
wire    ap_CS_fsm_state36;
wire   [5:0] add_ln22_1_fu_1071_p2;
wire    ap_CS_fsm_state39;
wire   [4:0] add_ln22_2_fu_1088_p2;
wire    ap_CS_fsm_state42;
wire   [2:0] add_ln22_3_fu_1105_p2;
wire    ap_CS_fsm_state45;
wire   [31:0] layer_12_output_0_0_load_reg_1539;
wire   [31:0] layer_12_output_1_0_load_reg_1544;
wire   [31:0] layer_12_output_2_0_load_reg_1549;
wire   [31:0] layer_12_output_3_0_load_reg_1554;
wire    ap_CS_fsm_state46;
wire   [31:0] layer_11_output_q1;
reg   [31:0] layer_11_output_load_reg_1603;
wire    ap_CS_fsm_state47;
wire   [31:0] layer_11_output_q0;
reg   [31:0] layer_11_output_load_1_reg_1608;
reg   [31:0] layer_11_output_load_2_reg_1623;
wire    ap_CS_fsm_state48;
reg   [31:0] layer_11_output_load_3_reg_1628;
reg   [31:0] layer_11_output_load_4_reg_1643;
wire    ap_CS_fsm_state49;
reg   [31:0] layer_11_output_load_5_reg_1648;
reg   [31:0] layer_11_output_load_6_reg_1663;
wire    ap_CS_fsm_state50;
reg   [31:0] layer_11_output_load_7_reg_1668;
reg   [31:0] layer_11_output_load_8_reg_1683;
wire    ap_CS_fsm_state51;
reg   [31:0] layer_11_output_load_9_reg_1688;
reg   [31:0] layer_11_output_load_10_reg_1703;
wire    ap_CS_fsm_state52;
reg   [31:0] layer_11_output_load_11_reg_1708;
reg   [31:0] layer_11_output_load_12_reg_1723;
wire    ap_CS_fsm_state53;
reg   [31:0] layer_11_output_load_13_reg_1728;
reg   [31:0] layer_11_output_load_14_reg_1743;
wire    ap_CS_fsm_state54;
reg   [31:0] layer_11_output_load_15_reg_1748;
wire   [0:0] icmp_ln176_fu_1169_p2;
wire  signed [2:0] xor_ln180_fu_1180_p2;
reg  signed [2:0] xor_ln180_reg_1762;
wire  signed [3:0] or_ln_fu_1191_p3;
reg  signed [3:0] or_ln_reg_1774;
wire  signed [4:0] or_ln180_1_fu_1212_p3;
reg  signed [4:0] or_ln180_1_reg_1790;
wire   [1:0] empty_52_fu_1229_p1;
reg   [1:0] empty_52_reg_1800;
wire   [31:0] tmp_fu_1233_p6;
wire  signed [4:0] add_ln180_fu_1248_p2;
reg  signed [4:0] add_ln180_reg_1810;
reg   [31:0] mul7_i_3_reg_1825;
reg   [31:0] mul7_i_4_reg_1835;
wire   [5:0] i_7_cast4_fu_1288_p1;
reg   [5:0] i_7_cast4_reg_1845;
wire   [2:0] add_ln176_fu_1303_p2;
reg   [2:0] add_ln176_reg_1855;
reg   [31:0] mul7_i_6_reg_1860;
reg   [31:0] mul7_i_7_reg_1870;
reg   [31:0] mul7_i_8_reg_1880;
reg   [31:0] mul7_i_9_reg_1890;
reg   [31:0] mul7_i_10_reg_1905;
reg   [31:0] mul7_i_11_reg_1915;
reg   [31:0] mul7_i_12_reg_1920;
wire    ap_CS_fsm_pp6_stage17;
wire    ap_block_state72_pp6_stage17_iter0;
wire    ap_block_pp6_stage17_11001;
reg   [31:0] mul7_i_13_reg_1925;
wire    ap_CS_fsm_pp6_stage18;
wire    ap_block_state73_pp6_stage18_iter0;
wire    ap_block_pp6_stage18_11001;
wire   [31:0] tmp_s_fu_1364_p6;
wire   [2:0] add_ln315_fu_1398_p2;
reg    ap_enable_reg_pp7_iter0;
wire    ap_block_state146_pp7_stage0_iter0;
reg    ap_block_state147_pp7_stage0_iter1;
reg    ap_block_state147_io;
reg    ap_block_state148_pp7_stage0_iter2;
reg    ap_block_state148_io;
reg    ap_block_pp7_stage0_11001;
wire   [0:0] icmp_ln315_fu_1404_p2;
wire   [1:0] trunc_ln317_fu_1410_p1;
reg   [1:0] trunc_ln317_reg_1944;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
wire    ap_CS_fsm_state8;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state9;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter3;
reg    ap_enable_reg_pp1_iter4;
reg    ap_enable_reg_pp1_iter5;
reg    ap_enable_reg_pp1_iter6;
reg    ap_enable_reg_pp1_iter7;
reg    ap_enable_reg_pp1_iter8;
reg    ap_enable_reg_pp1_iter9;
reg    ap_enable_reg_pp1_iter10;
reg    ap_enable_reg_pp1_iter11;
reg    ap_enable_reg_pp1_iter12;
wire    ap_block_pp6_stage10_subdone;
reg    ap_condition_pp6_exit_iter0_state65;
wire    ap_block_state138_pp6_stage83_iter0;
wire    ap_block_pp6_stage83_subdone;
wire    ap_CS_fsm_pp6_stage83;
wire    ap_CS_fsm_state145;
reg    ap_block_pp7_stage0_subdone;
reg    ap_condition_pp7_exit_iter0_state146;
reg   [11:0] image_input_address0;
reg    image_input_ce0;
reg    image_input_we0;
reg   [31:0] image_input_d0;
wire   [31:0] image_input_q0;
wire   [11:0] image_input_address1;
reg    image_input_ce1;
reg   [16:0] layer_2_output_address0;
reg    layer_2_output_ce0;
reg    layer_2_output_we0;
reg   [31:0] layer_2_output_d0;
wire   [31:0] layer_2_output_q0;
reg    layer_2_output_ce1;
wire   [31:0] layer_2_output_q1;
reg   [14:0] layer_3_output_address0;
reg    layer_3_output_ce0;
reg    layer_3_output_we0;
reg   [31:0] layer_3_output_d0;
wire   [31:0] layer_3_output_q0;
reg   [14:0] layer_4_output_address0;
reg    layer_4_output_ce0;
reg    layer_4_output_we0;
reg   [31:0] layer_4_output_d0;
wire   [31:0] layer_4_output_q0;
reg    layer_4_output_ce1;
wire   [31:0] layer_4_output_q1;
reg   [12:0] layer_5_output_address0;
reg    layer_5_output_ce0;
reg    layer_5_output_we0;
reg   [31:0] layer_5_output_d0;
wire   [31:0] layer_5_output_q0;
reg   [11:0] layer_6_output_address0;
reg    layer_6_output_ce0;
reg    layer_6_output_we0;
reg   [31:0] layer_6_output_d0;
wire   [31:0] layer_6_output_q0;
reg    layer_6_output_ce1;
wire   [31:0] layer_6_output_q1;
reg   [9:0] layer_7_output_address0;
reg    layer_7_output_ce0;
reg    layer_7_output_we0;
reg   [31:0] layer_7_output_d0;
wire   [31:0] layer_7_output_q0;
reg   [5:0] layer_9_output_address0;
reg    layer_9_output_ce0;
reg    layer_9_output_we0;
reg   [31:0] layer_9_output_d0;
wire   [31:0] layer_9_output_q0;
reg   [4:0] layer_10_output_address0;
reg    layer_10_output_ce0;
reg    layer_10_output_we0;
reg   [31:0] layer_10_output_d0;
wire   [31:0] layer_10_output_q0;
reg   [3:0] layer_11_output_address0;
reg    layer_11_output_ce0;
reg    layer_11_output_we0;
reg   [31:0] layer_11_output_d0;
reg   [3:0] layer_11_output_address1;
reg    layer_11_output_ce1;
wire    grp_conv2d_2_fu_744_ap_start;
wire    grp_conv2d_2_fu_744_ap_done;
wire    grp_conv2d_2_fu_744_ap_idle;
wire    grp_conv2d_2_fu_744_ap_ready;
wire   [11:0] grp_conv2d_2_fu_744_input_r_address0;
wire    grp_conv2d_2_fu_744_input_r_ce0;
wire   [16:0] grp_conv2d_2_fu_744_output_r_address0;
wire    grp_conv2d_2_fu_744_output_r_ce0;
wire    grp_conv2d_2_fu_744_output_r_we0;
wire   [31:0] grp_conv2d_2_fu_744_output_r_d0;
wire   [31:0] grp_conv2d_2_fu_744_grp_fu_852_p_din0;
wire   [31:0] grp_conv2d_2_fu_744_grp_fu_852_p_din1;
wire   [1:0] grp_conv2d_2_fu_744_grp_fu_852_p_opcode;
wire   [31:0] grp_conv2d_2_fu_744_grp_fu_852_p_dout0;
wire    grp_conv2d_2_fu_744_grp_fu_852_p_ce;
wire   [31:0] grp_conv2d_2_fu_744_grp_fu_856_p_din0;
wire   [31:0] grp_conv2d_2_fu_744_grp_fu_856_p_din1;
wire   [31:0] grp_conv2d_2_fu_744_grp_fu_856_p_dout0;
wire    grp_conv2d_2_fu_744_grp_fu_856_p_ce;
wire   [31:0] grp_conv2d_2_fu_744_grp_fu_1954_p_din0;
wire   [31:0] grp_conv2d_2_fu_744_grp_fu_1954_p_din1;
wire   [4:0] grp_conv2d_2_fu_744_grp_fu_1954_p_opcode;
wire   [0:0] grp_conv2d_2_fu_744_grp_fu_1954_p_dout0;
wire    grp_conv2d_2_fu_744_grp_fu_1954_p_ce;
wire    grp_conv2d_1_fu_754_ap_start;
wire    grp_conv2d_1_fu_754_ap_done;
wire    grp_conv2d_1_fu_754_ap_idle;
wire    grp_conv2d_1_fu_754_ap_ready;
wire   [14:0] grp_conv2d_1_fu_754_input_r_address0;
wire    grp_conv2d_1_fu_754_input_r_ce0;
wire   [14:0] grp_conv2d_1_fu_754_output_r_address0;
wire    grp_conv2d_1_fu_754_output_r_ce0;
wire    grp_conv2d_1_fu_754_output_r_we0;
wire   [31:0] grp_conv2d_1_fu_754_output_r_d0;
wire   [31:0] grp_conv2d_1_fu_754_grp_fu_852_p_din0;
wire   [31:0] grp_conv2d_1_fu_754_grp_fu_852_p_din1;
wire   [1:0] grp_conv2d_1_fu_754_grp_fu_852_p_opcode;
wire   [31:0] grp_conv2d_1_fu_754_grp_fu_852_p_dout0;
wire    grp_conv2d_1_fu_754_grp_fu_852_p_ce;
wire   [31:0] grp_conv2d_1_fu_754_grp_fu_856_p_din0;
wire   [31:0] grp_conv2d_1_fu_754_grp_fu_856_p_din1;
wire   [31:0] grp_conv2d_1_fu_754_grp_fu_856_p_dout0;
wire    grp_conv2d_1_fu_754_grp_fu_856_p_ce;
wire   [31:0] grp_conv2d_1_fu_754_grp_fu_1954_p_din0;
wire   [31:0] grp_conv2d_1_fu_754_grp_fu_1954_p_din1;
wire   [4:0] grp_conv2d_1_fu_754_grp_fu_1954_p_opcode;
wire   [0:0] grp_conv2d_1_fu_754_grp_fu_1954_p_dout0;
wire    grp_conv2d_1_fu_754_grp_fu_1954_p_ce;
wire    grp_conv2d_fu_764_ap_start;
wire    grp_conv2d_fu_764_ap_done;
wire    grp_conv2d_fu_764_ap_idle;
wire    grp_conv2d_fu_764_ap_ready;
wire   [12:0] grp_conv2d_fu_764_input_r_address0;
wire    grp_conv2d_fu_764_input_r_ce0;
wire   [11:0] grp_conv2d_fu_764_output_r_address0;
wire    grp_conv2d_fu_764_output_r_ce0;
wire    grp_conv2d_fu_764_output_r_we0;
wire   [31:0] grp_conv2d_fu_764_output_r_d0;
wire   [31:0] grp_conv2d_fu_764_grp_fu_852_p_din0;
wire   [31:0] grp_conv2d_fu_764_grp_fu_852_p_din1;
wire   [1:0] grp_conv2d_fu_764_grp_fu_852_p_opcode;
wire   [31:0] grp_conv2d_fu_764_grp_fu_852_p_dout0;
wire    grp_conv2d_fu_764_grp_fu_852_p_ce;
wire   [31:0] grp_conv2d_fu_764_grp_fu_856_p_din0;
wire   [31:0] grp_conv2d_fu_764_grp_fu_856_p_din1;
wire   [31:0] grp_conv2d_fu_764_grp_fu_856_p_dout0;
wire    grp_conv2d_fu_764_grp_fu_856_p_ce;
wire   [31:0] grp_conv2d_fu_764_grp_fu_1954_p_din0;
wire   [31:0] grp_conv2d_fu_764_grp_fu_1954_p_din1;
wire   [4:0] grp_conv2d_fu_764_grp_fu_1954_p_opcode;
wire   [0:0] grp_conv2d_fu_764_grp_fu_1954_p_dout0;
wire    grp_conv2d_fu_764_grp_fu_1954_p_ce;
wire    grp_max_pooling2d_2_fu_774_ap_start;
wire    grp_max_pooling2d_2_fu_774_ap_done;
wire    grp_max_pooling2d_2_fu_774_ap_idle;
wire    grp_max_pooling2d_2_fu_774_ap_ready;
wire   [16:0] grp_max_pooling2d_2_fu_774_input_r_address0;
wire    grp_max_pooling2d_2_fu_774_input_r_ce0;
wire   [16:0] grp_max_pooling2d_2_fu_774_input_r_address1;
wire    grp_max_pooling2d_2_fu_774_input_r_ce1;
wire   [14:0] grp_max_pooling2d_2_fu_774_output_r_address0;
wire    grp_max_pooling2d_2_fu_774_output_r_ce0;
wire    grp_max_pooling2d_2_fu_774_output_r_we0;
wire   [31:0] grp_max_pooling2d_2_fu_774_output_r_d0;
wire   [31:0] grp_max_pooling2d_2_fu_774_grp_fu_1954_p_din0;
wire   [31:0] grp_max_pooling2d_2_fu_774_grp_fu_1954_p_din1;
wire   [4:0] grp_max_pooling2d_2_fu_774_grp_fu_1954_p_opcode;
wire   [0:0] grp_max_pooling2d_2_fu_774_grp_fu_1954_p_dout0;
wire    grp_max_pooling2d_2_fu_774_grp_fu_1954_p_ce;
wire   [31:0] grp_max_pooling2d_2_fu_774_grp_fu_1958_p_din0;
wire   [31:0] grp_max_pooling2d_2_fu_774_grp_fu_1958_p_din1;
wire   [4:0] grp_max_pooling2d_2_fu_774_grp_fu_1958_p_opcode;
wire   [0:0] grp_max_pooling2d_2_fu_774_grp_fu_1958_p_dout0;
wire    grp_max_pooling2d_2_fu_774_grp_fu_1958_p_ce;
wire    grp_max_pooling2d_1_fu_780_ap_start;
wire    grp_max_pooling2d_1_fu_780_ap_done;
wire    grp_max_pooling2d_1_fu_780_ap_idle;
wire    grp_max_pooling2d_1_fu_780_ap_ready;
wire   [14:0] grp_max_pooling2d_1_fu_780_input_r_address0;
wire    grp_max_pooling2d_1_fu_780_input_r_ce0;
wire   [14:0] grp_max_pooling2d_1_fu_780_input_r_address1;
wire    grp_max_pooling2d_1_fu_780_input_r_ce1;
wire   [12:0] grp_max_pooling2d_1_fu_780_output_r_address0;
wire    grp_max_pooling2d_1_fu_780_output_r_ce0;
wire    grp_max_pooling2d_1_fu_780_output_r_we0;
wire   [31:0] grp_max_pooling2d_1_fu_780_output_r_d0;
wire   [31:0] grp_max_pooling2d_1_fu_780_grp_fu_1954_p_din0;
wire   [31:0] grp_max_pooling2d_1_fu_780_grp_fu_1954_p_din1;
wire   [4:0] grp_max_pooling2d_1_fu_780_grp_fu_1954_p_opcode;
wire   [0:0] grp_max_pooling2d_1_fu_780_grp_fu_1954_p_dout0;
wire    grp_max_pooling2d_1_fu_780_grp_fu_1954_p_ce;
wire   [31:0] grp_max_pooling2d_1_fu_780_grp_fu_1958_p_din0;
wire   [31:0] grp_max_pooling2d_1_fu_780_grp_fu_1958_p_din1;
wire   [4:0] grp_max_pooling2d_1_fu_780_grp_fu_1958_p_opcode;
wire   [0:0] grp_max_pooling2d_1_fu_780_grp_fu_1958_p_dout0;
wire    grp_max_pooling2d_1_fu_780_grp_fu_1958_p_ce;
wire    grp_max_pooling2d_fu_786_ap_start;
wire    grp_max_pooling2d_fu_786_ap_done;
wire    grp_max_pooling2d_fu_786_ap_idle;
wire    grp_max_pooling2d_fu_786_ap_ready;
wire   [11:0] grp_max_pooling2d_fu_786_input_r_address0;
wire    grp_max_pooling2d_fu_786_input_r_ce0;
wire   [11:0] grp_max_pooling2d_fu_786_input_r_address1;
wire    grp_max_pooling2d_fu_786_input_r_ce1;
wire   [9:0] grp_max_pooling2d_fu_786_output_r_address0;
wire    grp_max_pooling2d_fu_786_output_r_ce0;
wire    grp_max_pooling2d_fu_786_output_r_we0;
wire   [31:0] grp_max_pooling2d_fu_786_output_r_d0;
wire   [31:0] grp_max_pooling2d_fu_786_grp_fu_1954_p_din0;
wire   [31:0] grp_max_pooling2d_fu_786_grp_fu_1954_p_din1;
wire   [4:0] grp_max_pooling2d_fu_786_grp_fu_1954_p_opcode;
wire   [0:0] grp_max_pooling2d_fu_786_grp_fu_1954_p_dout0;
wire    grp_max_pooling2d_fu_786_grp_fu_1954_p_ce;
wire   [31:0] grp_max_pooling2d_fu_786_grp_fu_1958_p_din0;
wire   [31:0] grp_max_pooling2d_fu_786_grp_fu_1958_p_din1;
wire   [4:0] grp_max_pooling2d_fu_786_grp_fu_1958_p_opcode;
wire   [0:0] grp_max_pooling2d_fu_786_grp_fu_1958_p_dout0;
wire    grp_max_pooling2d_fu_786_grp_fu_1958_p_ce;
wire    grp_dense_relu_2_fu_792_ap_start;
wire    grp_dense_relu_2_fu_792_ap_done;
wire    grp_dense_relu_2_fu_792_ap_idle;
wire    grp_dense_relu_2_fu_792_ap_ready;
wire   [9:0] grp_dense_relu_2_fu_792_input_r_address0;
wire    grp_dense_relu_2_fu_792_input_r_ce0;
wire   [5:0] grp_dense_relu_2_fu_792_output_r_address0;
wire    grp_dense_relu_2_fu_792_output_r_ce0;
wire    grp_dense_relu_2_fu_792_output_r_we0;
wire   [31:0] grp_dense_relu_2_fu_792_output_r_d0;
wire   [31:0] grp_dense_relu_2_fu_792_grp_fu_852_p_din0;
wire   [31:0] grp_dense_relu_2_fu_792_grp_fu_852_p_din1;
wire   [1:0] grp_dense_relu_2_fu_792_grp_fu_852_p_opcode;
wire   [31:0] grp_dense_relu_2_fu_792_grp_fu_852_p_dout0;
wire    grp_dense_relu_2_fu_792_grp_fu_852_p_ce;
wire   [31:0] grp_dense_relu_2_fu_792_grp_fu_856_p_din0;
wire   [31:0] grp_dense_relu_2_fu_792_grp_fu_856_p_din1;
wire   [31:0] grp_dense_relu_2_fu_792_grp_fu_856_p_dout0;
wire    grp_dense_relu_2_fu_792_grp_fu_856_p_ce;
wire   [31:0] grp_dense_relu_2_fu_792_grp_fu_1954_p_din0;
wire   [31:0] grp_dense_relu_2_fu_792_grp_fu_1954_p_din1;
wire   [4:0] grp_dense_relu_2_fu_792_grp_fu_1954_p_opcode;
wire   [0:0] grp_dense_relu_2_fu_792_grp_fu_1954_p_dout0;
wire    grp_dense_relu_2_fu_792_grp_fu_1954_p_ce;
wire    grp_dense_relu_1_fu_802_ap_start;
wire    grp_dense_relu_1_fu_802_ap_done;
wire    grp_dense_relu_1_fu_802_ap_idle;
wire    grp_dense_relu_1_fu_802_ap_ready;
wire   [5:0] grp_dense_relu_1_fu_802_input_r_address0;
wire    grp_dense_relu_1_fu_802_input_r_ce0;
wire   [4:0] grp_dense_relu_1_fu_802_output_r_address0;
wire    grp_dense_relu_1_fu_802_output_r_ce0;
wire    grp_dense_relu_1_fu_802_output_r_we0;
wire   [31:0] grp_dense_relu_1_fu_802_output_r_d0;
wire   [31:0] grp_dense_relu_1_fu_802_grp_fu_852_p_din0;
wire   [31:0] grp_dense_relu_1_fu_802_grp_fu_852_p_din1;
wire   [1:0] grp_dense_relu_1_fu_802_grp_fu_852_p_opcode;
wire   [31:0] grp_dense_relu_1_fu_802_grp_fu_852_p_dout0;
wire    grp_dense_relu_1_fu_802_grp_fu_852_p_ce;
wire   [31:0] grp_dense_relu_1_fu_802_grp_fu_856_p_din0;
wire   [31:0] grp_dense_relu_1_fu_802_grp_fu_856_p_din1;
wire   [31:0] grp_dense_relu_1_fu_802_grp_fu_856_p_dout0;
wire    grp_dense_relu_1_fu_802_grp_fu_856_p_ce;
wire   [31:0] grp_dense_relu_1_fu_802_grp_fu_1954_p_din0;
wire   [31:0] grp_dense_relu_1_fu_802_grp_fu_1954_p_din1;
wire   [4:0] grp_dense_relu_1_fu_802_grp_fu_1954_p_opcode;
wire   [0:0] grp_dense_relu_1_fu_802_grp_fu_1954_p_dout0;
wire    grp_dense_relu_1_fu_802_grp_fu_1954_p_ce;
wire    grp_dense_relu_fu_812_ap_start;
wire    grp_dense_relu_fu_812_ap_done;
wire    grp_dense_relu_fu_812_ap_idle;
wire    grp_dense_relu_fu_812_ap_ready;
wire   [4:0] grp_dense_relu_fu_812_input_r_address0;
wire    grp_dense_relu_fu_812_input_r_ce0;
wire   [3:0] grp_dense_relu_fu_812_output_r_address0;
wire    grp_dense_relu_fu_812_output_r_ce0;
wire    grp_dense_relu_fu_812_output_r_we0;
wire   [31:0] grp_dense_relu_fu_812_output_r_d0;
wire   [31:0] grp_dense_relu_fu_812_grp_fu_852_p_din0;
wire   [31:0] grp_dense_relu_fu_812_grp_fu_852_p_din1;
wire   [1:0] grp_dense_relu_fu_812_grp_fu_852_p_opcode;
wire   [31:0] grp_dense_relu_fu_812_grp_fu_852_p_dout0;
wire    grp_dense_relu_fu_812_grp_fu_852_p_ce;
wire   [31:0] grp_dense_relu_fu_812_grp_fu_856_p_din0;
wire   [31:0] grp_dense_relu_fu_812_grp_fu_856_p_din1;
wire   [31:0] grp_dense_relu_fu_812_grp_fu_856_p_dout0;
wire    grp_dense_relu_fu_812_grp_fu_856_p_ce;
wire   [31:0] grp_dense_relu_fu_812_grp_fu_1954_p_din0;
wire   [31:0] grp_dense_relu_fu_812_grp_fu_1954_p_din1;
wire   [4:0] grp_dense_relu_fu_812_grp_fu_1954_p_opcode;
wire   [0:0] grp_dense_relu_fu_812_grp_fu_1954_p_dout0;
wire    grp_dense_relu_fu_812_grp_fu_1954_p_ce;
wire    grp_set3DFloatArray_5_fu_822_ap_start;
wire    grp_set3DFloatArray_5_fu_822_ap_done;
wire    grp_set3DFloatArray_5_fu_822_ap_idle;
wire    grp_set3DFloatArray_5_fu_822_ap_ready;
wire   [16:0] grp_set3DFloatArray_5_fu_822_array_r_address0;
wire    grp_set3DFloatArray_5_fu_822_array_r_ce0;
wire    grp_set3DFloatArray_5_fu_822_array_r_we0;
wire   [31:0] grp_set3DFloatArray_5_fu_822_array_r_d0;
wire    grp_set3DFloatArray_4_fu_827_ap_start;
wire    grp_set3DFloatArray_4_fu_827_ap_done;
wire    grp_set3DFloatArray_4_fu_827_ap_idle;
wire    grp_set3DFloatArray_4_fu_827_ap_ready;
wire   [14:0] grp_set3DFloatArray_4_fu_827_array_r_address0;
wire    grp_set3DFloatArray_4_fu_827_array_r_ce0;
wire    grp_set3DFloatArray_4_fu_827_array_r_we0;
wire   [31:0] grp_set3DFloatArray_4_fu_827_array_r_d0;
wire    grp_set3DFloatArray_3_fu_832_ap_start;
wire    grp_set3DFloatArray_3_fu_832_ap_done;
wire    grp_set3DFloatArray_3_fu_832_ap_idle;
wire    grp_set3DFloatArray_3_fu_832_ap_ready;
wire   [14:0] grp_set3DFloatArray_3_fu_832_array_r_address0;
wire    grp_set3DFloatArray_3_fu_832_array_r_ce0;
wire    grp_set3DFloatArray_3_fu_832_array_r_we0;
wire   [31:0] grp_set3DFloatArray_3_fu_832_array_r_d0;
wire    grp_set3DFloatArray_2_fu_837_ap_start;
wire    grp_set3DFloatArray_2_fu_837_ap_done;
wire    grp_set3DFloatArray_2_fu_837_ap_idle;
wire    grp_set3DFloatArray_2_fu_837_ap_ready;
wire   [12:0] grp_set3DFloatArray_2_fu_837_array_r_address0;
wire    grp_set3DFloatArray_2_fu_837_array_r_ce0;
wire    grp_set3DFloatArray_2_fu_837_array_r_we0;
wire   [31:0] grp_set3DFloatArray_2_fu_837_array_r_d0;
wire    grp_set3DFloatArray_1_fu_842_ap_start;
wire    grp_set3DFloatArray_1_fu_842_ap_done;
wire    grp_set3DFloatArray_1_fu_842_ap_idle;
wire    grp_set3DFloatArray_1_fu_842_ap_ready;
wire   [11:0] grp_set3DFloatArray_1_fu_842_array_r_address0;
wire    grp_set3DFloatArray_1_fu_842_array_r_ce0;
wire    grp_set3DFloatArray_1_fu_842_array_r_we0;
wire   [31:0] grp_set3DFloatArray_1_fu_842_array_r_d0;
wire    grp_set3DFloatArray_fu_847_ap_start;
wire    grp_set3DFloatArray_fu_847_ap_done;
wire    grp_set3DFloatArray_fu_847_ap_idle;
wire    grp_set3DFloatArray_fu_847_ap_ready;
wire   [9:0] grp_set3DFloatArray_fu_847_array_r_address0;
wire    grp_set3DFloatArray_fu_847_array_r_ce0;
wire    grp_set3DFloatArray_fu_847_array_r_we0;
wire   [31:0] grp_set3DFloatArray_fu_847_array_r_d0;
reg   [11:0] ap_phi_mux_i_phi_fu_636_p4;
reg   [6:0] i_2_reg_677;
wire   [0:0] icmp_ln22_fu_1060_p2;
wire    ap_CS_fsm_state35;
reg   [5:0] i_3_reg_688;
wire   [0:0] icmp_ln22_1_fu_1077_p2;
wire    ap_CS_fsm_state38;
reg   [4:0] i_4_reg_699;
wire   [0:0] icmp_ln22_2_fu_1094_p2;
wire    ap_CS_fsm_state41;
reg   [2:0] i_5_reg_710;
wire    ap_CS_fsm_state44;
wire   [0:0] icmp_ln22_3_fu_1123_p2;
reg   [2:0] ap_phi_mux_i_6_phi_fu_725_p4;
wire    ap_block_pp6_stage0;
reg    grp_conv2d_2_fu_744_ap_start_reg;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state25;
reg    grp_conv2d_1_fu_754_ap_start_reg;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state29;
reg    grp_conv2d_fu_764_ap_start_reg;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state33;
reg    grp_max_pooling2d_2_fu_774_ap_start_reg;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state27;
reg    grp_max_pooling2d_1_fu_780_ap_start_reg;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state31;
reg    grp_max_pooling2d_fu_786_ap_start_reg;
wire    ap_CS_fsm_state34;
reg    grp_dense_relu_2_fu_792_ap_start_reg;
wire    ap_CS_fsm_state37;
reg    grp_dense_relu_1_fu_802_ap_start_reg;
wire    ap_CS_fsm_state40;
reg    grp_dense_relu_fu_812_ap_start_reg;
wire    ap_CS_fsm_state43;
reg    grp_set3DFloatArray_5_fu_822_ap_start_reg;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state23;
reg    grp_set3DFloatArray_4_fu_827_ap_start_reg;
reg    grp_set3DFloatArray_3_fu_832_ap_start_reg;
reg    grp_set3DFloatArray_2_fu_837_ap_start_reg;
reg    grp_set3DFloatArray_1_fu_842_ap_start_reg;
reg    grp_set3DFloatArray_fu_847_ap_start_reg;
wire   [63:0] i_cast_fu_928_p1;
wire   [63:0] zext_ln37_fu_1043_p1;
wire    ap_block_pp1_stage0;
wire   [63:0] i_3_cast_fu_1066_p1;
wire   [63:0] i_4_cast_fu_1083_p1;
wire   [63:0] i_5_cast_fu_1100_p1;
wire   [63:0] i_7_cast5_fu_1175_p1;
wire   [63:0] zext_ln180_fu_1186_p1;
wire    ap_block_pp6_stage1;
wire   [63:0] zext_ln180_1_fu_1199_p1;
wire    ap_block_pp6_stage2;
wire   [63:0] zext_ln180_2_fu_1207_p1;
wire    ap_block_pp6_stage3;
wire   [63:0] zext_ln180_3_fu_1220_p1;
wire    ap_block_pp6_stage4;
wire   [63:0] zext_ln180_4_fu_1254_p1;
wire    ap_block_pp6_stage5;
wire   [63:0] zext_ln180_5_fu_1262_p1;
wire    ap_block_pp6_stage6;
wire   [63:0] zext_ln180_6_fu_1270_p1;
wire    ap_block_pp6_stage7;
wire   [63:0] zext_ln180_7_fu_1283_p1;
wire    ap_block_pp6_stage8;
wire   [63:0] zext_ln180_8_fu_1298_p1;
wire    ap_block_pp6_stage9;
wire   [63:0] zext_ln180_9_fu_1317_p1;
wire    ap_block_pp6_stage10;
wire   [63:0] zext_ln180_10_fu_1327_p1;
wire    ap_block_pp6_stage11;
wire   [63:0] zext_ln180_11_fu_1335_p1;
wire    ap_block_pp6_stage12;
wire   [63:0] zext_ln180_12_fu_1343_p1;
wire    ap_block_pp6_stage13;
wire   [63:0] zext_ln180_13_fu_1351_p1;
wire    ap_block_pp6_stage14;
wire   [63:0] zext_ln180_14_fu_1359_p1;
wire    ap_block_pp6_stage15;
reg   [31:0] layer_12_output_3_fu_276;
reg   [31:0] ap_sig_allocacmp_layer_12_output_3_load;
reg   [31:0] grp_load_fu_869_p1;
reg   [31:0] layer_12_output_3_1_fu_280;
reg   [31:0] ap_sig_allocacmp_layer_12_output_3_1_load;
reg   [31:0] grp_load_fu_872_p1;
reg   [31:0] layer_12_output_3_3_fu_284;
reg   [31:0] ap_sig_allocacmp_layer_12_output_3_3_load;
reg   [31:0] grp_load_fu_875_p1;
reg   [31:0] layer_12_output_3_2_fu_288;
reg   [31:0] ap_sig_allocacmp_layer_12_output_3_2_load_1;
reg   [31:0] grp_load_fu_878_p1;
reg    ap_block_pp7_stage0_01001;
reg   [31:0] grp_fu_852_p0;
reg   [31:0] grp_fu_852_p1;
wire    ap_CS_fsm_pp6_stage20;
wire    ap_block_pp6_stage20;
wire    ap_CS_fsm_pp6_stage25;
wire    ap_block_pp6_stage25;
wire    ap_CS_fsm_pp6_stage30;
wire    ap_block_pp6_stage30;
wire    ap_CS_fsm_pp6_stage35;
wire    ap_block_pp6_stage35;
wire    ap_CS_fsm_pp6_stage40;
wire    ap_block_pp6_stage40;
wire    ap_CS_fsm_pp6_stage45;
wire    ap_block_pp6_stage45;
wire    ap_CS_fsm_pp6_stage50;
wire    ap_block_pp6_stage50;
wire    ap_CS_fsm_pp6_stage55;
wire    ap_block_pp6_stage55;
wire    ap_CS_fsm_pp6_stage60;
wire    ap_block_pp6_stage60;
wire    ap_CS_fsm_pp6_stage65;
wire    ap_block_pp6_stage65;
wire    ap_CS_fsm_pp6_stage70;
wire    ap_block_pp6_stage70;
wire    ap_CS_fsm_pp6_stage75;
wire    ap_block_pp6_stage75;
wire    ap_CS_fsm_pp6_stage80;
wire    ap_block_pp6_stage80;
reg   [31:0] grp_fu_856_p0;
reg   [31:0] grp_fu_856_p1;
wire    ap_block_pp6_stage16;
wire   [7:0] p_shl1_fu_947_p3;
wire   [11:0] p_shl_fu_939_p3;
wire   [11:0] p_shl10081_cast_fu_955_p1;
wire   [0:0] icmp_ln33_fu_971_p2;
wire   [5:0] add_ln31_1_fu_985_p2;
wire   [7:0] p_shl10081_mid1_fu_999_p3;
wire   [11:0] p_shl_mid1_fu_991_p3;
wire   [11:0] p_shl10081_cast_mid1_fu_1007_p1;
wire   [11:0] p_mid1_fu_1011_p2;
wire   [11:0] empty_44_fu_959_p2;
wire   [5:0] select_ln31_fu_977_p3;
wire   [11:0] ii_cast_fu_1033_p1;
wire   [11:0] select_ln31_1_fu_1017_p3;
wire   [11:0] empty_46_fu_1037_p2;
wire  signed [3:0] sext_ln180_fu_1204_p1;
wire   [1:0] tmp_fu_1233_p5;
wire   [4:0] i_7_cast11_fu_1225_p1;
wire  signed [4:0] sext_ln180_1_fu_1259_p1;
wire  signed [4:0] sext_ln180_2_fu_1267_p1;
wire   [5:0] or_ln180_3_fu_1275_p3;
wire   [5:0] add_ln180_1_fu_1292_p2;
wire   [5:0] or_ln180_4_fu_1309_p3;
wire   [5:0] add_ln180_2_fu_1322_p2;
wire  signed [5:0] sext_ln180_3_fu_1332_p1;
wire  signed [5:0] sext_ln180_4_fu_1340_p1;
wire  signed [5:0] sext_ln180_5_fu_1348_p1;
wire  signed [5:0] sext_ln180_6_fu_1356_p1;
wire   [31:0] tmp_33_fu_1414_p6;
reg    grp_fu_852_ce;
reg    grp_fu_856_ce;
reg    grp_fu_866_ce;
wire   [0:0] grp_fu_1954_p2;
reg   [31:0] grp_fu_1954_p0;
reg   [31:0] grp_fu_1954_p1;
reg    grp_fu_1954_ce;
reg   [4:0] grp_fu_1954_opcode;
wire   [0:0] grp_fu_1958_p2;
reg   [31:0] grp_fu_1958_p0;
reg   [31:0] grp_fu_1958_p1;
reg    grp_fu_1958_ce;
reg   [4:0] grp_fu_1958_opcode;
wire    ap_CS_fsm_state149;
wire    regslice_both_infer_output_V_U_apdone_blk;
reg   [123:0] ap_NS_fsm;
reg    ap_block_state23_on_subcall_done;
wire    ap_block_pp6_stage0_subdone;
wire    ap_block_pp6_stage1_subdone;
wire    ap_block_pp6_stage2_subdone;
wire    ap_block_pp6_stage3_subdone;
wire    ap_block_pp6_stage4_subdone;
wire    ap_block_pp6_stage5_subdone;
wire    ap_block_pp6_stage6_subdone;
wire    ap_block_pp6_stage7_subdone;
wire    ap_block_pp6_stage8_subdone;
wire    ap_block_pp6_stage9_subdone;
wire    ap_block_pp6_stage11_subdone;
wire    ap_block_pp6_stage12_subdone;
wire    ap_block_pp6_stage13_subdone;
wire    ap_block_pp6_stage14_subdone;
wire    ap_block_pp6_stage15_subdone;
wire    ap_block_pp6_stage16_subdone;
wire    ap_block_pp6_stage17_subdone;
wire    ap_block_pp6_stage18_subdone;
wire    ap_block_pp6_stage19_subdone;
wire    ap_block_state75_pp6_stage20_iter0;
wire    ap_block_pp6_stage20_subdone;
wire    ap_block_pp6_stage20_11001;
wire    ap_block_state76_pp6_stage21_iter0;
wire    ap_block_pp6_stage21_subdone;
wire    ap_block_pp6_stage21_11001;
wire    ap_block_state77_pp6_stage22_iter0;
wire    ap_block_pp6_stage22_subdone;
wire    ap_block_pp6_stage22_11001;
wire    ap_block_state78_pp6_stage23_iter0;
wire    ap_block_pp6_stage23_subdone;
wire    ap_block_pp6_stage23_11001;
wire    ap_block_pp6_stage24_subdone;
wire    ap_block_state80_pp6_stage25_iter0;
wire    ap_block_pp6_stage25_subdone;
wire    ap_block_pp6_stage25_11001;
wire    ap_block_state81_pp6_stage26_iter0;
wire    ap_block_pp6_stage26_subdone;
wire    ap_block_pp6_stage26_11001;
wire    ap_block_state82_pp6_stage27_iter0;
wire    ap_block_pp6_stage27_subdone;
wire    ap_block_pp6_stage27_11001;
wire    ap_block_state83_pp6_stage28_iter0;
wire    ap_block_pp6_stage28_subdone;
wire    ap_block_pp6_stage28_11001;
wire    ap_block_pp6_stage29_subdone;
wire    ap_block_state85_pp6_stage30_iter0;
wire    ap_block_pp6_stage30_subdone;
wire    ap_block_pp6_stage30_11001;
wire    ap_block_state86_pp6_stage31_iter0;
wire    ap_block_pp6_stage31_subdone;
wire    ap_block_pp6_stage31_11001;
wire    ap_block_state87_pp6_stage32_iter0;
wire    ap_block_pp6_stage32_subdone;
wire    ap_block_pp6_stage32_11001;
wire    ap_block_state88_pp6_stage33_iter0;
wire    ap_block_pp6_stage33_subdone;
wire    ap_block_pp6_stage33_11001;
wire    ap_block_pp6_stage34_subdone;
wire    ap_block_state90_pp6_stage35_iter0;
wire    ap_block_pp6_stage35_subdone;
wire    ap_block_pp6_stage35_11001;
wire    ap_block_state91_pp6_stage36_iter0;
wire    ap_block_pp6_stage36_subdone;
wire    ap_block_pp6_stage36_11001;
wire    ap_block_state92_pp6_stage37_iter0;
wire    ap_block_pp6_stage37_subdone;
wire    ap_block_pp6_stage37_11001;
wire    ap_block_state93_pp6_stage38_iter0;
wire    ap_block_pp6_stage38_subdone;
wire    ap_block_pp6_stage38_11001;
wire    ap_block_pp6_stage39_subdone;
wire    ap_block_state95_pp6_stage40_iter0;
wire    ap_block_pp6_stage40_subdone;
wire    ap_block_pp6_stage40_11001;
wire    ap_block_state96_pp6_stage41_iter0;
wire    ap_block_pp6_stage41_subdone;
wire    ap_block_pp6_stage41_11001;
wire    ap_block_state97_pp6_stage42_iter0;
wire    ap_block_pp6_stage42_subdone;
wire    ap_block_pp6_stage42_11001;
wire    ap_block_state98_pp6_stage43_iter0;
wire    ap_block_pp6_stage43_subdone;
wire    ap_block_pp6_stage43_11001;
wire    ap_block_pp6_stage44_subdone;
wire    ap_block_state100_pp6_stage45_iter0;
wire    ap_block_pp6_stage45_subdone;
wire    ap_block_pp6_stage45_11001;
wire    ap_block_state101_pp6_stage46_iter0;
wire    ap_block_pp6_stage46_subdone;
wire    ap_block_pp6_stage46_11001;
wire    ap_block_state102_pp6_stage47_iter0;
wire    ap_block_pp6_stage47_subdone;
wire    ap_block_pp6_stage47_11001;
wire    ap_block_state103_pp6_stage48_iter0;
wire    ap_block_pp6_stage48_subdone;
wire    ap_block_pp6_stage48_11001;
wire    ap_block_pp6_stage49_subdone;
wire    ap_block_state105_pp6_stage50_iter0;
wire    ap_block_pp6_stage50_subdone;
wire    ap_block_pp6_stage50_11001;
wire    ap_block_state106_pp6_stage51_iter0;
wire    ap_block_pp6_stage51_subdone;
wire    ap_block_pp6_stage51_11001;
wire    ap_block_state107_pp6_stage52_iter0;
wire    ap_block_pp6_stage52_subdone;
wire    ap_block_pp6_stage52_11001;
wire    ap_block_state108_pp6_stage53_iter0;
wire    ap_block_pp6_stage53_subdone;
wire    ap_block_pp6_stage53_11001;
wire    ap_block_pp6_stage54_subdone;
wire    ap_block_state110_pp6_stage55_iter0;
wire    ap_block_pp6_stage55_subdone;
wire    ap_block_pp6_stage55_11001;
wire    ap_block_state111_pp6_stage56_iter0;
wire    ap_block_pp6_stage56_subdone;
wire    ap_block_pp6_stage56_11001;
wire    ap_block_state112_pp6_stage57_iter0;
wire    ap_block_pp6_stage57_subdone;
wire    ap_block_pp6_stage57_11001;
wire    ap_block_state113_pp6_stage58_iter0;
wire    ap_block_pp6_stage58_subdone;
wire    ap_block_pp6_stage58_11001;
wire    ap_block_pp6_stage59_subdone;
wire    ap_block_state115_pp6_stage60_iter0;
wire    ap_block_pp6_stage60_subdone;
wire    ap_block_pp6_stage60_11001;
wire    ap_block_state116_pp6_stage61_iter0;
wire    ap_block_pp6_stage61_subdone;
wire    ap_block_pp6_stage61_11001;
wire    ap_block_state117_pp6_stage62_iter0;
wire    ap_block_pp6_stage62_subdone;
wire    ap_block_pp6_stage62_11001;
wire    ap_block_state118_pp6_stage63_iter0;
wire    ap_block_pp6_stage63_subdone;
wire    ap_block_pp6_stage63_11001;
wire    ap_block_pp6_stage64_subdone;
wire    ap_block_state120_pp6_stage65_iter0;
wire    ap_block_pp6_stage65_subdone;
wire    ap_block_pp6_stage65_11001;
wire    ap_block_state121_pp6_stage66_iter0;
wire    ap_block_pp6_stage66_subdone;
wire    ap_block_pp6_stage66_11001;
wire    ap_block_state122_pp6_stage67_iter0;
wire    ap_block_pp6_stage67_subdone;
wire    ap_block_pp6_stage67_11001;
wire    ap_block_state123_pp6_stage68_iter0;
wire    ap_block_pp6_stage68_subdone;
wire    ap_block_pp6_stage68_11001;
wire    ap_block_pp6_stage69_subdone;
wire    ap_block_state125_pp6_stage70_iter0;
wire    ap_block_pp6_stage70_subdone;
wire    ap_block_pp6_stage70_11001;
wire    ap_block_state126_pp6_stage71_iter0;
wire    ap_block_pp6_stage71_subdone;
wire    ap_block_pp6_stage71_11001;
wire    ap_block_state127_pp6_stage72_iter0;
wire    ap_block_pp6_stage72_subdone;
wire    ap_block_pp6_stage72_11001;
wire    ap_block_state128_pp6_stage73_iter0;
wire    ap_block_pp6_stage73_subdone;
wire    ap_block_pp6_stage73_11001;
wire    ap_block_pp6_stage74_subdone;
wire    ap_block_state130_pp6_stage75_iter0;
wire    ap_block_pp6_stage75_subdone;
wire    ap_block_pp6_stage75_11001;
wire    ap_block_state131_pp6_stage76_iter0;
wire    ap_block_pp6_stage76_subdone;
wire    ap_block_pp6_stage76_11001;
wire    ap_block_state132_pp6_stage77_iter0;
wire    ap_block_pp6_stage77_subdone;
wire    ap_block_pp6_stage77_11001;
wire    ap_block_state133_pp6_stage78_iter0;
wire    ap_block_pp6_stage78_subdone;
wire    ap_block_pp6_stage78_11001;
wire    ap_block_pp6_stage79_subdone;
wire    ap_block_state135_pp6_stage80_iter0;
wire    ap_block_pp6_stage80_subdone;
wire    ap_block_pp6_stage80_11001;
wire    ap_block_state136_pp6_stage81_iter0;
wire    ap_block_pp6_stage81_subdone;
wire    ap_block_pp6_stage81_11001;
wire    ap_block_state137_pp6_stage82_iter0;
wire    ap_block_pp6_stage82_subdone;
wire    ap_block_pp6_stage82_11001;
wire    ap_block_pp6_stage83_11001;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp6;
wire    ap_enable_pp6;
reg    ap_idle_pp7;
wire    ap_enable_pp7;
wire    regslice_both_infer_input_V_U_apdone_blk;
wire   [31:0] infer_input_V_TDATA_int_regslice;
wire    infer_input_V_TVALID_int_regslice;
reg    infer_input_V_TREADY_int_regslice;
wire    regslice_both_infer_input_V_U_ack_in;
wire   [31:0] infer_output_V_TDATA_int_regslice;
reg    infer_output_V_TVALID_int_regslice;
wire    infer_output_V_TREADY_int_regslice;
wire    regslice_both_infer_output_V_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 124'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp7_iter1 = 1'b0;
#0 ap_enable_reg_pp7_iter2 = 1'b0;
#0 ap_enable_reg_pp6_iter0 = 1'b0;
#0 ap_enable_reg_pp6_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp7_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 ap_enable_reg_pp1_iter6 = 1'b0;
#0 ap_enable_reg_pp1_iter7 = 1'b0;
#0 ap_enable_reg_pp1_iter8 = 1'b0;
#0 ap_enable_reg_pp1_iter9 = 1'b0;
#0 ap_enable_reg_pp1_iter10 = 1'b0;
#0 ap_enable_reg_pp1_iter11 = 1'b0;
#0 ap_enable_reg_pp1_iter12 = 1'b0;
#0 grp_conv2d_2_fu_744_ap_start_reg = 1'b0;
#0 grp_conv2d_1_fu_754_ap_start_reg = 1'b0;
#0 grp_conv2d_fu_764_ap_start_reg = 1'b0;
#0 grp_max_pooling2d_2_fu_774_ap_start_reg = 1'b0;
#0 grp_max_pooling2d_1_fu_780_ap_start_reg = 1'b0;
#0 grp_max_pooling2d_fu_786_ap_start_reg = 1'b0;
#0 grp_dense_relu_2_fu_792_ap_start_reg = 1'b0;
#0 grp_dense_relu_1_fu_802_ap_start_reg = 1'b0;
#0 grp_dense_relu_fu_812_ap_start_reg = 1'b0;
#0 grp_set3DFloatArray_5_fu_822_ap_start_reg = 1'b0;
#0 grp_set3DFloatArray_4_fu_827_ap_start_reg = 1'b0;
#0 grp_set3DFloatArray_3_fu_832_ap_start_reg = 1'b0;
#0 grp_set3DFloatArray_2_fu_837_ap_start_reg = 1'b0;
#0 grp_set3DFloatArray_1_fu_842_ap_start_reg = 1'b0;
#0 grp_set3DFloatArray_fu_847_ap_start_reg = 1'b0;
end

infer_layer_12_weights #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer_12_weights_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(layer_12_weights_address0),
    .ce0(layer_12_weights_ce0),
    .q0(layer_12_weights_q0)
);

infer_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

infer_image_input #(
    .DataWidth( 32 ),
    .AddressRange( 3600 ),
    .AddressWidth( 12 ))
image_input_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(image_input_address0),
    .ce0(image_input_ce0),
    .we0(image_input_we0),
    .d0(image_input_d0),
    .q0(image_input_q0),
    .address1(image_input_address1),
    .ce1(image_input_ce1),
    .q1(image_input_q1)
);

infer_layer_2_output #(
    .DataWidth( 32 ),
    .AddressRange( 107648 ),
    .AddressWidth( 17 ))
layer_2_output_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(layer_2_output_address0),
    .ce0(layer_2_output_ce0),
    .we0(layer_2_output_we0),
    .d0(layer_2_output_d0),
    .q0(layer_2_output_q0),
    .address1(grp_max_pooling2d_2_fu_774_input_r_address1),
    .ce1(layer_2_output_ce1),
    .q1(layer_2_output_q1)
);

infer_layer_3_output #(
    .DataWidth( 32 ),
    .AddressRange( 26912 ),
    .AddressWidth( 15 ))
layer_3_output_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(layer_3_output_address0),
    .ce0(layer_3_output_ce0),
    .we0(layer_3_output_we0),
    .d0(layer_3_output_d0),
    .q0(layer_3_output_q0)
);

infer_layer_4_output #(
    .DataWidth( 32 ),
    .AddressRange( 23328 ),
    .AddressWidth( 15 ))
layer_4_output_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(layer_4_output_address0),
    .ce0(layer_4_output_ce0),
    .we0(layer_4_output_we0),
    .d0(layer_4_output_d0),
    .q0(layer_4_output_q0),
    .address1(grp_max_pooling2d_1_fu_780_input_r_address1),
    .ce1(layer_4_output_ce1),
    .q1(layer_4_output_q1)
);

infer_layer_5_output #(
    .DataWidth( 32 ),
    .AddressRange( 5408 ),
    .AddressWidth( 13 ))
layer_5_output_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(layer_5_output_address0),
    .ce0(layer_5_output_ce0),
    .we0(layer_5_output_we0),
    .d0(layer_5_output_d0),
    .q0(layer_5_output_q0)
);

infer_layer_6_output #(
    .DataWidth( 32 ),
    .AddressRange( 3872 ),
    .AddressWidth( 12 ))
layer_6_output_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(layer_6_output_address0),
    .ce0(layer_6_output_ce0),
    .we0(layer_6_output_we0),
    .d0(layer_6_output_d0),
    .q0(layer_6_output_q0),
    .address1(grp_max_pooling2d_fu_786_input_r_address1),
    .ce1(layer_6_output_ce1),
    .q1(layer_6_output_q1)
);

infer_layer_7_output #(
    .DataWidth( 32 ),
    .AddressRange( 800 ),
    .AddressWidth( 10 ))
layer_7_output_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(layer_7_output_address0),
    .ce0(layer_7_output_ce0),
    .we0(layer_7_output_we0),
    .d0(layer_7_output_d0),
    .q0(layer_7_output_q0)
);

infer_layer_9_output #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer_9_output_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(layer_9_output_address0),
    .ce0(layer_9_output_ce0),
    .we0(layer_9_output_we0),
    .d0(layer_9_output_d0),
    .q0(layer_9_output_q0)
);

infer_layer_10_output #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
layer_10_output_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(layer_10_output_address0),
    .ce0(layer_10_output_ce0),
    .we0(layer_10_output_we0),
    .d0(layer_10_output_d0),
    .q0(layer_10_output_q0)
);

infer_layer_11_output #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
layer_11_output_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(layer_11_output_address0),
    .ce0(layer_11_output_ce0),
    .we0(layer_11_output_we0),
    .d0(layer_11_output_d0),
    .q0(layer_11_output_q0),
    .address1(layer_11_output_address1),
    .ce1(layer_11_output_ce1),
    .q1(layer_11_output_q1)
);

infer_conv2d_2 grp_conv2d_2_fu_744(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_conv2d_2_fu_744_ap_start),
    .ap_done(grp_conv2d_2_fu_744_ap_done),
    .ap_idle(grp_conv2d_2_fu_744_ap_idle),
    .ap_ready(grp_conv2d_2_fu_744_ap_ready),
    .input_r_address0(grp_conv2d_2_fu_744_input_r_address0),
    .input_r_ce0(grp_conv2d_2_fu_744_input_r_ce0),
    .input_r_q0(image_input_q0),
    .output_r_address0(grp_conv2d_2_fu_744_output_r_address0),
    .output_r_ce0(grp_conv2d_2_fu_744_output_r_ce0),
    .output_r_we0(grp_conv2d_2_fu_744_output_r_we0),
    .output_r_d0(grp_conv2d_2_fu_744_output_r_d0),
    .grp_fu_852_p_din0(grp_conv2d_2_fu_744_grp_fu_852_p_din0),
    .grp_fu_852_p_din1(grp_conv2d_2_fu_744_grp_fu_852_p_din1),
    .grp_fu_852_p_opcode(grp_conv2d_2_fu_744_grp_fu_852_p_opcode),
    .grp_fu_852_p_dout0(grp_conv2d_2_fu_744_grp_fu_852_p_dout0),
    .grp_fu_852_p_ce(grp_conv2d_2_fu_744_grp_fu_852_p_ce),
    .grp_fu_856_p_din0(grp_conv2d_2_fu_744_grp_fu_856_p_din0),
    .grp_fu_856_p_din1(grp_conv2d_2_fu_744_grp_fu_856_p_din1),
    .grp_fu_856_p_dout0(grp_conv2d_2_fu_744_grp_fu_856_p_dout0),
    .grp_fu_856_p_ce(grp_conv2d_2_fu_744_grp_fu_856_p_ce),
    .grp_fu_1954_p_din0(grp_conv2d_2_fu_744_grp_fu_1954_p_din0),
    .grp_fu_1954_p_din1(grp_conv2d_2_fu_744_grp_fu_1954_p_din1),
    .grp_fu_1954_p_opcode(grp_conv2d_2_fu_744_grp_fu_1954_p_opcode),
    .grp_fu_1954_p_dout0(grp_conv2d_2_fu_744_grp_fu_1954_p_dout0),
    .grp_fu_1954_p_ce(grp_conv2d_2_fu_744_grp_fu_1954_p_ce)
);

infer_conv2d_1 grp_conv2d_1_fu_754(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_conv2d_1_fu_754_ap_start),
    .ap_done(grp_conv2d_1_fu_754_ap_done),
    .ap_idle(grp_conv2d_1_fu_754_ap_idle),
    .ap_ready(grp_conv2d_1_fu_754_ap_ready),
    .input_r_address0(grp_conv2d_1_fu_754_input_r_address0),
    .input_r_ce0(grp_conv2d_1_fu_754_input_r_ce0),
    .input_r_q0(layer_3_output_q0),
    .output_r_address0(grp_conv2d_1_fu_754_output_r_address0),
    .output_r_ce0(grp_conv2d_1_fu_754_output_r_ce0),
    .output_r_we0(grp_conv2d_1_fu_754_output_r_we0),
    .output_r_d0(grp_conv2d_1_fu_754_output_r_d0),
    .grp_fu_852_p_din0(grp_conv2d_1_fu_754_grp_fu_852_p_din0),
    .grp_fu_852_p_din1(grp_conv2d_1_fu_754_grp_fu_852_p_din1),
    .grp_fu_852_p_opcode(grp_conv2d_1_fu_754_grp_fu_852_p_opcode),
    .grp_fu_852_p_dout0(grp_conv2d_1_fu_754_grp_fu_852_p_dout0),
    .grp_fu_852_p_ce(grp_conv2d_1_fu_754_grp_fu_852_p_ce),
    .grp_fu_856_p_din0(grp_conv2d_1_fu_754_grp_fu_856_p_din0),
    .grp_fu_856_p_din1(grp_conv2d_1_fu_754_grp_fu_856_p_din1),
    .grp_fu_856_p_dout0(grp_conv2d_1_fu_754_grp_fu_856_p_dout0),
    .grp_fu_856_p_ce(grp_conv2d_1_fu_754_grp_fu_856_p_ce),
    .grp_fu_1954_p_din0(grp_conv2d_1_fu_754_grp_fu_1954_p_din0),
    .grp_fu_1954_p_din1(grp_conv2d_1_fu_754_grp_fu_1954_p_din1),
    .grp_fu_1954_p_opcode(grp_conv2d_1_fu_754_grp_fu_1954_p_opcode),
    .grp_fu_1954_p_dout0(grp_conv2d_1_fu_754_grp_fu_1954_p_dout0),
    .grp_fu_1954_p_ce(grp_conv2d_1_fu_754_grp_fu_1954_p_ce)
);

infer_conv2d grp_conv2d_fu_764(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_conv2d_fu_764_ap_start),
    .ap_done(grp_conv2d_fu_764_ap_done),
    .ap_idle(grp_conv2d_fu_764_ap_idle),
    .ap_ready(grp_conv2d_fu_764_ap_ready),
    .input_r_address0(grp_conv2d_fu_764_input_r_address0),
    .input_r_ce0(grp_conv2d_fu_764_input_r_ce0),
    .input_r_q0(layer_5_output_q0),
    .output_r_address0(grp_conv2d_fu_764_output_r_address0),
    .output_r_ce0(grp_conv2d_fu_764_output_r_ce0),
    .output_r_we0(grp_conv2d_fu_764_output_r_we0),
    .output_r_d0(grp_conv2d_fu_764_output_r_d0),
    .grp_fu_852_p_din0(grp_conv2d_fu_764_grp_fu_852_p_din0),
    .grp_fu_852_p_din1(grp_conv2d_fu_764_grp_fu_852_p_din1),
    .grp_fu_852_p_opcode(grp_conv2d_fu_764_grp_fu_852_p_opcode),
    .grp_fu_852_p_dout0(grp_conv2d_fu_764_grp_fu_852_p_dout0),
    .grp_fu_852_p_ce(grp_conv2d_fu_764_grp_fu_852_p_ce),
    .grp_fu_856_p_din0(grp_conv2d_fu_764_grp_fu_856_p_din0),
    .grp_fu_856_p_din1(grp_conv2d_fu_764_grp_fu_856_p_din1),
    .grp_fu_856_p_dout0(grp_conv2d_fu_764_grp_fu_856_p_dout0),
    .grp_fu_856_p_ce(grp_conv2d_fu_764_grp_fu_856_p_ce),
    .grp_fu_1954_p_din0(grp_conv2d_fu_764_grp_fu_1954_p_din0),
    .grp_fu_1954_p_din1(grp_conv2d_fu_764_grp_fu_1954_p_din1),
    .grp_fu_1954_p_opcode(grp_conv2d_fu_764_grp_fu_1954_p_opcode),
    .grp_fu_1954_p_dout0(grp_conv2d_fu_764_grp_fu_1954_p_dout0),
    .grp_fu_1954_p_ce(grp_conv2d_fu_764_grp_fu_1954_p_ce)
);

infer_max_pooling2d_2 grp_max_pooling2d_2_fu_774(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_max_pooling2d_2_fu_774_ap_start),
    .ap_done(grp_max_pooling2d_2_fu_774_ap_done),
    .ap_idle(grp_max_pooling2d_2_fu_774_ap_idle),
    .ap_ready(grp_max_pooling2d_2_fu_774_ap_ready),
    .input_r_address0(grp_max_pooling2d_2_fu_774_input_r_address0),
    .input_r_ce0(grp_max_pooling2d_2_fu_774_input_r_ce0),
    .input_r_q0(layer_2_output_q0),
    .input_r_address1(grp_max_pooling2d_2_fu_774_input_r_address1),
    .input_r_ce1(grp_max_pooling2d_2_fu_774_input_r_ce1),
    .input_r_q1(layer_2_output_q1),
    .output_r_address0(grp_max_pooling2d_2_fu_774_output_r_address0),
    .output_r_ce0(grp_max_pooling2d_2_fu_774_output_r_ce0),
    .output_r_we0(grp_max_pooling2d_2_fu_774_output_r_we0),
    .output_r_d0(grp_max_pooling2d_2_fu_774_output_r_d0),
    .grp_fu_1954_p_din0(grp_max_pooling2d_2_fu_774_grp_fu_1954_p_din0),
    .grp_fu_1954_p_din1(grp_max_pooling2d_2_fu_774_grp_fu_1954_p_din1),
    .grp_fu_1954_p_opcode(grp_max_pooling2d_2_fu_774_grp_fu_1954_p_opcode),
    .grp_fu_1954_p_dout0(grp_max_pooling2d_2_fu_774_grp_fu_1954_p_dout0),
    .grp_fu_1954_p_ce(grp_max_pooling2d_2_fu_774_grp_fu_1954_p_ce),
    .grp_fu_1958_p_din0(grp_max_pooling2d_2_fu_774_grp_fu_1958_p_din0),
    .grp_fu_1958_p_din1(grp_max_pooling2d_2_fu_774_grp_fu_1958_p_din1),
    .grp_fu_1958_p_opcode(grp_max_pooling2d_2_fu_774_grp_fu_1958_p_opcode),
    .grp_fu_1958_p_dout0(grp_max_pooling2d_2_fu_774_grp_fu_1958_p_dout0),
    .grp_fu_1958_p_ce(grp_max_pooling2d_2_fu_774_grp_fu_1958_p_ce)
);

infer_max_pooling2d_1 grp_max_pooling2d_1_fu_780(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_max_pooling2d_1_fu_780_ap_start),
    .ap_done(grp_max_pooling2d_1_fu_780_ap_done),
    .ap_idle(grp_max_pooling2d_1_fu_780_ap_idle),
    .ap_ready(grp_max_pooling2d_1_fu_780_ap_ready),
    .input_r_address0(grp_max_pooling2d_1_fu_780_input_r_address0),
    .input_r_ce0(grp_max_pooling2d_1_fu_780_input_r_ce0),
    .input_r_q0(layer_4_output_q0),
    .input_r_address1(grp_max_pooling2d_1_fu_780_input_r_address1),
    .input_r_ce1(grp_max_pooling2d_1_fu_780_input_r_ce1),
    .input_r_q1(layer_4_output_q1),
    .output_r_address0(grp_max_pooling2d_1_fu_780_output_r_address0),
    .output_r_ce0(grp_max_pooling2d_1_fu_780_output_r_ce0),
    .output_r_we0(grp_max_pooling2d_1_fu_780_output_r_we0),
    .output_r_d0(grp_max_pooling2d_1_fu_780_output_r_d0),
    .grp_fu_1954_p_din0(grp_max_pooling2d_1_fu_780_grp_fu_1954_p_din0),
    .grp_fu_1954_p_din1(grp_max_pooling2d_1_fu_780_grp_fu_1954_p_din1),
    .grp_fu_1954_p_opcode(grp_max_pooling2d_1_fu_780_grp_fu_1954_p_opcode),
    .grp_fu_1954_p_dout0(grp_max_pooling2d_1_fu_780_grp_fu_1954_p_dout0),
    .grp_fu_1954_p_ce(grp_max_pooling2d_1_fu_780_grp_fu_1954_p_ce),
    .grp_fu_1958_p_din0(grp_max_pooling2d_1_fu_780_grp_fu_1958_p_din0),
    .grp_fu_1958_p_din1(grp_max_pooling2d_1_fu_780_grp_fu_1958_p_din1),
    .grp_fu_1958_p_opcode(grp_max_pooling2d_1_fu_780_grp_fu_1958_p_opcode),
    .grp_fu_1958_p_dout0(grp_max_pooling2d_1_fu_780_grp_fu_1958_p_dout0),
    .grp_fu_1958_p_ce(grp_max_pooling2d_1_fu_780_grp_fu_1958_p_ce)
);

infer_max_pooling2d grp_max_pooling2d_fu_786(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_max_pooling2d_fu_786_ap_start),
    .ap_done(grp_max_pooling2d_fu_786_ap_done),
    .ap_idle(grp_max_pooling2d_fu_786_ap_idle),
    .ap_ready(grp_max_pooling2d_fu_786_ap_ready),
    .input_r_address0(grp_max_pooling2d_fu_786_input_r_address0),
    .input_r_ce0(grp_max_pooling2d_fu_786_input_r_ce0),
    .input_r_q0(layer_6_output_q0),
    .input_r_address1(grp_max_pooling2d_fu_786_input_r_address1),
    .input_r_ce1(grp_max_pooling2d_fu_786_input_r_ce1),
    .input_r_q1(layer_6_output_q1),
    .output_r_address0(grp_max_pooling2d_fu_786_output_r_address0),
    .output_r_ce0(grp_max_pooling2d_fu_786_output_r_ce0),
    .output_r_we0(grp_max_pooling2d_fu_786_output_r_we0),
    .output_r_d0(grp_max_pooling2d_fu_786_output_r_d0),
    .grp_fu_1954_p_din0(grp_max_pooling2d_fu_786_grp_fu_1954_p_din0),
    .grp_fu_1954_p_din1(grp_max_pooling2d_fu_786_grp_fu_1954_p_din1),
    .grp_fu_1954_p_opcode(grp_max_pooling2d_fu_786_grp_fu_1954_p_opcode),
    .grp_fu_1954_p_dout0(grp_max_pooling2d_fu_786_grp_fu_1954_p_dout0),
    .grp_fu_1954_p_ce(grp_max_pooling2d_fu_786_grp_fu_1954_p_ce),
    .grp_fu_1958_p_din0(grp_max_pooling2d_fu_786_grp_fu_1958_p_din0),
    .grp_fu_1958_p_din1(grp_max_pooling2d_fu_786_grp_fu_1958_p_din1),
    .grp_fu_1958_p_opcode(grp_max_pooling2d_fu_786_grp_fu_1958_p_opcode),
    .grp_fu_1958_p_dout0(grp_max_pooling2d_fu_786_grp_fu_1958_p_dout0),
    .grp_fu_1958_p_ce(grp_max_pooling2d_fu_786_grp_fu_1958_p_ce)
);

infer_dense_relu_2 grp_dense_relu_2_fu_792(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_dense_relu_2_fu_792_ap_start),
    .ap_done(grp_dense_relu_2_fu_792_ap_done),
    .ap_idle(grp_dense_relu_2_fu_792_ap_idle),
    .ap_ready(grp_dense_relu_2_fu_792_ap_ready),
    .input_r_address0(grp_dense_relu_2_fu_792_input_r_address0),
    .input_r_ce0(grp_dense_relu_2_fu_792_input_r_ce0),
    .input_r_q0(layer_7_output_q0),
    .output_r_address0(grp_dense_relu_2_fu_792_output_r_address0),
    .output_r_ce0(grp_dense_relu_2_fu_792_output_r_ce0),
    .output_r_we0(grp_dense_relu_2_fu_792_output_r_we0),
    .output_r_d0(grp_dense_relu_2_fu_792_output_r_d0),
    .output_r_q0(layer_9_output_q0),
    .grp_fu_852_p_din0(grp_dense_relu_2_fu_792_grp_fu_852_p_din0),
    .grp_fu_852_p_din1(grp_dense_relu_2_fu_792_grp_fu_852_p_din1),
    .grp_fu_852_p_opcode(grp_dense_relu_2_fu_792_grp_fu_852_p_opcode),
    .grp_fu_852_p_dout0(grp_dense_relu_2_fu_792_grp_fu_852_p_dout0),
    .grp_fu_852_p_ce(grp_dense_relu_2_fu_792_grp_fu_852_p_ce),
    .grp_fu_856_p_din0(grp_dense_relu_2_fu_792_grp_fu_856_p_din0),
    .grp_fu_856_p_din1(grp_dense_relu_2_fu_792_grp_fu_856_p_din1),
    .grp_fu_856_p_dout0(grp_dense_relu_2_fu_792_grp_fu_856_p_dout0),
    .grp_fu_856_p_ce(grp_dense_relu_2_fu_792_grp_fu_856_p_ce),
    .grp_fu_1954_p_din0(grp_dense_relu_2_fu_792_grp_fu_1954_p_din0),
    .grp_fu_1954_p_din1(grp_dense_relu_2_fu_792_grp_fu_1954_p_din1),
    .grp_fu_1954_p_opcode(grp_dense_relu_2_fu_792_grp_fu_1954_p_opcode),
    .grp_fu_1954_p_dout0(grp_dense_relu_2_fu_792_grp_fu_1954_p_dout0),
    .grp_fu_1954_p_ce(grp_dense_relu_2_fu_792_grp_fu_1954_p_ce)
);

infer_dense_relu_1 grp_dense_relu_1_fu_802(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_dense_relu_1_fu_802_ap_start),
    .ap_done(grp_dense_relu_1_fu_802_ap_done),
    .ap_idle(grp_dense_relu_1_fu_802_ap_idle),
    .ap_ready(grp_dense_relu_1_fu_802_ap_ready),
    .input_r_address0(grp_dense_relu_1_fu_802_input_r_address0),
    .input_r_ce0(grp_dense_relu_1_fu_802_input_r_ce0),
    .input_r_q0(layer_9_output_q0),
    .output_r_address0(grp_dense_relu_1_fu_802_output_r_address0),
    .output_r_ce0(grp_dense_relu_1_fu_802_output_r_ce0),
    .output_r_we0(grp_dense_relu_1_fu_802_output_r_we0),
    .output_r_d0(grp_dense_relu_1_fu_802_output_r_d0),
    .output_r_q0(layer_10_output_q0),
    .grp_fu_852_p_din0(grp_dense_relu_1_fu_802_grp_fu_852_p_din0),
    .grp_fu_852_p_din1(grp_dense_relu_1_fu_802_grp_fu_852_p_din1),
    .grp_fu_852_p_opcode(grp_dense_relu_1_fu_802_grp_fu_852_p_opcode),
    .grp_fu_852_p_dout0(grp_dense_relu_1_fu_802_grp_fu_852_p_dout0),
    .grp_fu_852_p_ce(grp_dense_relu_1_fu_802_grp_fu_852_p_ce),
    .grp_fu_856_p_din0(grp_dense_relu_1_fu_802_grp_fu_856_p_din0),
    .grp_fu_856_p_din1(grp_dense_relu_1_fu_802_grp_fu_856_p_din1),
    .grp_fu_856_p_dout0(grp_dense_relu_1_fu_802_grp_fu_856_p_dout0),
    .grp_fu_856_p_ce(grp_dense_relu_1_fu_802_grp_fu_856_p_ce),
    .grp_fu_1954_p_din0(grp_dense_relu_1_fu_802_grp_fu_1954_p_din0),
    .grp_fu_1954_p_din1(grp_dense_relu_1_fu_802_grp_fu_1954_p_din1),
    .grp_fu_1954_p_opcode(grp_dense_relu_1_fu_802_grp_fu_1954_p_opcode),
    .grp_fu_1954_p_dout0(grp_dense_relu_1_fu_802_grp_fu_1954_p_dout0),
    .grp_fu_1954_p_ce(grp_dense_relu_1_fu_802_grp_fu_1954_p_ce)
);

infer_dense_relu grp_dense_relu_fu_812(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_dense_relu_fu_812_ap_start),
    .ap_done(grp_dense_relu_fu_812_ap_done),
    .ap_idle(grp_dense_relu_fu_812_ap_idle),
    .ap_ready(grp_dense_relu_fu_812_ap_ready),
    .input_r_address0(grp_dense_relu_fu_812_input_r_address0),
    .input_r_ce0(grp_dense_relu_fu_812_input_r_ce0),
    .input_r_q0(layer_10_output_q0),
    .output_r_address0(grp_dense_relu_fu_812_output_r_address0),
    .output_r_ce0(grp_dense_relu_fu_812_output_r_ce0),
    .output_r_we0(grp_dense_relu_fu_812_output_r_we0),
    .output_r_d0(grp_dense_relu_fu_812_output_r_d0),
    .output_r_q0(layer_11_output_q0),
    .grp_fu_852_p_din0(grp_dense_relu_fu_812_grp_fu_852_p_din0),
    .grp_fu_852_p_din1(grp_dense_relu_fu_812_grp_fu_852_p_din1),
    .grp_fu_852_p_opcode(grp_dense_relu_fu_812_grp_fu_852_p_opcode),
    .grp_fu_852_p_dout0(grp_dense_relu_fu_812_grp_fu_852_p_dout0),
    .grp_fu_852_p_ce(grp_dense_relu_fu_812_grp_fu_852_p_ce),
    .grp_fu_856_p_din0(grp_dense_relu_fu_812_grp_fu_856_p_din0),
    .grp_fu_856_p_din1(grp_dense_relu_fu_812_grp_fu_856_p_din1),
    .grp_fu_856_p_dout0(grp_dense_relu_fu_812_grp_fu_856_p_dout0),
    .grp_fu_856_p_ce(grp_dense_relu_fu_812_grp_fu_856_p_ce),
    .grp_fu_1954_p_din0(grp_dense_relu_fu_812_grp_fu_1954_p_din0),
    .grp_fu_1954_p_din1(grp_dense_relu_fu_812_grp_fu_1954_p_din1),
    .grp_fu_1954_p_opcode(grp_dense_relu_fu_812_grp_fu_1954_p_opcode),
    .grp_fu_1954_p_dout0(grp_dense_relu_fu_812_grp_fu_1954_p_dout0),
    .grp_fu_1954_p_ce(grp_dense_relu_fu_812_grp_fu_1954_p_ce)
);

infer_set3DFloatArray_5 grp_set3DFloatArray_5_fu_822(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_set3DFloatArray_5_fu_822_ap_start),
    .ap_done(grp_set3DFloatArray_5_fu_822_ap_done),
    .ap_idle(grp_set3DFloatArray_5_fu_822_ap_idle),
    .ap_ready(grp_set3DFloatArray_5_fu_822_ap_ready),
    .array_r_address0(grp_set3DFloatArray_5_fu_822_array_r_address0),
    .array_r_ce0(grp_set3DFloatArray_5_fu_822_array_r_ce0),
    .array_r_we0(grp_set3DFloatArray_5_fu_822_array_r_we0),
    .array_r_d0(grp_set3DFloatArray_5_fu_822_array_r_d0)
);

infer_set3DFloatArray_4 grp_set3DFloatArray_4_fu_827(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_set3DFloatArray_4_fu_827_ap_start),
    .ap_done(grp_set3DFloatArray_4_fu_827_ap_done),
    .ap_idle(grp_set3DFloatArray_4_fu_827_ap_idle),
    .ap_ready(grp_set3DFloatArray_4_fu_827_ap_ready),
    .array_r_address0(grp_set3DFloatArray_4_fu_827_array_r_address0),
    .array_r_ce0(grp_set3DFloatArray_4_fu_827_array_r_ce0),
    .array_r_we0(grp_set3DFloatArray_4_fu_827_array_r_we0),
    .array_r_d0(grp_set3DFloatArray_4_fu_827_array_r_d0)
);

infer_set3DFloatArray_3 grp_set3DFloatArray_3_fu_832(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_set3DFloatArray_3_fu_832_ap_start),
    .ap_done(grp_set3DFloatArray_3_fu_832_ap_done),
    .ap_idle(grp_set3DFloatArray_3_fu_832_ap_idle),
    .ap_ready(grp_set3DFloatArray_3_fu_832_ap_ready),
    .array_r_address0(grp_set3DFloatArray_3_fu_832_array_r_address0),
    .array_r_ce0(grp_set3DFloatArray_3_fu_832_array_r_ce0),
    .array_r_we0(grp_set3DFloatArray_3_fu_832_array_r_we0),
    .array_r_d0(grp_set3DFloatArray_3_fu_832_array_r_d0)
);

infer_set3DFloatArray_2 grp_set3DFloatArray_2_fu_837(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_set3DFloatArray_2_fu_837_ap_start),
    .ap_done(grp_set3DFloatArray_2_fu_837_ap_done),
    .ap_idle(grp_set3DFloatArray_2_fu_837_ap_idle),
    .ap_ready(grp_set3DFloatArray_2_fu_837_ap_ready),
    .array_r_address0(grp_set3DFloatArray_2_fu_837_array_r_address0),
    .array_r_ce0(grp_set3DFloatArray_2_fu_837_array_r_ce0),
    .array_r_we0(grp_set3DFloatArray_2_fu_837_array_r_we0),
    .array_r_d0(grp_set3DFloatArray_2_fu_837_array_r_d0)
);

infer_set3DFloatArray_1 grp_set3DFloatArray_1_fu_842(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_set3DFloatArray_1_fu_842_ap_start),
    .ap_done(grp_set3DFloatArray_1_fu_842_ap_done),
    .ap_idle(grp_set3DFloatArray_1_fu_842_ap_idle),
    .ap_ready(grp_set3DFloatArray_1_fu_842_ap_ready),
    .array_r_address0(grp_set3DFloatArray_1_fu_842_array_r_address0),
    .array_r_ce0(grp_set3DFloatArray_1_fu_842_array_r_ce0),
    .array_r_we0(grp_set3DFloatArray_1_fu_842_array_r_we0),
    .array_r_d0(grp_set3DFloatArray_1_fu_842_array_r_d0)
);

infer_set3DFloatArray grp_set3DFloatArray_fu_847(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_set3DFloatArray_fu_847_ap_start),
    .ap_done(grp_set3DFloatArray_fu_847_ap_done),
    .ap_idle(grp_set3DFloatArray_fu_847_ap_idle),
    .ap_ready(grp_set3DFloatArray_fu_847_ap_ready),
    .array_r_address0(grp_set3DFloatArray_fu_847_array_r_address0),
    .array_r_ce0(grp_set3DFloatArray_fu_847_array_r_ce0),
    .array_r_we0(grp_set3DFloatArray_fu_847_array_r_we0),
    .array_r_d0(grp_set3DFloatArray_fu_847_array_r_d0)
);

infer_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_5_full_dsp_1_U103(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_852_p0),
    .din1(grp_fu_852_p1),
    .ce(grp_fu_852_ce),
    .dout(grp_fu_852_p2)
);

infer_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U104(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_856_p0),
    .din1(grp_fu_856_p1),
    .ce(grp_fu_856_ce),
    .dout(grp_fu_856_p2)
);

infer_fdiv_32ns_32ns_32_10_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_10_no_dsp_1_U105(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(image_input_load_reg_1476),
    .din1(32'd1132396544),
    .ce(1'b1),
    .dout(grp_fu_861_p2)
);

infer_sitofp_32ns_32_4_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sitofp_32ns_32_4_no_dsp_1_U106(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(single_pixel_reg_1441),
    .ce(grp_fu_866_ce),
    .dout(grp_fu_866_p1)
);

infer_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U107(
    .din0(grp_load_fu_869_p1),
    .din1(grp_load_fu_872_p1),
    .din2(grp_load_fu_875_p1),
    .din3(grp_load_fu_878_p1),
    .din4(tmp_fu_1233_p5),
    .dout(tmp_fu_1233_p6)
);

infer_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U108(
    .din0(32'd3162041295),
    .din1(32'd991531178),
    .din2(32'd3165706545),
    .din3(32'd1023928376),
    .din4(empty_52_reg_1800),
    .dout(tmp_s_fu_1364_p6)
);

infer_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U109(
    .din0(grp_load_fu_869_p1),
    .din1(grp_load_fu_872_p1),
    .din2(grp_load_fu_875_p1),
    .din3(grp_load_fu_878_p1),
    .din4(trunc_ln317_reg_1944),
    .dout(tmp_33_fu_1414_p6)
);

infer_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U110(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1954_p0),
    .din1(grp_fu_1954_p1),
    .ce(grp_fu_1954_ce),
    .opcode(grp_fu_1954_opcode),
    .dout(grp_fu_1954_p2)
);

infer_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U111(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1958_p0),
    .din1(grp_fu_1958_p1),
    .ce(grp_fu_1958_ce),
    .opcode(grp_fu_1958_opcode),
    .dout(grp_fu_1958_p2)
);

infer_regslice_both #(
    .DataWidth( 32 ))
regslice_both_infer_input_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(infer_input_V_TDATA),
    .vld_in(infer_input_V_TVALID),
    .ack_in(regslice_both_infer_input_V_U_ack_in),
    .data_out(infer_input_V_TDATA_int_regslice),
    .vld_out(infer_input_V_TVALID_int_regslice),
    .ack_out(infer_input_V_TREADY_int_regslice),
    .apdone_blk(regslice_both_infer_input_V_U_apdone_blk)
);

infer_regslice_both #(
    .DataWidth( 32 ))
regslice_both_infer_output_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(infer_output_V_TDATA_int_regslice),
    .vld_in(infer_output_V_TVALID_int_regslice),
    .ack_in(infer_output_V_TREADY_int_regslice),
    .data_out(infer_output_V_TDATA),
    .vld_out(regslice_both_infer_output_V_U_vld_out),
    .ack_out(infer_output_V_TREADY),
    .apdone_blk(regslice_both_infer_output_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state9) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state9)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state9);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter10 <= ap_enable_reg_pp1_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter11 <= ap_enable_reg_pp1_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter12 <= ap_enable_reg_pp1_iter11;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp1_iter12 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter9 <= ap_enable_reg_pp1_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp6_stage10) & (1'b1 == ap_condition_pp6_exit_iter0_state65) & (1'b0 == ap_block_pp6_stage10_subdone))) begin
            ap_enable_reg_pp6_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state54)) begin
            ap_enable_reg_pp6_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter1 <= 1'b0;
    end else begin
        if ((((ap_enable_reg_pp6_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp6_stage10) & (1'b0 == ap_block_pp6_stage10_subdone)) | ((1'b1 == ap_CS_fsm_pp6_stage83) & (1'b0 == ap_block_pp6_stage83_subdone)))) begin
            ap_enable_reg_pp6_iter1 <= ap_enable_reg_pp6_iter0;
        end else if ((1'b1 == ap_CS_fsm_state54)) begin
            ap_enable_reg_pp6_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp7_stage0) & (1'b1 == ap_condition_pp7_exit_iter0_state146) & (1'b0 == ap_block_pp7_stage0_subdone))) begin
            ap_enable_reg_pp7_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state145)) begin
            ap_enable_reg_pp7_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp7_exit_iter0_state146)) begin
                ap_enable_reg_pp7_iter1 <= (1'b1 ^ ap_condition_pp7_exit_iter0_state146);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp7_iter1 <= ap_enable_reg_pp7_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter2 <= ap_enable_reg_pp7_iter1;
        end else if ((1'b1 == ap_CS_fsm_state145)) begin
            ap_enable_reg_pp7_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_conv2d_1_fu_754_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state28)) begin
            grp_conv2d_1_fu_754_ap_start_reg <= 1'b1;
        end else if ((grp_conv2d_1_fu_754_ap_ready == 1'b1)) begin
            grp_conv2d_1_fu_754_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_conv2d_2_fu_744_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state24)) begin
            grp_conv2d_2_fu_744_ap_start_reg <= 1'b1;
        end else if ((grp_conv2d_2_fu_744_ap_ready == 1'b1)) begin
            grp_conv2d_2_fu_744_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_conv2d_fu_764_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state32)) begin
            grp_conv2d_fu_764_ap_start_reg <= 1'b1;
        end else if ((grp_conv2d_fu_764_ap_ready == 1'b1)) begin
            grp_conv2d_fu_764_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_dense_relu_1_fu_802_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state40)) begin
            grp_dense_relu_1_fu_802_ap_start_reg <= 1'b1;
        end else if ((grp_dense_relu_1_fu_802_ap_ready == 1'b1)) begin
            grp_dense_relu_1_fu_802_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_dense_relu_2_fu_792_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state37)) begin
            grp_dense_relu_2_fu_792_ap_start_reg <= 1'b1;
        end else if ((grp_dense_relu_2_fu_792_ap_ready == 1'b1)) begin
            grp_dense_relu_2_fu_792_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_dense_relu_fu_812_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state43)) begin
            grp_dense_relu_fu_812_ap_start_reg <= 1'b1;
        end else if ((grp_dense_relu_fu_812_ap_ready == 1'b1)) begin
            grp_dense_relu_fu_812_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_max_pooling2d_1_fu_780_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state30)) begin
            grp_max_pooling2d_1_fu_780_ap_start_reg <= 1'b1;
        end else if ((grp_max_pooling2d_1_fu_780_ap_ready == 1'b1)) begin
            grp_max_pooling2d_1_fu_780_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_max_pooling2d_2_fu_774_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state26)) begin
            grp_max_pooling2d_2_fu_774_ap_start_reg <= 1'b1;
        end else if ((grp_max_pooling2d_2_fu_774_ap_ready == 1'b1)) begin
            grp_max_pooling2d_2_fu_774_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_max_pooling2d_fu_786_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state34)) begin
            grp_max_pooling2d_fu_786_ap_start_reg <= 1'b1;
        end else if ((grp_max_pooling2d_fu_786_ap_ready == 1'b1)) begin
            grp_max_pooling2d_fu_786_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_set3DFloatArray_1_fu_842_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state22)) begin
            grp_set3DFloatArray_1_fu_842_ap_start_reg <= 1'b1;
        end else if ((grp_set3DFloatArray_1_fu_842_ap_ready == 1'b1)) begin
            grp_set3DFloatArray_1_fu_842_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_set3DFloatArray_2_fu_837_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state22)) begin
            grp_set3DFloatArray_2_fu_837_ap_start_reg <= 1'b1;
        end else if ((grp_set3DFloatArray_2_fu_837_ap_ready == 1'b1)) begin
            grp_set3DFloatArray_2_fu_837_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_set3DFloatArray_3_fu_832_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state22)) begin
            grp_set3DFloatArray_3_fu_832_ap_start_reg <= 1'b1;
        end else if ((grp_set3DFloatArray_3_fu_832_ap_ready == 1'b1)) begin
            grp_set3DFloatArray_3_fu_832_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_set3DFloatArray_4_fu_827_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state22)) begin
            grp_set3DFloatArray_4_fu_827_ap_start_reg <= 1'b1;
        end else if ((grp_set3DFloatArray_4_fu_827_ap_ready == 1'b1)) begin
            grp_set3DFloatArray_4_fu_827_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_set3DFloatArray_5_fu_822_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state22)) begin
            grp_set3DFloatArray_5_fu_822_ap_start_reg <= 1'b1;
        end else if ((grp_set3DFloatArray_5_fu_822_ap_ready == 1'b1)) begin
            grp_set3DFloatArray_5_fu_822_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_set3DFloatArray_fu_847_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state22)) begin
            grp_set3DFloatArray_fu_847_ap_start_reg <= 1'b1;
        end else if ((grp_set3DFloatArray_fu_847_ap_ready == 1'b1)) begin
            grp_set3DFloatArray_fu_847_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        i_1_reg_655 <= 6'd0;
    end else if (((icmp_ln31_fu_965_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        i_1_reg_655 <= select_ln31_2_fu_1025_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state35) & (grp_max_pooling2d_fu_786_ap_done == 1'b1))) begin
        i_2_reg_677 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state36) & (icmp_ln22_fu_1060_p2 == 1'd0))) begin
        i_2_reg_677 <= add_ln22_fu_1054_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state38) & (grp_dense_relu_2_fu_792_ap_done == 1'b1))) begin
        i_3_reg_688 <= 6'd0;
    end else if (((1'b1 == ap_CS_fsm_state39) & (icmp_ln22_1_fu_1077_p2 == 1'd0))) begin
        i_3_reg_688 <= add_ln22_1_fu_1071_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state41) & (grp_dense_relu_1_fu_802_ap_done == 1'b1))) begin
        i_4_reg_699 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_state42) & (icmp_ln22_2_fu_1094_p2 == 1'd0))) begin
        i_4_reg_699 <= add_ln22_2_fu_1088_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state45) & (icmp_ln22_3_fu_1123_p2 == 1'd0))) begin
        i_5_reg_710 <= add_ln22_3_fu_1105_p2;
    end else if (((1'b1 == ap_CS_fsm_state44) & (grp_dense_relu_fu_812_ap_done == 1'b1))) begin
        i_5_reg_710 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp6_iter1 == 1'b1) & (icmp_ln176_reg_1753 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        i_6_reg_721 <= add_ln176_reg_1855;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        i_6_reg_721 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state145)) begin
        i_7_reg_733 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001) & (icmp_ln315_fu_1404_p2 == 1'd0) & (ap_enable_reg_pp7_iter0 == 1'b1))) begin
        i_7_reg_733 <= add_ln315_fu_1398_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_reg_632 <= 12'd0;
    end else if (((icmp_ln200_reg_1437 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        i_reg_632 <= add_ln200_reg_1432;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ii_reg_666 <= 6'd0;
    end else if (((icmp_ln31_fu_965_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ii_reg_666 <= add_ln33_fu_1048_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        indvar_flatten_reg_644 <= 12'd0;
    end else if (((icmp_ln31_fu_965_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        indvar_flatten_reg_644 <= add_ln31_fu_933_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        layer_12_output_3_1_fu_280 <= layer_12_output_1_0_load_reg_1544;
    end else if (((empty_52_reg_1800 == 2'd1) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage5) & (1'b0 == ap_block_pp6_stage5_11001))) begin
        layer_12_output_3_1_fu_280 <= grp_fu_852_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        layer_12_output_3_2_fu_288 <= layer_12_output_3_0_load_reg_1554;
    end else if (((empty_52_reg_1800 == 2'd3) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage5) & (1'b0 == ap_block_pp6_stage5_11001))) begin
        layer_12_output_3_2_fu_288 <= grp_fu_852_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        layer_12_output_3_3_fu_284 <= layer_12_output_2_0_load_reg_1549;
    end else if (((empty_52_reg_1800 == 2'd2) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage5) & (1'b0 == ap_block_pp6_stage5_11001))) begin
        layer_12_output_3_3_fu_284 <= grp_fu_852_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        layer_12_output_3_fu_276 <= layer_12_output_0_0_load_reg_1539;
    end else if (((empty_52_reg_1800 == 2'd0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage5) & (1'b0 == ap_block_pp6_stage5_11001))) begin
        layer_12_output_3_fu_276 <= grp_fu_852_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage10) & (1'b0 == ap_block_pp6_stage10_11001))) begin
        add_ln176_reg_1855 <= add_ln176_fu_1303_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln176_reg_1753 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage5) & (1'b0 == ap_block_pp6_stage5_11001))) begin
        add_ln180_reg_1810 <= add_ln180_fu_1248_p2;
        empty_52_reg_1800 <= empty_52_fu_1229_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln200_reg_1432 <= add_ln200_fu_916_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln31_reg_1456_pp1_iter10_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        conv12_i_reg_1481 <= grp_fu_861_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln200_reg_1437_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_reg_1446 <= grp_fu_866_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln176_reg_1753 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage9) & (1'b0 == ap_block_pp6_stage9_11001))) begin
        i_7_cast4_reg_1845[2 : 0] <= i_7_cast4_fu_1288_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_reg_632_pp0_iter1_reg <= i_reg_632;
        icmp_ln200_reg_1437 <= icmp_ln200_fu_922_p2;
        icmp_ln200_reg_1437_pp0_iter1_reg <= icmp_ln200_reg_1437;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        i_reg_632_pp0_iter2_reg <= i_reg_632_pp0_iter1_reg;
        i_reg_632_pp0_iter3_reg <= i_reg_632_pp0_iter2_reg;
        i_reg_632_pp0_iter4_reg <= i_reg_632_pp0_iter3_reg;
        icmp_ln200_reg_1437_pp0_iter2_reg <= icmp_ln200_reg_1437_pp0_iter1_reg;
        icmp_ln200_reg_1437_pp0_iter3_reg <= icmp_ln200_reg_1437_pp0_iter2_reg;
        icmp_ln200_reg_1437_pp0_iter4_reg <= icmp_ln200_reg_1437_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        icmp_ln176_reg_1753 <= icmp_ln176_fu_1169_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        icmp_ln315_reg_1940 <= icmp_ln315_fu_1404_p2;
        icmp_ln315_reg_1940_pp7_iter1_reg <= icmp_ln315_reg_1940;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        icmp_ln31_reg_1456 <= icmp_ln31_fu_965_p2;
        icmp_ln31_reg_1456_pp1_iter1_reg <= icmp_ln31_reg_1456;
        image_input_addr_1_reg_1465_pp1_iter1_reg <= image_input_addr_1_reg_1465;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        icmp_ln31_reg_1456_pp1_iter10_reg <= icmp_ln31_reg_1456_pp1_iter9_reg;
        icmp_ln31_reg_1456_pp1_iter11_reg <= icmp_ln31_reg_1456_pp1_iter10_reg;
        icmp_ln31_reg_1456_pp1_iter2_reg <= icmp_ln31_reg_1456_pp1_iter1_reg;
        icmp_ln31_reg_1456_pp1_iter3_reg <= icmp_ln31_reg_1456_pp1_iter2_reg;
        icmp_ln31_reg_1456_pp1_iter4_reg <= icmp_ln31_reg_1456_pp1_iter3_reg;
        icmp_ln31_reg_1456_pp1_iter5_reg <= icmp_ln31_reg_1456_pp1_iter4_reg;
        icmp_ln31_reg_1456_pp1_iter6_reg <= icmp_ln31_reg_1456_pp1_iter5_reg;
        icmp_ln31_reg_1456_pp1_iter7_reg <= icmp_ln31_reg_1456_pp1_iter6_reg;
        icmp_ln31_reg_1456_pp1_iter8_reg <= icmp_ln31_reg_1456_pp1_iter7_reg;
        icmp_ln31_reg_1456_pp1_iter9_reg <= icmp_ln31_reg_1456_pp1_iter8_reg;
        image_input_addr_1_reg_1465_pp1_iter10_reg <= image_input_addr_1_reg_1465_pp1_iter9_reg;
        image_input_addr_1_reg_1465_pp1_iter11_reg <= image_input_addr_1_reg_1465_pp1_iter10_reg;
        image_input_addr_1_reg_1465_pp1_iter2_reg <= image_input_addr_1_reg_1465_pp1_iter1_reg;
        image_input_addr_1_reg_1465_pp1_iter3_reg <= image_input_addr_1_reg_1465_pp1_iter2_reg;
        image_input_addr_1_reg_1465_pp1_iter4_reg <= image_input_addr_1_reg_1465_pp1_iter3_reg;
        image_input_addr_1_reg_1465_pp1_iter5_reg <= image_input_addr_1_reg_1465_pp1_iter4_reg;
        image_input_addr_1_reg_1465_pp1_iter6_reg <= image_input_addr_1_reg_1465_pp1_iter5_reg;
        image_input_addr_1_reg_1465_pp1_iter7_reg <= image_input_addr_1_reg_1465_pp1_iter6_reg;
        image_input_addr_1_reg_1465_pp1_iter8_reg <= image_input_addr_1_reg_1465_pp1_iter7_reg;
        image_input_addr_1_reg_1465_pp1_iter9_reg <= image_input_addr_1_reg_1465_pp1_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln31_fu_965_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        image_input_addr_1_reg_1465 <= zext_ln37_fu_1043_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln31_reg_1456 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        image_input_load_reg_1476 <= image_input_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        layer_11_output_load_10_reg_1703 <= layer_11_output_q0;
        layer_11_output_load_11_reg_1708 <= layer_11_output_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        layer_11_output_load_12_reg_1723 <= layer_11_output_q0;
        layer_11_output_load_13_reg_1728 <= layer_11_output_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        layer_11_output_load_14_reg_1743 <= layer_11_output_q0;
        layer_11_output_load_15_reg_1748 <= layer_11_output_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        layer_11_output_load_1_reg_1608 <= layer_11_output_q0;
        layer_11_output_load_reg_1603 <= layer_11_output_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        layer_11_output_load_2_reg_1623 <= layer_11_output_q0;
        layer_11_output_load_3_reg_1628 <= layer_11_output_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        layer_11_output_load_4_reg_1643 <= layer_11_output_q0;
        layer_11_output_load_5_reg_1648 <= layer_11_output_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        layer_11_output_load_6_reg_1663 <= layer_11_output_q0;
        layer_11_output_load_7_reg_1668 <= layer_11_output_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        layer_11_output_load_8_reg_1683 <= layer_11_output_q0;
        layer_11_output_load_9_reg_1688 <= layer_11_output_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln176_reg_1753 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage15) & (1'b0 == ap_block_pp6_stage15_11001))) begin
        mul7_i_10_reg_1905 <= grp_fu_856_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln176_reg_1753 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage16) & (1'b0 == ap_block_pp6_stage16_11001))) begin
        mul7_i_11_reg_1915 <= grp_fu_856_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln176_reg_1753 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage17) & (1'b0 == ap_block_pp6_stage17_11001))) begin
        mul7_i_12_reg_1920 <= grp_fu_856_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln176_reg_1753 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage18) & (1'b0 == ap_block_pp6_stage18_11001))) begin
        mul7_i_13_reg_1925 <= grp_fu_856_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln176_reg_1753 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage7) & (1'b0 == ap_block_pp6_stage7_11001))) begin
        mul7_i_3_reg_1825 <= grp_fu_856_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln176_reg_1753 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage8) & (1'b0 == ap_block_pp6_stage8_11001))) begin
        mul7_i_4_reg_1835 <= grp_fu_856_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln176_reg_1753 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage10) & (1'b0 == ap_block_pp6_stage10_11001))) begin
        mul7_i_6_reg_1860 <= grp_fu_856_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln176_reg_1753 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage11) & (1'b0 == ap_block_pp6_stage11_11001))) begin
        mul7_i_7_reg_1870 <= grp_fu_856_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln176_reg_1753 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage12) & (1'b0 == ap_block_pp6_stage12_11001))) begin
        mul7_i_8_reg_1880 <= grp_fu_856_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln176_reg_1753 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage13) & (1'b0 == ap_block_pp6_stage13_11001))) begin
        mul7_i_9_reg_1890 <= grp_fu_856_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln176_reg_1753 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage4) & (1'b0 == ap_block_pp6_stage4_11001))) begin
        or_ln180_1_reg_1790[2 : 0] <= or_ln180_1_fu_1212_p3[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln176_reg_1753 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage2) & (1'b0 == ap_block_pp6_stage2_11001))) begin
        or_ln_reg_1774[2 : 0] <= or_ln_fu_1191_p3[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln176_reg_1753 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage9) & (1'b0 == ap_block_pp6_stage9_11001)) | ((icmp_ln176_reg_1753 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage4) & (1'b0 == ap_block_pp6_stage4_11001)))) begin
        reg_896 <= grp_fu_856_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln176_reg_1753 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage14) & (1'b0 == ap_block_pp6_stage14_11001)) | ((icmp_ln176_reg_1753 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage5) & (1'b0 == ap_block_pp6_stage5_11001)))) begin
        reg_901 <= grp_fu_856_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln176_reg_1753 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage19) & (1'b0 == ap_block_pp6_stage19_11001)) | ((icmp_ln176_reg_1753 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage6) & (1'b0 == ap_block_pp6_stage6_11001)))) begin
        reg_906 <= grp_fu_856_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp6_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001)) | ((icmp_ln176_reg_1753 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage79) & (1'b0 == ap_block_pp6_stage79_11001)) | ((icmp_ln176_reg_1753 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage74) & (1'b0 == ap_block_pp6_stage74_11001)) | ((icmp_ln176_reg_1753 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage69) & (1'b0 == ap_block_pp6_stage69_11001)) | ((icmp_ln176_reg_1753 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage64) & (1'b0 == ap_block_pp6_stage64_11001)) | ((icmp_ln176_reg_1753 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage59) & (1'b0 == ap_block_pp6_stage59_11001)) | ((icmp_ln176_reg_1753 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage54) & (1'b0 == ap_block_pp6_stage54_11001)) | ((icmp_ln176_reg_1753 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage49) & (1'b0 == ap_block_pp6_stage49_11001)) | ((icmp_ln176_reg_1753 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage44) & (1'b0 == ap_block_pp6_stage44_11001)) | ((icmp_ln176_reg_1753 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage39) & (1'b0 == ap_block_pp6_stage39_11001)) | ((icmp_ln176_reg_1753 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage34) & (1'b0 == ap_block_pp6_stage34_11001)) | ((icmp_ln176_reg_1753 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage29) & (1'b0 == ap_block_pp6_stage29_11001)) | ((icmp_ln176_reg_1753 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage24) & (1'b0 == ap_block_pp6_stage24_11001)) | ((icmp_ln176_reg_1753 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage19) & (1'b0 == ap_block_pp6_stage19_11001)) | ((icmp_ln176_reg_1753 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage9) & (1'b0 == ap_block_pp6_stage9_11001)) | ((icmp_ln176_reg_1753 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage14) & (1'b0 == ap_block_pp6_stage14_11001)))) begin
        reg_911 <= grp_fu_852_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln200_fu_922_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        single_pixel_reg_1441 <= infer_input_V_TDATA_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001) & (icmp_ln315_fu_1404_p2 == 1'd0))) begin
        trunc_ln317_reg_1944 <= trunc_ln317_fu_1410_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln176_reg_1753 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage1) & (1'b0 == ap_block_pp6_stage1_11001))) begin
        xor_ln180_reg_1762 <= xor_ln180_fu_1180_p2;
    end
end

always @ (*) begin
    if ((icmp_ln200_fu_922_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln31_fu_965_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state9 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state9 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln176_reg_1753 == 1'd1)) begin
        ap_condition_pp6_exit_iter0_state65 = 1'b1;
    end else begin
        ap_condition_pp6_exit_iter0_state65 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln315_fu_1404_p2 == 1'd1)) begin
        ap_condition_pp7_exit_iter0_state146 = 1'b1;
    end else begin
        ap_condition_pp7_exit_iter0_state146 = 1'b0;
    end
end

always @ (*) begin
    if (((regslice_both_infer_output_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state149))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter12 == 1'b0) & (ap_enable_reg_pp1_iter11 == 1'b0) & (ap_enable_reg_pp1_iter10 == 1'b0) & (ap_enable_reg_pp1_iter9 == 1'b0) & (ap_enable_reg_pp1_iter8 == 1'b0) & (ap_enable_reg_pp1_iter7 == 1'b0) & (ap_enable_reg_pp1_iter6 == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter0 == 1'b0))) begin
        ap_idle_pp6 = 1'b1;
    end else begin
        ap_idle_pp6 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter2 == 1'b0) & (ap_enable_reg_pp7_iter1 == 1'b0) & (ap_enable_reg_pp7_iter0 == 1'b0))) begin
        ap_idle_pp7 = 1'b1;
    end else begin
        ap_idle_pp7 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter1 == 1'b1) & (icmp_ln176_reg_1753 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0))) begin
        ap_phi_mux_i_6_phi_fu_725_p4 = add_ln176_reg_1855;
    end else begin
        ap_phi_mux_i_6_phi_fu_725_p4 = i_6_reg_721;
    end
end

always @ (*) begin
    if (((icmp_ln200_reg_1437 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_i_phi_fu_636_p4 = add_ln200_reg_1432;
    end else begin
        ap_phi_mux_i_phi_fu_636_p4 = i_reg_632;
    end
end

always @ (*) begin
    if (((regslice_both_infer_output_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state149))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((empty_52_reg_1800 == 2'd1) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage5) & (1'b0 == ap_block_pp6_stage5))) begin
        ap_sig_allocacmp_layer_12_output_3_1_load = grp_fu_852_p2;
    end else begin
        ap_sig_allocacmp_layer_12_output_3_1_load = layer_12_output_3_1_fu_280;
    end
end

always @ (*) begin
    if (((empty_52_reg_1800 == 2'd3) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage5) & (1'b0 == ap_block_pp6_stage5))) begin
        ap_sig_allocacmp_layer_12_output_3_2_load_1 = grp_fu_852_p2;
    end else begin
        ap_sig_allocacmp_layer_12_output_3_2_load_1 = layer_12_output_3_2_fu_288;
    end
end

always @ (*) begin
    if (((empty_52_reg_1800 == 2'd2) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage5) & (1'b0 == ap_block_pp6_stage5))) begin
        ap_sig_allocacmp_layer_12_output_3_3_load = grp_fu_852_p2;
    end else begin
        ap_sig_allocacmp_layer_12_output_3_3_load = layer_12_output_3_3_fu_284;
    end
end

always @ (*) begin
    if (((empty_52_reg_1800 == 2'd0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage5) & (1'b0 == ap_block_pp6_stage5))) begin
        ap_sig_allocacmp_layer_12_output_3_load = grp_fu_852_p2;
    end else begin
        ap_sig_allocacmp_layer_12_output_3_load = layer_12_output_3_fu_276;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state44))) begin
        grp_fu_1954_ce = grp_dense_relu_fu_812_grp_fu_1954_p_ce;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        grp_fu_1954_ce = grp_dense_relu_1_fu_802_grp_fu_1954_p_ce;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state38))) begin
        grp_fu_1954_ce = grp_dense_relu_2_fu_792_grp_fu_1954_p_ce;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35))) begin
        grp_fu_1954_ce = grp_max_pooling2d_fu_786_grp_fu_1954_p_ce;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30))) begin
        grp_fu_1954_ce = grp_max_pooling2d_1_fu_780_grp_fu_1954_p_ce;
    end else if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26))) begin
        grp_fu_1954_ce = grp_max_pooling2d_2_fu_774_grp_fu_1954_p_ce;
    end else if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32))) begin
        grp_fu_1954_ce = grp_conv2d_fu_764_grp_fu_1954_p_ce;
    end else if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28))) begin
        grp_fu_1954_ce = grp_conv2d_1_fu_754_grp_fu_1954_p_ce;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24))) begin
        grp_fu_1954_ce = grp_conv2d_2_fu_744_grp_fu_1954_p_ce;
    end else begin
        grp_fu_1954_ce = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state44))) begin
        grp_fu_1954_opcode = grp_dense_relu_fu_812_grp_fu_1954_p_opcode;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        grp_fu_1954_opcode = grp_dense_relu_1_fu_802_grp_fu_1954_p_opcode;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state38))) begin
        grp_fu_1954_opcode = grp_dense_relu_2_fu_792_grp_fu_1954_p_opcode;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35))) begin
        grp_fu_1954_opcode = grp_max_pooling2d_fu_786_grp_fu_1954_p_opcode;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30))) begin
        grp_fu_1954_opcode = grp_max_pooling2d_1_fu_780_grp_fu_1954_p_opcode;
    end else if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26))) begin
        grp_fu_1954_opcode = grp_max_pooling2d_2_fu_774_grp_fu_1954_p_opcode;
    end else if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32))) begin
        grp_fu_1954_opcode = grp_conv2d_fu_764_grp_fu_1954_p_opcode;
    end else if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28))) begin
        grp_fu_1954_opcode = grp_conv2d_1_fu_754_grp_fu_1954_p_opcode;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24))) begin
        grp_fu_1954_opcode = grp_conv2d_2_fu_744_grp_fu_1954_p_opcode;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state44))) begin
        grp_fu_1954_p0 = grp_dense_relu_fu_812_grp_fu_1954_p_din0;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        grp_fu_1954_p0 = grp_dense_relu_1_fu_802_grp_fu_1954_p_din0;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state38))) begin
        grp_fu_1954_p0 = grp_dense_relu_2_fu_792_grp_fu_1954_p_din0;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35))) begin
        grp_fu_1954_p0 = grp_max_pooling2d_fu_786_grp_fu_1954_p_din0;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30))) begin
        grp_fu_1954_p0 = grp_max_pooling2d_1_fu_780_grp_fu_1954_p_din0;
    end else if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26))) begin
        grp_fu_1954_p0 = grp_max_pooling2d_2_fu_774_grp_fu_1954_p_din0;
    end else if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32))) begin
        grp_fu_1954_p0 = grp_conv2d_fu_764_grp_fu_1954_p_din0;
    end else if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28))) begin
        grp_fu_1954_p0 = grp_conv2d_1_fu_754_grp_fu_1954_p_din0;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24))) begin
        grp_fu_1954_p0 = grp_conv2d_2_fu_744_grp_fu_1954_p_din0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state44))) begin
        grp_fu_1954_p1 = grp_dense_relu_fu_812_grp_fu_1954_p_din1;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        grp_fu_1954_p1 = grp_dense_relu_1_fu_802_grp_fu_1954_p_din1;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state38))) begin
        grp_fu_1954_p1 = grp_dense_relu_2_fu_792_grp_fu_1954_p_din1;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35))) begin
        grp_fu_1954_p1 = grp_max_pooling2d_fu_786_grp_fu_1954_p_din1;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30))) begin
        grp_fu_1954_p1 = grp_max_pooling2d_1_fu_780_grp_fu_1954_p_din1;
    end else if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26))) begin
        grp_fu_1954_p1 = grp_max_pooling2d_2_fu_774_grp_fu_1954_p_din1;
    end else if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32))) begin
        grp_fu_1954_p1 = grp_conv2d_fu_764_grp_fu_1954_p_din1;
    end else if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28))) begin
        grp_fu_1954_p1 = grp_conv2d_1_fu_754_grp_fu_1954_p_din1;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24))) begin
        grp_fu_1954_p1 = grp_conv2d_2_fu_744_grp_fu_1954_p_din1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35))) begin
        grp_fu_1958_ce = grp_max_pooling2d_fu_786_grp_fu_1958_p_ce;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30))) begin
        grp_fu_1958_ce = grp_max_pooling2d_1_fu_780_grp_fu_1958_p_ce;
    end else if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26))) begin
        grp_fu_1958_ce = grp_max_pooling2d_2_fu_774_grp_fu_1958_p_ce;
    end else begin
        grp_fu_1958_ce = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35))) begin
        grp_fu_1958_opcode = grp_max_pooling2d_fu_786_grp_fu_1958_p_opcode;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30))) begin
        grp_fu_1958_opcode = grp_max_pooling2d_1_fu_780_grp_fu_1958_p_opcode;
    end else if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26))) begin
        grp_fu_1958_opcode = grp_max_pooling2d_2_fu_774_grp_fu_1958_p_opcode;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35))) begin
        grp_fu_1958_p0 = grp_max_pooling2d_fu_786_grp_fu_1958_p_din0;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30))) begin
        grp_fu_1958_p0 = grp_max_pooling2d_1_fu_780_grp_fu_1958_p_din0;
    end else if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26))) begin
        grp_fu_1958_p0 = grp_max_pooling2d_2_fu_774_grp_fu_1958_p_din0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35))) begin
        grp_fu_1958_p1 = grp_max_pooling2d_fu_786_grp_fu_1958_p_din1;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30))) begin
        grp_fu_1958_p1 = grp_max_pooling2d_1_fu_780_grp_fu_1958_p_din1;
    end else if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26))) begin
        grp_fu_1958_p1 = grp_max_pooling2d_2_fu_774_grp_fu_1958_p_din1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state44))) begin
        grp_fu_852_ce = grp_dense_relu_fu_812_grp_fu_852_p_ce;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        grp_fu_852_ce = grp_dense_relu_1_fu_802_grp_fu_852_p_ce;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state38))) begin
        grp_fu_852_ce = grp_dense_relu_2_fu_792_grp_fu_852_p_ce;
    end else if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32))) begin
        grp_fu_852_ce = grp_conv2d_fu_764_grp_fu_852_p_ce;
    end else if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28))) begin
        grp_fu_852_ce = grp_conv2d_1_fu_754_grp_fu_852_p_ce;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24))) begin
        grp_fu_852_ce = grp_conv2d_2_fu_744_grp_fu_852_p_ce;
    end else begin
        grp_fu_852_ce = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state44))) begin
        grp_fu_852_p0 = grp_dense_relu_fu_812_grp_fu_852_p_din0;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        grp_fu_852_p0 = grp_dense_relu_1_fu_802_grp_fu_852_p_din0;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state38))) begin
        grp_fu_852_p0 = grp_dense_relu_2_fu_792_grp_fu_852_p_din0;
    end else if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32))) begin
        grp_fu_852_p0 = grp_conv2d_fu_764_grp_fu_852_p_din0;
    end else if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28))) begin
        grp_fu_852_p0 = grp_conv2d_1_fu_754_grp_fu_852_p_din0;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24))) begin
        grp_fu_852_p0 = grp_conv2d_2_fu_744_grp_fu_852_p_din0;
    end else if ((((ap_enable_reg_pp6_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage1) & (1'b0 == ap_block_pp6_stage1)) | ((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage15) & (1'b0 == ap_block_pp6_stage15)) | ((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage10) & (1'b0 == ap_block_pp6_stage10)) | ((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage80) & (1'b0 == ap_block_pp6_stage80)) | ((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage75) & (1'b0 == ap_block_pp6_stage75)) | ((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage70) & (1'b0 == ap_block_pp6_stage70)) | ((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage65) & (1'b0 == ap_block_pp6_stage65)) | ((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage60) & (1'b0 == ap_block_pp6_stage60)) | ((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage55) & (1'b0 == ap_block_pp6_stage55)) | ((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage50) & (1'b0 == ap_block_pp6_stage50)) | ((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage45) & (1'b0 == ap_block_pp6_stage45)) | ((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage40) & (1'b0 == ap_block_pp6_stage40)) | ((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage35) & (1'b0 == ap_block_pp6_stage35)) | ((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage30) & (1'b0 == ap_block_pp6_stage30)) | ((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage25) & (1'b0 == ap_block_pp6_stage25)) | ((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage20) & (1'b0 == ap_block_pp6_stage20)))) begin
        grp_fu_852_p0 = reg_911;
    end else if (((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage5) & (1'b0 == ap_block_pp6_stage5))) begin
        grp_fu_852_p0 = tmp_fu_1233_p6;
    end else begin
        grp_fu_852_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state44))) begin
        grp_fu_852_p1 = grp_dense_relu_fu_812_grp_fu_852_p_din1;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        grp_fu_852_p1 = grp_dense_relu_1_fu_802_grp_fu_852_p_din1;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state38))) begin
        grp_fu_852_p1 = grp_dense_relu_2_fu_792_grp_fu_852_p_din1;
    end else if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32))) begin
        grp_fu_852_p1 = grp_conv2d_fu_764_grp_fu_852_p_din1;
    end else if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28))) begin
        grp_fu_852_p1 = grp_conv2d_1_fu_754_grp_fu_852_p_din1;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24))) begin
        grp_fu_852_p1 = grp_conv2d_2_fu_744_grp_fu_852_p_din1;
    end else if (((ap_enable_reg_pp6_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage1) & (1'b0 == ap_block_pp6_stage1))) begin
        grp_fu_852_p1 = tmp_s_fu_1364_p6;
    end else if (((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage75) & (1'b0 == ap_block_pp6_stage75))) begin
        grp_fu_852_p1 = mul7_i_13_reg_1925;
    end else if (((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage70) & (1'b0 == ap_block_pp6_stage70))) begin
        grp_fu_852_p1 = mul7_i_12_reg_1920;
    end else if (((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage65) & (1'b0 == ap_block_pp6_stage65))) begin
        grp_fu_852_p1 = mul7_i_11_reg_1915;
    end else if (((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage60) & (1'b0 == ap_block_pp6_stage60))) begin
        grp_fu_852_p1 = mul7_i_10_reg_1905;
    end else if (((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage50) & (1'b0 == ap_block_pp6_stage50))) begin
        grp_fu_852_p1 = mul7_i_9_reg_1890;
    end else if (((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage45) & (1'b0 == ap_block_pp6_stage45))) begin
        grp_fu_852_p1 = mul7_i_8_reg_1880;
    end else if (((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage40) & (1'b0 == ap_block_pp6_stage40))) begin
        grp_fu_852_p1 = mul7_i_7_reg_1870;
    end else if (((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage35) & (1'b0 == ap_block_pp6_stage35))) begin
        grp_fu_852_p1 = mul7_i_6_reg_1860;
    end else if (((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage25) & (1'b0 == ap_block_pp6_stage25))) begin
        grp_fu_852_p1 = mul7_i_4_reg_1835;
    end else if (((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage20) & (1'b0 == ap_block_pp6_stage20))) begin
        grp_fu_852_p1 = mul7_i_3_reg_1825;
    end else if ((((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage15) & (1'b0 == ap_block_pp6_stage15)) | ((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage80) & (1'b0 == ap_block_pp6_stage80)))) begin
        grp_fu_852_p1 = reg_906;
    end else if ((((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage10) & (1'b0 == ap_block_pp6_stage10)) | ((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage55) & (1'b0 == ap_block_pp6_stage55)))) begin
        grp_fu_852_p1 = reg_901;
    end else if ((((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage5) & (1'b0 == ap_block_pp6_stage5)) | ((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage30) & (1'b0 == ap_block_pp6_stage30)))) begin
        grp_fu_852_p1 = reg_896;
    end else begin
        grp_fu_852_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state44))) begin
        grp_fu_856_ce = grp_dense_relu_fu_812_grp_fu_856_p_ce;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        grp_fu_856_ce = grp_dense_relu_1_fu_802_grp_fu_856_p_ce;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state38))) begin
        grp_fu_856_ce = grp_dense_relu_2_fu_792_grp_fu_856_p_ce;
    end else if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32))) begin
        grp_fu_856_ce = grp_conv2d_fu_764_grp_fu_856_p_ce;
    end else if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28))) begin
        grp_fu_856_ce = grp_conv2d_1_fu_754_grp_fu_856_p_ce;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24))) begin
        grp_fu_856_ce = grp_conv2d_2_fu_744_grp_fu_856_p_ce;
    end else begin
        grp_fu_856_ce = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state44))) begin
        grp_fu_856_p0 = grp_dense_relu_fu_812_grp_fu_856_p_din0;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        grp_fu_856_p0 = grp_dense_relu_1_fu_802_grp_fu_856_p_din0;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state38))) begin
        grp_fu_856_p0 = grp_dense_relu_2_fu_792_grp_fu_856_p_din0;
    end else if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32))) begin
        grp_fu_856_p0 = grp_conv2d_fu_764_grp_fu_856_p_din0;
    end else if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28))) begin
        grp_fu_856_p0 = grp_conv2d_1_fu_754_grp_fu_856_p_din0;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24))) begin
        grp_fu_856_p0 = grp_conv2d_2_fu_744_grp_fu_856_p_din0;
    end else if (((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage16) & (1'b0 == ap_block_pp6_stage16))) begin
        grp_fu_856_p0 = layer_11_output_load_15_reg_1748;
    end else if (((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage15) & (1'b0 == ap_block_pp6_stage15))) begin
        grp_fu_856_p0 = layer_11_output_load_14_reg_1743;
    end else if (((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage14) & (1'b0 == ap_block_pp6_stage14))) begin
        grp_fu_856_p0 = layer_11_output_load_13_reg_1728;
    end else if (((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage13) & (1'b0 == ap_block_pp6_stage13))) begin
        grp_fu_856_p0 = layer_11_output_load_12_reg_1723;
    end else if (((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage12) & (1'b0 == ap_block_pp6_stage12))) begin
        grp_fu_856_p0 = layer_11_output_load_11_reg_1708;
    end else if (((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage11) & (1'b0 == ap_block_pp6_stage11))) begin
        grp_fu_856_p0 = layer_11_output_load_10_reg_1703;
    end else if (((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage10) & (1'b0 == ap_block_pp6_stage10))) begin
        grp_fu_856_p0 = layer_11_output_load_9_reg_1688;
    end else if (((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage9) & (1'b0 == ap_block_pp6_stage9))) begin
        grp_fu_856_p0 = layer_11_output_load_8_reg_1683;
    end else if (((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage8) & (1'b0 == ap_block_pp6_stage8))) begin
        grp_fu_856_p0 = layer_11_output_load_7_reg_1668;
    end else if (((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage7) & (1'b0 == ap_block_pp6_stage7))) begin
        grp_fu_856_p0 = layer_11_output_load_6_reg_1663;
    end else if (((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage6) & (1'b0 == ap_block_pp6_stage6))) begin
        grp_fu_856_p0 = layer_11_output_load_5_reg_1648;
    end else if (((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage5) & (1'b0 == ap_block_pp6_stage5))) begin
        grp_fu_856_p0 = layer_11_output_load_4_reg_1643;
    end else if (((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage4) & (1'b0 == ap_block_pp6_stage4))) begin
        grp_fu_856_p0 = layer_11_output_load_3_reg_1628;
    end else if (((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage3) & (1'b0 == ap_block_pp6_stage3))) begin
        grp_fu_856_p0 = layer_11_output_load_2_reg_1623;
    end else if (((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage2) & (1'b0 == ap_block_pp6_stage2))) begin
        grp_fu_856_p0 = layer_11_output_load_1_reg_1608;
    end else if (((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage1) & (1'b0 == ap_block_pp6_stage1))) begin
        grp_fu_856_p0 = layer_11_output_load_reg_1603;
    end else begin
        grp_fu_856_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state44))) begin
        grp_fu_856_p1 = grp_dense_relu_fu_812_grp_fu_856_p_din1;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state41))) begin
        grp_fu_856_p1 = grp_dense_relu_1_fu_802_grp_fu_856_p_din1;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state38))) begin
        grp_fu_856_p1 = grp_dense_relu_2_fu_792_grp_fu_856_p_din1;
    end else if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32))) begin
        grp_fu_856_p1 = grp_conv2d_fu_764_grp_fu_856_p_din1;
    end else if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28))) begin
        grp_fu_856_p1 = grp_conv2d_1_fu_754_grp_fu_856_p_din1;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24))) begin
        grp_fu_856_p1 = grp_conv2d_2_fu_744_grp_fu_856_p_din1;
    end else if ((((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage15) & (1'b0 == ap_block_pp6_stage15)) | ((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage12) & (1'b0 == ap_block_pp6_stage12)) | ((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage9) & (1'b0 == ap_block_pp6_stage9)) | ((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage6) & (1'b0 == ap_block_pp6_stage6)) | ((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage3) & (1'b0 == ap_block_pp6_stage3)) | ((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage14) & (1'b0 == ap_block_pp6_stage14)) | ((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage11) & (1'b0 == ap_block_pp6_stage11)) | ((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage8) & (1'b0 == ap_block_pp6_stage8)) | ((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage5) & (1'b0 == ap_block_pp6_stage5)) | ((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage2) & (1'b0 == ap_block_pp6_stage2)) | ((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage16) & (1'b0 == ap_block_pp6_stage16)) | ((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage13) & (1'b0 == ap_block_pp6_stage13)) | ((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage10) & (1'b0 == ap_block_pp6_stage10)) | ((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage7) & (1'b0 == ap_block_pp6_stage7)) | ((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage4) & (1'b0 == ap_block_pp6_stage4)) | ((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage1) & (1'b0 == ap_block_pp6_stage1)))) begin
        grp_fu_856_p1 = layer_12_weights_q0;
    end else begin
        grp_fu_856_p1 = layer_12_weights_q0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_866_ce = 1'b1;
    end else begin
        grp_fu_866_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp7_stage0) & (icmp_ln315_reg_1940 == 1'd0) & (ap_enable_reg_pp7_iter1 == 1'b1) & (1'b0 == ap_block_pp7_stage0))) begin
        grp_load_fu_869_p1 = layer_12_output_3_fu_276;
    end else if (((icmp_ln176_reg_1753 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage5) & (1'b0 == ap_block_pp6_stage5))) begin
        grp_load_fu_869_p1 = ap_sig_allocacmp_layer_12_output_3_load;
    end else begin
        grp_load_fu_869_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp7_stage0) & (icmp_ln315_reg_1940 == 1'd0) & (ap_enable_reg_pp7_iter1 == 1'b1) & (1'b0 == ap_block_pp7_stage0))) begin
        grp_load_fu_872_p1 = layer_12_output_3_1_fu_280;
    end else if (((icmp_ln176_reg_1753 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage5) & (1'b0 == ap_block_pp6_stage5))) begin
        grp_load_fu_872_p1 = ap_sig_allocacmp_layer_12_output_3_1_load;
    end else begin
        grp_load_fu_872_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp7_stage0) & (icmp_ln315_reg_1940 == 1'd0) & (ap_enable_reg_pp7_iter1 == 1'b1) & (1'b0 == ap_block_pp7_stage0))) begin
        grp_load_fu_875_p1 = layer_12_output_3_3_fu_284;
    end else if (((icmp_ln176_reg_1753 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage5) & (1'b0 == ap_block_pp6_stage5))) begin
        grp_load_fu_875_p1 = ap_sig_allocacmp_layer_12_output_3_3_load;
    end else begin
        grp_load_fu_875_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp7_stage0) & (icmp_ln315_reg_1940 == 1'd0) & (ap_enable_reg_pp7_iter1 == 1'b1) & (1'b0 == ap_block_pp7_stage0))) begin
        grp_load_fu_878_p1 = layer_12_output_3_2_fu_288;
    end else if (((icmp_ln176_reg_1753 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage5) & (1'b0 == ap_block_pp6_stage5))) begin
        grp_load_fu_878_p1 = ap_sig_allocacmp_layer_12_output_3_2_load_1;
    end else begin
        grp_load_fu_878_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter12 == 1'b1))) begin
        image_input_address0 = image_input_addr_1_reg_1465_pp1_iter11_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        image_input_address0 = i_cast_fu_928_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        image_input_address0 = grp_conv2d_2_fu_744_input_r_address0;
    end else begin
        image_input_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter12 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1)))) begin
        image_input_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        image_input_ce0 = grp_conv2d_2_fu_744_input_r_ce0;
    end else begin
        image_input_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        image_input_ce1 = 1'b1;
    end else begin
        image_input_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter12 == 1'b1))) begin
        image_input_d0 = conv12_i_reg_1481;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        image_input_d0 = conv_reg_1446;
    end else begin
        image_input_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln31_reg_1456_pp1_iter11_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter12 == 1'b1)) | ((icmp_ln200_reg_1437_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1)))) begin
        image_input_we0 = 1'b1;
    end else begin
        image_input_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln200_fu_922_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        infer_input_V_TDATA_blk_n = infer_input_V_TVALID_int_regslice;
    end else begin
        infer_input_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln200_fu_922_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        infer_input_V_TREADY_int_regslice = 1'b1;
    end else begin
        infer_input_V_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln315_reg_1940_pp7_iter1_reg == 1'd0) & (ap_enable_reg_pp7_iter2 == 1'b1) & (1'b0 == ap_block_pp7_stage0)) | ((1'b1 == ap_CS_fsm_pp7_stage0) & (icmp_ln315_reg_1940 == 1'd0) & (ap_enable_reg_pp7_iter1 == 1'b1) & (1'b0 == ap_block_pp7_stage0)))) begin
        infer_output_V_TDATA_blk_n = infer_output_V_TREADY_int_regslice;
    end else begin
        infer_output_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp7_stage0) & (icmp_ln315_reg_1940 == 1'd0) & (ap_enable_reg_pp7_iter1 == 1'b1) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        infer_output_V_TVALID_int_regslice = 1'b1;
    end else begin
        infer_output_V_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        layer_10_output_address0 = i_4_cast_fu_1083_p1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        layer_10_output_address0 = grp_dense_relu_fu_812_input_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        layer_10_output_address0 = grp_dense_relu_1_fu_802_output_r_address0;
    end else begin
        layer_10_output_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        layer_10_output_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        layer_10_output_ce0 = grp_dense_relu_fu_812_input_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        layer_10_output_ce0 = grp_dense_relu_1_fu_802_output_r_ce0;
    end else begin
        layer_10_output_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        layer_10_output_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        layer_10_output_d0 = grp_dense_relu_1_fu_802_output_r_d0;
    end else begin
        layer_10_output_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) & (icmp_ln22_1_fu_1077_p2 == 1'd0))) begin
        layer_10_output_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        layer_10_output_we0 = grp_dense_relu_1_fu_802_output_r_we0;
    end else begin
        layer_10_output_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        layer_11_output_address0 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        layer_11_output_address0 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        layer_11_output_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        layer_11_output_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        layer_11_output_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        layer_11_output_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        layer_11_output_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        layer_11_output_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        layer_11_output_address0 = i_5_cast_fu_1100_p1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        layer_11_output_address0 = grp_dense_relu_fu_812_output_r_address0;
    end else begin
        layer_11_output_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        layer_11_output_address1 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        layer_11_output_address1 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        layer_11_output_address1 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        layer_11_output_address1 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        layer_11_output_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        layer_11_output_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        layer_11_output_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        layer_11_output_address1 = 64'd0;
    end else begin
        layer_11_output_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state42))) begin
        layer_11_output_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        layer_11_output_ce0 = grp_dense_relu_fu_812_output_r_ce0;
    end else begin
        layer_11_output_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46))) begin
        layer_11_output_ce1 = 1'b1;
    end else begin
        layer_11_output_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        layer_11_output_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        layer_11_output_d0 = grp_dense_relu_fu_812_output_r_d0;
    end else begin
        layer_11_output_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state42) & (icmp_ln22_2_fu_1094_p2 == 1'd0))) begin
        layer_11_output_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        layer_11_output_we0 = grp_dense_relu_fu_812_output_r_we0;
    end else begin
        layer_11_output_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp6_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp6_stage15) & (1'b0 == ap_block_pp6_stage15))) begin
            layer_12_weights_address0 = zext_ln180_14_fu_1359_p1;
        end else if (((1'b1 == ap_CS_fsm_pp6_stage14) & (1'b0 == ap_block_pp6_stage14))) begin
            layer_12_weights_address0 = zext_ln180_13_fu_1351_p1;
        end else if (((1'b1 == ap_CS_fsm_pp6_stage13) & (1'b0 == ap_block_pp6_stage13))) begin
            layer_12_weights_address0 = zext_ln180_12_fu_1343_p1;
        end else if (((1'b1 == ap_CS_fsm_pp6_stage12) & (1'b0 == ap_block_pp6_stage12))) begin
            layer_12_weights_address0 = zext_ln180_11_fu_1335_p1;
        end else if (((1'b1 == ap_CS_fsm_pp6_stage11) & (1'b0 == ap_block_pp6_stage11))) begin
            layer_12_weights_address0 = zext_ln180_10_fu_1327_p1;
        end else if (((1'b1 == ap_CS_fsm_pp6_stage10) & (1'b0 == ap_block_pp6_stage10))) begin
            layer_12_weights_address0 = zext_ln180_9_fu_1317_p1;
        end else if (((1'b1 == ap_CS_fsm_pp6_stage9) & (1'b0 == ap_block_pp6_stage9))) begin
            layer_12_weights_address0 = zext_ln180_8_fu_1298_p1;
        end else if (((1'b1 == ap_CS_fsm_pp6_stage8) & (1'b0 == ap_block_pp6_stage8))) begin
            layer_12_weights_address0 = zext_ln180_7_fu_1283_p1;
        end else if (((1'b1 == ap_CS_fsm_pp6_stage7) & (1'b0 == ap_block_pp6_stage7))) begin
            layer_12_weights_address0 = zext_ln180_6_fu_1270_p1;
        end else if (((1'b1 == ap_CS_fsm_pp6_stage6) & (1'b0 == ap_block_pp6_stage6))) begin
            layer_12_weights_address0 = zext_ln180_5_fu_1262_p1;
        end else if (((1'b1 == ap_CS_fsm_pp6_stage5) & (1'b0 == ap_block_pp6_stage5))) begin
            layer_12_weights_address0 = zext_ln180_4_fu_1254_p1;
        end else if (((1'b1 == ap_CS_fsm_pp6_stage4) & (1'b0 == ap_block_pp6_stage4))) begin
            layer_12_weights_address0 = zext_ln180_3_fu_1220_p1;
        end else if (((1'b1 == ap_CS_fsm_pp6_stage3) & (1'b0 == ap_block_pp6_stage3))) begin
            layer_12_weights_address0 = zext_ln180_2_fu_1207_p1;
        end else if (((1'b1 == ap_CS_fsm_pp6_stage2) & (1'b0 == ap_block_pp6_stage2))) begin
            layer_12_weights_address0 = zext_ln180_1_fu_1199_p1;
        end else if (((1'b1 == ap_CS_fsm_pp6_stage1) & (1'b0 == ap_block_pp6_stage1))) begin
            layer_12_weights_address0 = zext_ln180_fu_1186_p1;
        end else if (((1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0))) begin
            layer_12_weights_address0 = i_7_cast5_fu_1175_p1;
        end else begin
            layer_12_weights_address0 = 'bx;
        end
    end else begin
        layer_12_weights_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001)) | ((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage15) & (1'b0 == ap_block_pp6_stage15_11001)) | ((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage12) & (1'b0 == ap_block_pp6_stage12_11001)) | ((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage9) & (1'b0 == ap_block_pp6_stage9_11001)) | ((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage6) & (1'b0 == ap_block_pp6_stage6_11001)) | ((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage3) & (1'b0 == ap_block_pp6_stage3_11001)) | ((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage14) & (1'b0 == ap_block_pp6_stage14_11001)) | ((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage11) & (1'b0 == ap_block_pp6_stage11_11001)) | ((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage8) & (1'b0 == ap_block_pp6_stage8_11001)) | ((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage5) & (1'b0 == ap_block_pp6_stage5_11001)) | ((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage2) & (1'b0 == ap_block_pp6_stage2_11001)) | ((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage13) & (1'b0 == ap_block_pp6_stage13_11001)) | ((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage10) & (1'b0 == ap_block_pp6_stage10_11001)) | ((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage7) & (1'b0 == ap_block_pp6_stage7_11001)) | ((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage4) & (1'b0 == ap_block_pp6_stage4_11001)) | ((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage1) & (1'b0 == ap_block_pp6_stage1_11001)))) begin
        layer_12_weights_ce0 = 1'b1;
    end else begin
        layer_12_weights_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        layer_2_output_address0 = grp_set3DFloatArray_5_fu_822_array_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        layer_2_output_address0 = grp_max_pooling2d_2_fu_774_input_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        layer_2_output_address0 = grp_conv2d_2_fu_744_output_r_address0;
    end else begin
        layer_2_output_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        layer_2_output_ce0 = grp_set3DFloatArray_5_fu_822_array_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        layer_2_output_ce0 = grp_max_pooling2d_2_fu_774_input_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        layer_2_output_ce0 = grp_conv2d_2_fu_744_output_r_ce0;
    end else begin
        layer_2_output_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        layer_2_output_ce1 = grp_max_pooling2d_2_fu_774_input_r_ce1;
    end else begin
        layer_2_output_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        layer_2_output_d0 = grp_set3DFloatArray_5_fu_822_array_r_d0;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        layer_2_output_d0 = grp_conv2d_2_fu_744_output_r_d0;
    end else begin
        layer_2_output_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        layer_2_output_we0 = grp_set3DFloatArray_5_fu_822_array_r_we0;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        layer_2_output_we0 = grp_conv2d_2_fu_744_output_r_we0;
    end else begin
        layer_2_output_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        layer_3_output_address0 = grp_set3DFloatArray_4_fu_827_array_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        layer_3_output_address0 = grp_max_pooling2d_2_fu_774_output_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        layer_3_output_address0 = grp_conv2d_1_fu_754_input_r_address0;
    end else begin
        layer_3_output_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        layer_3_output_ce0 = grp_set3DFloatArray_4_fu_827_array_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        layer_3_output_ce0 = grp_max_pooling2d_2_fu_774_output_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        layer_3_output_ce0 = grp_conv2d_1_fu_754_input_r_ce0;
    end else begin
        layer_3_output_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        layer_3_output_d0 = grp_set3DFloatArray_4_fu_827_array_r_d0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        layer_3_output_d0 = grp_max_pooling2d_2_fu_774_output_r_d0;
    end else begin
        layer_3_output_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        layer_3_output_we0 = grp_set3DFloatArray_4_fu_827_array_r_we0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        layer_3_output_we0 = grp_max_pooling2d_2_fu_774_output_r_we0;
    end else begin
        layer_3_output_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        layer_4_output_address0 = grp_set3DFloatArray_3_fu_832_array_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        layer_4_output_address0 = grp_max_pooling2d_1_fu_780_input_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        layer_4_output_address0 = grp_conv2d_1_fu_754_output_r_address0;
    end else begin
        layer_4_output_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        layer_4_output_ce0 = grp_set3DFloatArray_3_fu_832_array_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        layer_4_output_ce0 = grp_max_pooling2d_1_fu_780_input_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        layer_4_output_ce0 = grp_conv2d_1_fu_754_output_r_ce0;
    end else begin
        layer_4_output_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        layer_4_output_ce1 = grp_max_pooling2d_1_fu_780_input_r_ce1;
    end else begin
        layer_4_output_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        layer_4_output_d0 = grp_set3DFloatArray_3_fu_832_array_r_d0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        layer_4_output_d0 = grp_conv2d_1_fu_754_output_r_d0;
    end else begin
        layer_4_output_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        layer_4_output_we0 = grp_set3DFloatArray_3_fu_832_array_r_we0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        layer_4_output_we0 = grp_conv2d_1_fu_754_output_r_we0;
    end else begin
        layer_4_output_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        layer_5_output_address0 = grp_set3DFloatArray_2_fu_837_array_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        layer_5_output_address0 = grp_max_pooling2d_1_fu_780_output_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        layer_5_output_address0 = grp_conv2d_fu_764_input_r_address0;
    end else begin
        layer_5_output_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        layer_5_output_ce0 = grp_set3DFloatArray_2_fu_837_array_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        layer_5_output_ce0 = grp_max_pooling2d_1_fu_780_output_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        layer_5_output_ce0 = grp_conv2d_fu_764_input_r_ce0;
    end else begin
        layer_5_output_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        layer_5_output_d0 = grp_set3DFloatArray_2_fu_837_array_r_d0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        layer_5_output_d0 = grp_max_pooling2d_1_fu_780_output_r_d0;
    end else begin
        layer_5_output_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        layer_5_output_we0 = grp_set3DFloatArray_2_fu_837_array_r_we0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        layer_5_output_we0 = grp_max_pooling2d_1_fu_780_output_r_we0;
    end else begin
        layer_5_output_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        layer_6_output_address0 = grp_set3DFloatArray_1_fu_842_array_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        layer_6_output_address0 = grp_max_pooling2d_fu_786_input_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        layer_6_output_address0 = grp_conv2d_fu_764_output_r_address0;
    end else begin
        layer_6_output_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        layer_6_output_ce0 = grp_set3DFloatArray_1_fu_842_array_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        layer_6_output_ce0 = grp_max_pooling2d_fu_786_input_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        layer_6_output_ce0 = grp_conv2d_fu_764_output_r_ce0;
    end else begin
        layer_6_output_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        layer_6_output_ce1 = grp_max_pooling2d_fu_786_input_r_ce1;
    end else begin
        layer_6_output_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        layer_6_output_d0 = grp_set3DFloatArray_1_fu_842_array_r_d0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        layer_6_output_d0 = grp_conv2d_fu_764_output_r_d0;
    end else begin
        layer_6_output_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        layer_6_output_we0 = grp_set3DFloatArray_1_fu_842_array_r_we0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        layer_6_output_we0 = grp_conv2d_fu_764_output_r_we0;
    end else begin
        layer_6_output_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        layer_7_output_address0 = grp_set3DFloatArray_fu_847_array_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        layer_7_output_address0 = grp_dense_relu_2_fu_792_input_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        layer_7_output_address0 = grp_max_pooling2d_fu_786_output_r_address0;
    end else begin
        layer_7_output_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        layer_7_output_ce0 = grp_set3DFloatArray_fu_847_array_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        layer_7_output_ce0 = grp_dense_relu_2_fu_792_input_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        layer_7_output_ce0 = grp_max_pooling2d_fu_786_output_r_ce0;
    end else begin
        layer_7_output_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        layer_7_output_d0 = grp_set3DFloatArray_fu_847_array_r_d0;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        layer_7_output_d0 = grp_max_pooling2d_fu_786_output_r_d0;
    end else begin
        layer_7_output_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        layer_7_output_we0 = grp_set3DFloatArray_fu_847_array_r_we0;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        layer_7_output_we0 = grp_max_pooling2d_fu_786_output_r_we0;
    end else begin
        layer_7_output_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        layer_9_output_address0 = i_3_cast_fu_1066_p1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        layer_9_output_address0 = grp_dense_relu_1_fu_802_input_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        layer_9_output_address0 = grp_dense_relu_2_fu_792_output_r_address0;
    end else begin
        layer_9_output_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        layer_9_output_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        layer_9_output_ce0 = grp_dense_relu_1_fu_802_input_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        layer_9_output_ce0 = grp_dense_relu_2_fu_792_output_r_ce0;
    end else begin
        layer_9_output_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        layer_9_output_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        layer_9_output_d0 = grp_dense_relu_2_fu_792_output_r_d0;
    end else begin
        layer_9_output_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) & (icmp_ln22_fu_1060_p2 == 1'd0))) begin
        layer_9_output_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        layer_9_output_we0 = grp_dense_relu_2_fu_792_output_r_we0;
    end else begin
        layer_9_output_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln200_fu_922_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter5 == 1'b1) & (ap_enable_reg_pp0_iter4 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((icmp_ln200_fu_922_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter5 == 1'b1) & (ap_enable_reg_pp0_iter4 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln31_fu_965_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)) & ~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter12 == 1'b1) & (ap_enable_reg_pp1_iter11 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln31_fu_965_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter12 == 1'b1) & (ap_enable_reg_pp1_iter11 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            if (((1'b1 == ap_CS_fsm_state23) & (1'b0 == ap_block_state23_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            if (((1'b1 == ap_CS_fsm_state25) & (grp_conv2d_2_fu_744_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            if (((1'b1 == ap_CS_fsm_state27) & (grp_max_pooling2d_2_fu_774_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            if (((1'b1 == ap_CS_fsm_state29) & (grp_conv2d_1_fu_754_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            if (((1'b1 == ap_CS_fsm_state31) & (grp_max_pooling2d_1_fu_780_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            if (((1'b1 == ap_CS_fsm_state33) & (grp_conv2d_fu_764_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            if (((1'b1 == ap_CS_fsm_state35) & (grp_max_pooling2d_fu_786_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end
        end
        ap_ST_fsm_state36 : begin
            if (((1'b1 == ap_CS_fsm_state36) & (icmp_ln22_fu_1060_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            if (((1'b1 == ap_CS_fsm_state38) & (grp_dense_relu_2_fu_792_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        ap_ST_fsm_state39 : begin
            if (((1'b1 == ap_CS_fsm_state39) & (icmp_ln22_1_fu_1077_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            if (((1'b1 == ap_CS_fsm_state41) & (grp_dense_relu_1_fu_802_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end
        end
        ap_ST_fsm_state42 : begin
            if (((1'b1 == ap_CS_fsm_state42) & (icmp_ln22_2_fu_1094_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            if (((1'b1 == ap_CS_fsm_state44) & (grp_dense_relu_fu_812_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end
        end
        ap_ST_fsm_state45 : begin
            if (((1'b1 == ap_CS_fsm_state45) & (icmp_ln22_3_fu_1123_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_pp6_stage0;
        end
        ap_ST_fsm_pp6_stage0 : begin
            if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end
        end
        ap_ST_fsm_pp6_stage1 : begin
            if ((1'b0 == ap_block_pp6_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage1;
            end
        end
        ap_ST_fsm_pp6_stage2 : begin
            if ((1'b0 == ap_block_pp6_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage2;
            end
        end
        ap_ST_fsm_pp6_stage3 : begin
            if ((1'b0 == ap_block_pp6_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage3;
            end
        end
        ap_ST_fsm_pp6_stage4 : begin
            if ((1'b0 == ap_block_pp6_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage4;
            end
        end
        ap_ST_fsm_pp6_stage5 : begin
            if ((1'b0 == ap_block_pp6_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage5;
            end
        end
        ap_ST_fsm_pp6_stage6 : begin
            if ((1'b0 == ap_block_pp6_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage6;
            end
        end
        ap_ST_fsm_pp6_stage7 : begin
            if ((1'b0 == ap_block_pp6_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage7;
            end
        end
        ap_ST_fsm_pp6_stage8 : begin
            if ((1'b0 == ap_block_pp6_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage8;
            end
        end
        ap_ST_fsm_pp6_stage9 : begin
            if ((1'b0 == ap_block_pp6_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage9;
            end
        end
        ap_ST_fsm_pp6_stage10 : begin
            if ((~((icmp_ln176_reg_1753 == 1'd1) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b0 == ap_block_pp6_stage10_subdone)) & (1'b0 == ap_block_pp6_stage10_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage11;
            end else if (((icmp_ln176_reg_1753 == 1'd1) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b0 == ap_block_pp6_stage10_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state145;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage10;
            end
        end
        ap_ST_fsm_pp6_stage11 : begin
            if ((1'b0 == ap_block_pp6_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage11;
            end
        end
        ap_ST_fsm_pp6_stage12 : begin
            if ((1'b0 == ap_block_pp6_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage12;
            end
        end
        ap_ST_fsm_pp6_stage13 : begin
            if ((1'b0 == ap_block_pp6_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage13;
            end
        end
        ap_ST_fsm_pp6_stage14 : begin
            if ((1'b0 == ap_block_pp6_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage14;
            end
        end
        ap_ST_fsm_pp6_stage15 : begin
            if ((1'b0 == ap_block_pp6_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage15;
            end
        end
        ap_ST_fsm_pp6_stage16 : begin
            if ((1'b0 == ap_block_pp6_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage16;
            end
        end
        ap_ST_fsm_pp6_stage17 : begin
            if ((1'b0 == ap_block_pp6_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage17;
            end
        end
        ap_ST_fsm_pp6_stage18 : begin
            if ((1'b0 == ap_block_pp6_stage18_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage18;
            end
        end
        ap_ST_fsm_pp6_stage19 : begin
            if ((1'b0 == ap_block_pp6_stage19_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage19;
            end
        end
        ap_ST_fsm_pp6_stage20 : begin
            if ((1'b0 == ap_block_pp6_stage20_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage20;
            end
        end
        ap_ST_fsm_pp6_stage21 : begin
            if ((1'b0 == ap_block_pp6_stage21_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage21;
            end
        end
        ap_ST_fsm_pp6_stage22 : begin
            if ((1'b0 == ap_block_pp6_stage22_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage22;
            end
        end
        ap_ST_fsm_pp6_stage23 : begin
            if ((1'b0 == ap_block_pp6_stage23_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage23;
            end
        end
        ap_ST_fsm_pp6_stage24 : begin
            if ((1'b0 == ap_block_pp6_stage24_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage24;
            end
        end
        ap_ST_fsm_pp6_stage25 : begin
            if ((1'b0 == ap_block_pp6_stage25_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage25;
            end
        end
        ap_ST_fsm_pp6_stage26 : begin
            if ((1'b0 == ap_block_pp6_stage26_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage26;
            end
        end
        ap_ST_fsm_pp6_stage27 : begin
            if ((1'b0 == ap_block_pp6_stage27_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage27;
            end
        end
        ap_ST_fsm_pp6_stage28 : begin
            if ((1'b0 == ap_block_pp6_stage28_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage28;
            end
        end
        ap_ST_fsm_pp6_stage29 : begin
            if ((1'b0 == ap_block_pp6_stage29_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage29;
            end
        end
        ap_ST_fsm_pp6_stage30 : begin
            if ((1'b0 == ap_block_pp6_stage30_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage30;
            end
        end
        ap_ST_fsm_pp6_stage31 : begin
            if ((1'b0 == ap_block_pp6_stage31_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage31;
            end
        end
        ap_ST_fsm_pp6_stage32 : begin
            if ((1'b0 == ap_block_pp6_stage32_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage32;
            end
        end
        ap_ST_fsm_pp6_stage33 : begin
            if ((1'b0 == ap_block_pp6_stage33_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage33;
            end
        end
        ap_ST_fsm_pp6_stage34 : begin
            if ((1'b0 == ap_block_pp6_stage34_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage34;
            end
        end
        ap_ST_fsm_pp6_stage35 : begin
            if ((1'b0 == ap_block_pp6_stage35_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage35;
            end
        end
        ap_ST_fsm_pp6_stage36 : begin
            if ((1'b0 == ap_block_pp6_stage36_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage36;
            end
        end
        ap_ST_fsm_pp6_stage37 : begin
            if ((1'b0 == ap_block_pp6_stage37_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage37;
            end
        end
        ap_ST_fsm_pp6_stage38 : begin
            if ((1'b0 == ap_block_pp6_stage38_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage38;
            end
        end
        ap_ST_fsm_pp6_stage39 : begin
            if ((1'b0 == ap_block_pp6_stage39_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage39;
            end
        end
        ap_ST_fsm_pp6_stage40 : begin
            if ((1'b0 == ap_block_pp6_stage40_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage40;
            end
        end
        ap_ST_fsm_pp6_stage41 : begin
            if ((1'b0 == ap_block_pp6_stage41_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage41;
            end
        end
        ap_ST_fsm_pp6_stage42 : begin
            if ((1'b0 == ap_block_pp6_stage42_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage42;
            end
        end
        ap_ST_fsm_pp6_stage43 : begin
            if ((1'b0 == ap_block_pp6_stage43_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage43;
            end
        end
        ap_ST_fsm_pp6_stage44 : begin
            if ((1'b0 == ap_block_pp6_stage44_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage44;
            end
        end
        ap_ST_fsm_pp6_stage45 : begin
            if ((1'b0 == ap_block_pp6_stage45_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage45;
            end
        end
        ap_ST_fsm_pp6_stage46 : begin
            if ((1'b0 == ap_block_pp6_stage46_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage46;
            end
        end
        ap_ST_fsm_pp6_stage47 : begin
            if ((1'b0 == ap_block_pp6_stage47_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage47;
            end
        end
        ap_ST_fsm_pp6_stage48 : begin
            if ((1'b0 == ap_block_pp6_stage48_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage48;
            end
        end
        ap_ST_fsm_pp6_stage49 : begin
            if ((1'b0 == ap_block_pp6_stage49_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage49;
            end
        end
        ap_ST_fsm_pp6_stage50 : begin
            if ((1'b0 == ap_block_pp6_stage50_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage51;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage50;
            end
        end
        ap_ST_fsm_pp6_stage51 : begin
            if ((1'b0 == ap_block_pp6_stage51_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage51;
            end
        end
        ap_ST_fsm_pp6_stage52 : begin
            if ((1'b0 == ap_block_pp6_stage52_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage53;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage52;
            end
        end
        ap_ST_fsm_pp6_stage53 : begin
            if ((1'b0 == ap_block_pp6_stage53_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage53;
            end
        end
        ap_ST_fsm_pp6_stage54 : begin
            if ((1'b0 == ap_block_pp6_stage54_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage55;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage54;
            end
        end
        ap_ST_fsm_pp6_stage55 : begin
            if ((1'b0 == ap_block_pp6_stage55_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage56;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage55;
            end
        end
        ap_ST_fsm_pp6_stage56 : begin
            if ((1'b0 == ap_block_pp6_stage56_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage57;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage56;
            end
        end
        ap_ST_fsm_pp6_stage57 : begin
            if ((1'b0 == ap_block_pp6_stage57_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage58;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage57;
            end
        end
        ap_ST_fsm_pp6_stage58 : begin
            if ((1'b0 == ap_block_pp6_stage58_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage59;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage58;
            end
        end
        ap_ST_fsm_pp6_stage59 : begin
            if ((1'b0 == ap_block_pp6_stage59_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage60;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage59;
            end
        end
        ap_ST_fsm_pp6_stage60 : begin
            if ((1'b0 == ap_block_pp6_stage60_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage61;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage60;
            end
        end
        ap_ST_fsm_pp6_stage61 : begin
            if ((1'b0 == ap_block_pp6_stage61_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage62;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage61;
            end
        end
        ap_ST_fsm_pp6_stage62 : begin
            if ((1'b0 == ap_block_pp6_stage62_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage63;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage62;
            end
        end
        ap_ST_fsm_pp6_stage63 : begin
            if ((1'b0 == ap_block_pp6_stage63_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage64;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage63;
            end
        end
        ap_ST_fsm_pp6_stage64 : begin
            if ((1'b0 == ap_block_pp6_stage64_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage65;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage64;
            end
        end
        ap_ST_fsm_pp6_stage65 : begin
            if ((1'b0 == ap_block_pp6_stage65_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage66;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage65;
            end
        end
        ap_ST_fsm_pp6_stage66 : begin
            if ((1'b0 == ap_block_pp6_stage66_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage67;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage66;
            end
        end
        ap_ST_fsm_pp6_stage67 : begin
            if ((1'b0 == ap_block_pp6_stage67_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage68;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage67;
            end
        end
        ap_ST_fsm_pp6_stage68 : begin
            if ((1'b0 == ap_block_pp6_stage68_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage69;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage68;
            end
        end
        ap_ST_fsm_pp6_stage69 : begin
            if ((1'b0 == ap_block_pp6_stage69_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage70;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage69;
            end
        end
        ap_ST_fsm_pp6_stage70 : begin
            if ((1'b0 == ap_block_pp6_stage70_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage71;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage70;
            end
        end
        ap_ST_fsm_pp6_stage71 : begin
            if ((1'b0 == ap_block_pp6_stage71_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage72;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage71;
            end
        end
        ap_ST_fsm_pp6_stage72 : begin
            if ((1'b0 == ap_block_pp6_stage72_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage73;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage72;
            end
        end
        ap_ST_fsm_pp6_stage73 : begin
            if ((1'b0 == ap_block_pp6_stage73_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage74;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage73;
            end
        end
        ap_ST_fsm_pp6_stage74 : begin
            if ((1'b0 == ap_block_pp6_stage74_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage75;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage74;
            end
        end
        ap_ST_fsm_pp6_stage75 : begin
            if ((1'b0 == ap_block_pp6_stage75_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage76;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage75;
            end
        end
        ap_ST_fsm_pp6_stage76 : begin
            if ((1'b0 == ap_block_pp6_stage76_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage77;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage76;
            end
        end
        ap_ST_fsm_pp6_stage77 : begin
            if ((1'b0 == ap_block_pp6_stage77_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage78;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage77;
            end
        end
        ap_ST_fsm_pp6_stage78 : begin
            if ((1'b0 == ap_block_pp6_stage78_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage79;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage78;
            end
        end
        ap_ST_fsm_pp6_stage79 : begin
            if ((1'b0 == ap_block_pp6_stage79_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage80;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage79;
            end
        end
        ap_ST_fsm_pp6_stage80 : begin
            if ((1'b0 == ap_block_pp6_stage80_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage81;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage80;
            end
        end
        ap_ST_fsm_pp6_stage81 : begin
            if ((1'b0 == ap_block_pp6_stage81_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage82;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage81;
            end
        end
        ap_ST_fsm_pp6_stage82 : begin
            if ((1'b0 == ap_block_pp6_stage82_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage83;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage82;
            end
        end
        ap_ST_fsm_pp6_stage83 : begin
            if ((1'b0 == ap_block_pp6_stage83_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage83;
            end
        end
        ap_ST_fsm_state145 : begin
            ap_NS_fsm = ap_ST_fsm_pp7_stage0;
        end
        ap_ST_fsm_pp7_stage0 : begin
            if ((~((ap_enable_reg_pp7_iter1 == 1'b0) & (1'b0 == ap_block_pp7_stage0_subdone) & (icmp_ln315_fu_1404_p2 == 1'd1) & (ap_enable_reg_pp7_iter0 == 1'b1)) & ~((ap_enable_reg_pp7_iter2 == 1'b1) & (ap_enable_reg_pp7_iter1 == 1'b0) & (1'b0 == ap_block_pp7_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end else if ((((ap_enable_reg_pp7_iter2 == 1'b1) & (ap_enable_reg_pp7_iter1 == 1'b0) & (1'b0 == ap_block_pp7_stage0_subdone)) | ((ap_enable_reg_pp7_iter1 == 1'b0) & (1'b0 == ap_block_pp7_stage0_subdone) & (icmp_ln315_fu_1404_p2 == 1'd1) & (ap_enable_reg_pp7_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state149;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end
        end
        ap_ST_fsm_state149 : begin
            if (((regslice_both_infer_output_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state149))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state149;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln176_fu_1303_p2 = (i_6_reg_721 + 3'd1);

assign add_ln180_1_fu_1292_p2 = ($signed(i_7_cast4_fu_1288_p1) + $signed(6'd36));

assign add_ln180_2_fu_1322_p2 = ($signed(i_7_cast4_reg_1845) + $signed(6'd44));

assign add_ln180_fu_1248_p2 = ($signed(i_7_cast11_fu_1225_p1) + $signed(5'd20));

assign add_ln200_fu_916_p2 = (ap_phi_mux_i_phi_fu_636_p4 + 12'd1);

assign add_ln22_1_fu_1071_p2 = (i_3_reg_688 + 6'd1);

assign add_ln22_2_fu_1088_p2 = (i_4_reg_699 + 5'd1);

assign add_ln22_3_fu_1105_p2 = (i_5_reg_710 + 3'd1);

assign add_ln22_fu_1054_p2 = (i_2_reg_677 + 7'd1);

assign add_ln315_fu_1398_p2 = (i_7_reg_733 + 3'd1);

assign add_ln31_1_fu_985_p2 = (i_1_reg_655 + 6'd1);

assign add_ln31_fu_933_p2 = (indvar_flatten_reg_644 + 12'd1);

assign add_ln33_fu_1048_p2 = (select_ln31_fu_977_p3 + 6'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp6_stage0 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_pp6_stage1 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_pp6_stage10 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_pp6_stage11 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_pp6_stage12 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_pp6_stage13 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_pp6_stage14 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_pp6_stage15 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_pp6_stage16 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_pp6_stage17 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_pp6_stage18 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_pp6_stage19 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_pp6_stage2 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_pp6_stage20 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_pp6_stage24 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_pp6_stage25 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_pp6_stage29 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_pp6_stage3 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_pp6_stage30 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_pp6_stage34 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_pp6_stage35 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_pp6_stage39 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_pp6_stage4 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_pp6_stage40 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_pp6_stage44 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_pp6_stage45 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_pp6_stage49 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_pp6_stage5 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_pp6_stage50 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_pp6_stage54 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_pp6_stage55 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_pp6_stage59 = ap_CS_fsm[32'd96];

assign ap_CS_fsm_pp6_stage6 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_pp6_stage60 = ap_CS_fsm[32'd97];

assign ap_CS_fsm_pp6_stage64 = ap_CS_fsm[32'd101];

assign ap_CS_fsm_pp6_stage65 = ap_CS_fsm[32'd102];

assign ap_CS_fsm_pp6_stage69 = ap_CS_fsm[32'd106];

assign ap_CS_fsm_pp6_stage7 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_pp6_stage70 = ap_CS_fsm[32'd107];

assign ap_CS_fsm_pp6_stage74 = ap_CS_fsm[32'd111];

assign ap_CS_fsm_pp6_stage75 = ap_CS_fsm[32'd112];

assign ap_CS_fsm_pp6_stage79 = ap_CS_fsm[32'd116];

assign ap_CS_fsm_pp6_stage8 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_pp6_stage80 = ap_CS_fsm[32'd117];

assign ap_CS_fsm_pp6_stage83 = ap_CS_fsm[32'd120];

assign ap_CS_fsm_pp6_stage9 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_pp7_stage0 = ap_CS_fsm[32'd122];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state145 = ap_CS_fsm[32'd121];

assign ap_CS_fsm_state149 = ap_CS_fsm[32'd123];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((infer_input_V_TVALID_int_regslice == 1'b0) & (icmp_ln200_fu_922_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((infer_input_V_TVALID_int_regslice == 1'b0) & (icmp_ln200_fu_922_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage12 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage12_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage13 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage13_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage14 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage14_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage15 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage15_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage15_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage16 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage16_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage16_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage17_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage17_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage18_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage18_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage19_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage19_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage20 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage20_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage20_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage21_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage21_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage22_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage22_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage23_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage23_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage24_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage24_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage25 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage25_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage25_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage26_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage26_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage27_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage27_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage28_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage28_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage29_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage29_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage30 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage30_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage30_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage31_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage31_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage32_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage32_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage33_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage33_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage34_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage34_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage35 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage35_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage35_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage36_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage36_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage37_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage37_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage38_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage38_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage39_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage39_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage40 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage40_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage40_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage41_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage41_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage42_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage42_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage43_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage43_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage44_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage44_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage45 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage45_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage45_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage46_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage46_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage47_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage47_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage48_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage48_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage49_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage49_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage50 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage50_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage50_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage51_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage51_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage52_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage52_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage53_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage53_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage54_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage54_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage55 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage55_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage55_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage56_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage56_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage57_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage57_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage58_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage58_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage59_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage59_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage60 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage60_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage60_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage61_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage61_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage62_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage62_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage63_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage63_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage64_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage64_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage65 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage65_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage65_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage66_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage66_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage67_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage67_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage68_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage68_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage69_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage69_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage70 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage70_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage70_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage71_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage71_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage72_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage72_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage73_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage73_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage74_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage74_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage75 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage75_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage75_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage76_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage76_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage77_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage77_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage78_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage78_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage79_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage79_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage80 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage80_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage80_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage81_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage81_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage82_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage82_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage83_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage83_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp7_stage0_01001 = (((infer_output_V_TREADY_int_regslice == 1'b0) & (icmp_ln315_reg_1940_pp7_iter1_reg == 1'd0) & (ap_enable_reg_pp7_iter2 == 1'b1)) | ((infer_output_V_TREADY_int_regslice == 1'b0) & (icmp_ln315_reg_1940 == 1'd0) & (ap_enable_reg_pp7_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp7_stage0_11001 = (((ap_enable_reg_pp7_iter2 == 1'b1) & ((1'b1 == ap_block_state148_io) | ((infer_output_V_TREADY_int_regslice == 1'b0) & (icmp_ln315_reg_1940_pp7_iter1_reg == 1'd0)))) | ((ap_enable_reg_pp7_iter1 == 1'b1) & ((1'b1 == ap_block_state147_io) | ((infer_output_V_TREADY_int_regslice == 1'b0) & (icmp_ln315_reg_1940 == 1'd0)))));
end

always @ (*) begin
    ap_block_pp7_stage0_subdone = (((ap_enable_reg_pp7_iter2 == 1'b1) & ((1'b1 == ap_block_state148_io) | ((infer_output_V_TREADY_int_regslice == 1'b0) & (icmp_ln315_reg_1940_pp7_iter1_reg == 1'd0)))) | ((ap_enable_reg_pp7_iter1 == 1'b1) & ((1'b1 == ap_block_state147_io) | ((infer_output_V_TREADY_int_regslice == 1'b0) & (icmp_ln315_reg_1940 == 1'd0)))));
end

assign ap_block_state100_pp6_stage45_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state101_pp6_stage46_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state102_pp6_stage47_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state103_pp6_stage48_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state104_pp6_stage49_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state105_pp6_stage50_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state106_pp6_stage51_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state107_pp6_stage52_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state108_pp6_stage53_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state109_pp6_stage54_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state110_pp6_stage55_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state111_pp6_stage56_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state112_pp6_stage57_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state113_pp6_stage58_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state114_pp6_stage59_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state115_pp6_stage60_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state116_pp6_stage61_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state117_pp6_stage62_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state118_pp6_stage63_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state119_pp6_stage64_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state120_pp6_stage65_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state121_pp6_stage66_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state122_pp6_stage67_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state123_pp6_stage68_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state124_pp6_stage69_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state125_pp6_stage70_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state126_pp6_stage71_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state127_pp6_stage72_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state128_pp6_stage73_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state129_pp6_stage74_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state130_pp6_stage75_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state131_pp6_stage76_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state132_pp6_stage77_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state133_pp6_stage78_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state134_pp6_stage79_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state135_pp6_stage80_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state136_pp6_stage81_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state137_pp6_stage82_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state138_pp6_stage83_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state139_pp6_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state140_pp6_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state141_pp6_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state142_pp6_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state143_pp6_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state144_pp6_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state146_pp7_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state147_io = ((infer_output_V_TREADY_int_regslice == 1'b0) & (icmp_ln315_reg_1940 == 1'd0));
end

always @ (*) begin
    ap_block_state147_pp7_stage0_iter1 = ((infer_output_V_TREADY_int_regslice == 1'b0) & (icmp_ln315_reg_1940 == 1'd0));
end

always @ (*) begin
    ap_block_state148_io = ((infer_output_V_TREADY_int_regslice == 1'b0) & (icmp_ln315_reg_1940_pp7_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_state148_pp7_stage0_iter2 = ((infer_output_V_TREADY_int_regslice == 1'b0) & (icmp_ln315_reg_1940_pp7_iter1_reg == 1'd0));
end

assign ap_block_state14_pp1_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp1_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage0_iter12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state23_on_subcall_done = ((grp_set3DFloatArray_fu_847_ap_done == 1'b0) | (grp_set3DFloatArray_1_fu_842_ap_done == 1'b0) | (grp_set3DFloatArray_2_fu_837_ap_done == 1'b0) | (grp_set3DFloatArray_3_fu_832_ap_done == 1'b0) | (grp_set3DFloatArray_4_fu_827_ap_done == 1'b0) | (grp_set3DFloatArray_5_fu_822_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter0 = ((infer_input_V_TVALID_int_regslice == 1'b0) & (icmp_ln200_fu_922_p2 == 1'd0));
end

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp6_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp6_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp6_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp6_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp6_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp6_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp6_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp6_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp6_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp6_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp6_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp6_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp6_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp6_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp6_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp6_stage15_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp6_stage16_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp6_stage17_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp6_stage18_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp6_stage19_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp6_stage20_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state76_pp6_stage21_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp6_stage22_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp6_stage23_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state79_pp6_stage24_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state80_pp6_stage25_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state81_pp6_stage26_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state82_pp6_stage27_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state83_pp6_stage28_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state84_pp6_stage29_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state85_pp6_stage30_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state86_pp6_stage31_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state87_pp6_stage32_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state88_pp6_stage33_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state89_pp6_stage34_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state90_pp6_stage35_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state91_pp6_stage36_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state92_pp6_stage37_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state93_pp6_stage38_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state94_pp6_stage39_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state95_pp6_stage40_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state96_pp6_stage41_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state97_pp6_stage42_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state98_pp6_stage43_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state99_pp6_stage44_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp6 = (ap_idle_pp6 ^ 1'b1);

assign ap_enable_pp7 = (ap_idle_pp7 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign empty_44_fu_959_p2 = (p_shl_fu_939_p3 - p_shl10081_cast_fu_955_p1);

assign empty_46_fu_1037_p2 = (ii_cast_fu_1033_p1 + select_ln31_1_fu_1017_p3);

assign empty_52_fu_1229_p1 = i_6_reg_721[1:0];

assign grp_conv2d_1_fu_754_ap_start = grp_conv2d_1_fu_754_ap_start_reg;

assign grp_conv2d_1_fu_754_grp_fu_1954_p_dout0 = grp_fu_1954_p2;

assign grp_conv2d_1_fu_754_grp_fu_852_p_dout0 = grp_fu_852_p2;

assign grp_conv2d_1_fu_754_grp_fu_856_p_dout0 = grp_fu_856_p2;

assign grp_conv2d_2_fu_744_ap_start = grp_conv2d_2_fu_744_ap_start_reg;

assign grp_conv2d_2_fu_744_grp_fu_1954_p_dout0 = grp_fu_1954_p2;

assign grp_conv2d_2_fu_744_grp_fu_852_p_dout0 = grp_fu_852_p2;

assign grp_conv2d_2_fu_744_grp_fu_856_p_dout0 = grp_fu_856_p2;

assign grp_conv2d_fu_764_ap_start = grp_conv2d_fu_764_ap_start_reg;

assign grp_conv2d_fu_764_grp_fu_1954_p_dout0 = grp_fu_1954_p2;

assign grp_conv2d_fu_764_grp_fu_852_p_dout0 = grp_fu_852_p2;

assign grp_conv2d_fu_764_grp_fu_856_p_dout0 = grp_fu_856_p2;

assign grp_dense_relu_1_fu_802_ap_start = grp_dense_relu_1_fu_802_ap_start_reg;

assign grp_dense_relu_1_fu_802_grp_fu_1954_p_dout0 = grp_fu_1954_p2;

assign grp_dense_relu_1_fu_802_grp_fu_852_p_dout0 = grp_fu_852_p2;

assign grp_dense_relu_1_fu_802_grp_fu_856_p_dout0 = grp_fu_856_p2;

assign grp_dense_relu_2_fu_792_ap_start = grp_dense_relu_2_fu_792_ap_start_reg;

assign grp_dense_relu_2_fu_792_grp_fu_1954_p_dout0 = grp_fu_1954_p2;

assign grp_dense_relu_2_fu_792_grp_fu_852_p_dout0 = grp_fu_852_p2;

assign grp_dense_relu_2_fu_792_grp_fu_856_p_dout0 = grp_fu_856_p2;

assign grp_dense_relu_fu_812_ap_start = grp_dense_relu_fu_812_ap_start_reg;

assign grp_dense_relu_fu_812_grp_fu_1954_p_dout0 = grp_fu_1954_p2;

assign grp_dense_relu_fu_812_grp_fu_852_p_dout0 = grp_fu_852_p2;

assign grp_dense_relu_fu_812_grp_fu_856_p_dout0 = grp_fu_856_p2;

assign grp_max_pooling2d_1_fu_780_ap_start = grp_max_pooling2d_1_fu_780_ap_start_reg;

assign grp_max_pooling2d_1_fu_780_grp_fu_1954_p_dout0 = grp_fu_1954_p2;

assign grp_max_pooling2d_1_fu_780_grp_fu_1958_p_dout0 = grp_fu_1958_p2;

assign grp_max_pooling2d_2_fu_774_ap_start = grp_max_pooling2d_2_fu_774_ap_start_reg;

assign grp_max_pooling2d_2_fu_774_grp_fu_1954_p_dout0 = grp_fu_1954_p2;

assign grp_max_pooling2d_2_fu_774_grp_fu_1958_p_dout0 = grp_fu_1958_p2;

assign grp_max_pooling2d_fu_786_ap_start = grp_max_pooling2d_fu_786_ap_start_reg;

assign grp_max_pooling2d_fu_786_grp_fu_1954_p_dout0 = grp_fu_1954_p2;

assign grp_max_pooling2d_fu_786_grp_fu_1958_p_dout0 = grp_fu_1958_p2;

assign grp_set3DFloatArray_1_fu_842_ap_start = grp_set3DFloatArray_1_fu_842_ap_start_reg;

assign grp_set3DFloatArray_2_fu_837_ap_start = grp_set3DFloatArray_2_fu_837_ap_start_reg;

assign grp_set3DFloatArray_3_fu_832_ap_start = grp_set3DFloatArray_3_fu_832_ap_start_reg;

assign grp_set3DFloatArray_4_fu_827_ap_start = grp_set3DFloatArray_4_fu_827_ap_start_reg;

assign grp_set3DFloatArray_5_fu_822_ap_start = grp_set3DFloatArray_5_fu_822_ap_start_reg;

assign grp_set3DFloatArray_fu_847_ap_start = grp_set3DFloatArray_fu_847_ap_start_reg;

assign i_3_cast_fu_1066_p1 = i_2_reg_677;

assign i_4_cast_fu_1083_p1 = i_3_reg_688;

assign i_5_cast_fu_1100_p1 = i_4_reg_699;

assign i_7_cast11_fu_1225_p1 = i_6_reg_721;

assign i_7_cast4_fu_1288_p1 = i_6_reg_721;

assign i_7_cast5_fu_1175_p1 = ap_phi_mux_i_6_phi_fu_725_p4;

assign i_cast_fu_928_p1 = i_reg_632_pp0_iter4_reg;

assign icmp_ln176_fu_1169_p2 = ((ap_phi_mux_i_6_phi_fu_725_p4 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln200_fu_922_p2 = ((ap_phi_mux_i_phi_fu_636_p4 == 12'd3600) ? 1'b1 : 1'b0);

assign icmp_ln22_1_fu_1077_p2 = ((i_3_reg_688 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln22_2_fu_1094_p2 = ((i_4_reg_699 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln22_3_fu_1123_p2 = ((i_5_reg_710 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln22_fu_1060_p2 = ((i_2_reg_677 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln315_fu_1404_p2 = ((i_7_reg_733 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln31_fu_965_p2 = ((indvar_flatten_reg_644 == 12'd3600) ? 1'b1 : 1'b0);

assign icmp_ln33_fu_971_p2 = ((ii_reg_666 == 6'd60) ? 1'b1 : 1'b0);

assign ii_cast_fu_1033_p1 = select_ln31_fu_977_p3;

assign image_input_address1 = zext_ln37_fu_1043_p1;

assign infer_input_V_TREADY = regslice_both_infer_input_V_U_ack_in;

assign infer_output_V_TDATA_int_regslice = tmp_33_fu_1414_p6;

assign infer_output_V_TVALID = regslice_both_infer_output_V_U_vld_out;

assign layer_12_output_0_0_load_reg_1539 = 32'd0;

assign layer_12_output_1_0_load_reg_1544 = 32'd0;

assign layer_12_output_2_0_load_reg_1549 = 32'd0;

assign layer_12_output_3_0_load_reg_1554 = 32'd0;

assign or_ln180_1_fu_1212_p3 = {{2'd2}, {i_6_reg_721}};

assign or_ln180_3_fu_1275_p3 = {{3'd4}, {i_6_reg_721}};

assign or_ln180_4_fu_1309_p3 = {{3'd5}, {i_6_reg_721}};

assign or_ln_fu_1191_p3 = {{1'd1}, {i_6_reg_721}};

assign p_mid1_fu_1011_p2 = (p_shl_mid1_fu_991_p3 - p_shl10081_cast_mid1_fu_1007_p1);

assign p_shl10081_cast_fu_955_p1 = p_shl1_fu_947_p3;

assign p_shl10081_cast_mid1_fu_1007_p1 = p_shl10081_mid1_fu_999_p3;

assign p_shl10081_mid1_fu_999_p3 = {{add_ln31_1_fu_985_p2}, {2'd0}};

assign p_shl1_fu_947_p3 = {{i_1_reg_655}, {2'd0}};

assign p_shl_fu_939_p3 = {{i_1_reg_655}, {6'd0}};

assign p_shl_mid1_fu_991_p3 = {{add_ln31_1_fu_985_p2}, {6'd0}};

assign select_ln31_1_fu_1017_p3 = ((icmp_ln33_fu_971_p2[0:0] == 1'b1) ? p_mid1_fu_1011_p2 : empty_44_fu_959_p2);

assign select_ln31_2_fu_1025_p3 = ((icmp_ln33_fu_971_p2[0:0] == 1'b1) ? add_ln31_1_fu_985_p2 : i_1_reg_655);

assign select_ln31_fu_977_p3 = ((icmp_ln33_fu_971_p2[0:0] == 1'b1) ? 6'd0 : ii_reg_666);

assign sext_ln180_1_fu_1259_p1 = or_ln_reg_1774;

assign sext_ln180_2_fu_1267_p1 = xor_ln180_reg_1762;

assign sext_ln180_3_fu_1332_p1 = or_ln180_1_reg_1790;

assign sext_ln180_4_fu_1340_p1 = add_ln180_reg_1810;

assign sext_ln180_5_fu_1348_p1 = or_ln_reg_1774;

assign sext_ln180_6_fu_1356_p1 = xor_ln180_reg_1762;

assign sext_ln180_fu_1204_p1 = xor_ln180_reg_1762;

assign tmp_fu_1233_p5 = i_6_reg_721[1:0];

assign trunc_ln317_fu_1410_p1 = i_7_reg_733[1:0];

assign xor_ln180_fu_1180_p2 = (i_6_reg_721 ^ 3'd4);

assign zext_ln180_10_fu_1327_p1 = add_ln180_2_fu_1322_p2;

assign zext_ln180_11_fu_1335_p1 = $unsigned(sext_ln180_3_fu_1332_p1);

assign zext_ln180_12_fu_1343_p1 = $unsigned(sext_ln180_4_fu_1340_p1);

assign zext_ln180_13_fu_1351_p1 = $unsigned(sext_ln180_5_fu_1348_p1);

assign zext_ln180_14_fu_1359_p1 = $unsigned(sext_ln180_6_fu_1356_p1);

assign zext_ln180_1_fu_1199_p1 = $unsigned(or_ln_fu_1191_p3);

assign zext_ln180_2_fu_1207_p1 = $unsigned(sext_ln180_fu_1204_p1);

assign zext_ln180_3_fu_1220_p1 = $unsigned(or_ln180_1_fu_1212_p3);

assign zext_ln180_4_fu_1254_p1 = $unsigned(add_ln180_fu_1248_p2);

assign zext_ln180_5_fu_1262_p1 = $unsigned(sext_ln180_1_fu_1259_p1);

assign zext_ln180_6_fu_1270_p1 = $unsigned(sext_ln180_2_fu_1267_p1);

assign zext_ln180_7_fu_1283_p1 = or_ln180_3_fu_1275_p3;

assign zext_ln180_8_fu_1298_p1 = add_ln180_1_fu_1292_p2;

assign zext_ln180_9_fu_1317_p1 = or_ln180_4_fu_1309_p3;

assign zext_ln180_fu_1186_p1 = $unsigned(xor_ln180_fu_1180_p2);

assign zext_ln37_fu_1043_p1 = empty_46_fu_1037_p2;

always @ (posedge ap_clk) begin
    or_ln_reg_1774[3] <= 1'b1;
    or_ln180_1_reg_1790[4:3] <= 2'b10;
    i_7_cast4_reg_1845[5:3] <= 3'b000;
end

endmodule //infer
