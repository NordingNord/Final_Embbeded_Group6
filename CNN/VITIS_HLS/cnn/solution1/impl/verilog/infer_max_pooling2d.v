// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module infer_max_pooling2d (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_r_address0,
        input_r_ce0,
        input_r_q0,
        input_r_address1,
        input_r_ce1,
        input_r_q1,
        output_r_address0,
        output_r_ce0,
        output_r_we0,
        output_r_d0,
        grp_fu_1954_p_din0,
        grp_fu_1954_p_din1,
        grp_fu_1954_p_opcode,
        grp_fu_1954_p_dout0,
        grp_fu_1954_p_ce,
        grp_fu_1958_p_din0,
        grp_fu_1958_p_din1,
        grp_fu_1958_p_opcode,
        grp_fu_1958_p_dout0,
        grp_fu_1958_p_ce
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_pp0_stage0 = 4'd2;
parameter    ap_ST_fsm_pp0_stage1 = 4'd4;
parameter    ap_ST_fsm_state11 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] input_r_address0;
output   input_r_ce0;
input  [31:0] input_r_q0;
output  [11:0] input_r_address1;
output   input_r_ce1;
input  [31:0] input_r_q1;
output  [9:0] output_r_address0;
output   output_r_ce0;
output   output_r_we0;
output  [31:0] output_r_d0;
output  [31:0] grp_fu_1954_p_din0;
output  [31:0] grp_fu_1954_p_din1;
output  [4:0] grp_fu_1954_p_opcode;
input  [0:0] grp_fu_1954_p_dout0;
output   grp_fu_1954_p_ce;
output  [31:0] grp_fu_1958_p_din0;
output  [31:0] grp_fu_1958_p_din1;
output  [4:0] grp_fu_1958_p_opcode;
input  [0:0] grp_fu_1958_p_dout0;
output   grp_fu_1958_p_ce;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[11:0] input_r_address0;
reg input_r_ce0;
reg[11:0] input_r_address1;
reg input_r_ce1;
reg output_r_ce0;
reg output_r_we0;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [9:0] indvar_flatten54_reg_144;
reg   [3:0] i_reg_156;
reg   [8:0] indvar_flatten_reg_168;
reg   [3:0] ii_reg_180;
reg   [5:0] iii_reg_191;
reg   [31:0] reg_213;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state5_pp0_stage1_iter1;
wire    ap_block_state7_pp0_stage1_iter2;
wire    ap_block_state9_pp0_stage1_iter3;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln118_reg_1030;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state6_pp0_stage0_iter2;
wire    ap_block_state8_pp0_stage0_iter3;
wire    ap_block_state10_pp0_stage0_iter4;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln118_reg_1030_pp0_iter1_reg;
wire   [6:0] zext_ln121_1_fu_251_p1;
reg   [6:0] zext_ln121_1_reg_1025;
reg   [6:0] zext_ln121_1_reg_1025_pp0_iter1_reg;
wire   [0:0] icmp_ln118_fu_291_p2;
reg   [0:0] icmp_ln118_reg_1030_pp0_iter2_reg;
reg   [0:0] icmp_ln118_reg_1030_pp0_iter3_reg;
wire   [0:0] icmp_ln121_fu_297_p2;
reg   [0:0] icmp_ln121_reg_1034;
reg   [0:0] icmp_ln121_reg_1034_pp0_iter1_reg;
wire   [3:0] add_ln11861_fu_311_p2;
reg   [3:0] add_ln11861_reg_1042;
reg   [3:0] add_ln11861_reg_1042_pp0_iter1_reg;
wire   [0:0] icmp_ln124_mid253_fu_403_p2;
reg   [0:0] icmp_ln124_mid253_reg_1048;
reg   [0:0] icmp_ln124_mid253_reg_1048_pp0_iter1_reg;
wire   [5:0] select_ln121_fu_421_p3;
reg   [5:0] select_ln121_reg_1053;
wire   [6:0] zext_ln121_4_fu_429_p1;
reg   [6:0] zext_ln121_4_reg_1058;
reg   [6:0] zext_ln121_4_reg_1058_pp0_iter1_reg;
wire   [3:0] select_ln121_14_fu_515_p3;
reg   [3:0] select_ln121_14_reg_1063;
wire   [11:0] iii_cast_fu_527_p1;
reg   [11:0] iii_cast_reg_1068;
reg   [11:0] iii_cast_reg_1068_pp0_iter1_reg;
wire   [9:0] add_ln140_fu_565_p2;
reg   [9:0] add_ln140_reg_1084;
reg   [9:0] add_ln140_reg_1084_pp0_iter1_reg;
reg   [9:0] add_ln140_reg_1084_pp0_iter2_reg;
reg   [9:0] add_ln140_reg_1084_pp0_iter3_reg;
wire   [9:0] add_ln118_fu_571_p2;
reg   [9:0] add_ln118_reg_1089;
wire   [3:0] empty_41_fu_577_p2;
reg   [3:0] empty_41_reg_1094;
wire   [3:0] select_ln118_fu_583_p3;
reg   [3:0] select_ln118_reg_1099;
reg   [31:0] input_load_7_reg_1104;
wire   [5:0] add_ln124_fu_589_p2;
reg   [5:0] add_ln124_reg_1111;
wire   [8:0] select_ln121_15_fu_600_p3;
reg   [8:0] select_ln121_15_reg_1116;
wire   [31:0] select_ln134_fu_649_p3;
reg   [31:0] select_ln134_reg_1121;
wire   [31:0] select_ln134_7_fu_817_p3;
reg   [31:0] select_ln134_7_reg_1128;
wire   [11:0] add_ln133_17_fu_833_p2;
reg   [11:0] add_ln133_17_reg_1140;
wire   [31:0] select_ln134_8_fu_921_p3;
reg   [31:0] select_ln134_8_reg_1145;
reg   [31:0] select_ln134_8_reg_1145_pp0_iter3_reg;
reg   [31:0] input_load_9_reg_1157;
reg    ap_enable_reg_pp0_iter3;
wire    ap_block_pp0_stage1_subdone;
reg    ap_condition_pp0_flush_enable;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter1_state5;
reg    ap_enable_reg_pp0_iter4;
reg   [9:0] ap_phi_mux_indvar_flatten54_phi_fu_148_p4;
wire    ap_block_pp0_stage0;
reg   [3:0] ap_phi_mux_i_phi_fu_160_p4;
reg   [8:0] ap_phi_mux_indvar_flatten_phi_fu_172_p4;
reg   [3:0] ap_phi_mux_ii_phi_fu_184_p4;
reg   [5:0] ap_phi_mux_iii_phi_fu_195_p4;
wire   [63:0] zext_ln133_fu_549_p1;
wire   [63:0] zext_ln133_7_fu_560_p1;
wire   [63:0] zext_ln133_8_fu_828_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln133_9_fu_928_p1;
wire   [63:0] zext_ln140_fu_1021_p1;
reg   [31:0] grp_fu_202_p0;
reg   [31:0] grp_fu_202_p1;
reg   [31:0] grp_fu_208_p0;
reg   [31:0] grp_fu_208_p1;
wire   [2:0] tmp_33_fu_223_p4;
wire   [3:0] empty_fu_245_p0;
wire   [4:0] empty_fu_245_p1;
wire   [2:0] tmp_34_fu_255_p4;
wire   [3:0] tmp_37_cast_fu_233_p1;
wire   [3:0] tmp_38_cast_fu_265_p1;
wire   [3:0] tmp_fu_269_p2;
wire   [4:0] tmp_cast_fu_275_p1;
wire   [4:0] p_shl_fu_237_p3;
wire   [6:0] empty_fu_245_p2;
wire   [2:0] p_mid_fu_321_p4;
wire   [2:0] p_mid213_fu_331_p3;
wire   [4:0] p_shl_mid1_fu_343_p3;
wire   [3:0] p_mid114_fu_359_p0;
wire   [4:0] p_mid114_fu_359_p1;
wire   [6:0] p_mid114_fu_359_p2;
wire   [4:0] tmp_cast_mid124_fu_373_p1;
wire   [6:0] add_ln133_fu_285_p2;
wire   [0:0] icmp_ln124_fu_397_p2;
wire   [0:0] not_exitcond_flatten_fu_391_p2;
wire   [3:0] ii_mid210_fu_303_p3;
wire   [0:0] or_ln121_fu_415_p2;
wire   [3:0] add_ln121_fu_409_p2;
wire   [2:0] p_mid1_fu_433_p4;
wire   [3:0] p_mid213_cast_fu_339_p1;
wire   [3:0] p_mid1_cast_fu_443_p1;
wire   [3:0] tmp_mid1_fu_447_p2;
wire   [4:0] tmp_cast_mid1_fu_453_p1;
wire   [4:0] p_shl_mid2_fu_351_p3;
wire   [4:0] mul2212_mid126_fu_377_p2;
wire   [4:0] mul2212_fu_279_p2;
wire   [4:0] mul2212_mid1_fu_457_p2;
wire   [4:0] empty_43_fu_463_p3;
wire   [4:0] select_ln121_11_fu_471_p3;
wire   [6:0] p_mid215_fu_365_p3;
wire   [6:0] add_ln133_13_fu_487_p2;
wire   [6:0] add_ln133_mid233_fu_383_p3;
wire   [6:0] select_ln121_12_fu_493_p3;
wire   [6:0] or_ln121_4_fu_501_p2;
wire   [5:0] tmp_s_fu_531_p4;
wire   [11:0] add_ln133_s_fu_541_p3;
wire   [11:0] shl_ln133_mid2_fu_507_p3;
wire   [11:0] add_ln133_14_fu_554_p2;
wire   [9:0] iii_cast8_fu_523_p1;
wire   [9:0] add26_mid2_fu_479_p3;
wire   [8:0] add_ln121_5_fu_594_p2;
wire   [31:0] bitcast_ln134_fu_607_p1;
wire   [7:0] tmp_22_fu_611_p4;
wire   [22:0] trunc_ln134_fu_621_p1;
wire   [0:0] icmp_ln134_27_fu_631_p2;
wire   [0:0] icmp_ln134_fu_625_p2;
wire   [0:0] or_ln134_fu_637_p2;
wire   [0:0] grp_fu_202_p2;
wire   [0:0] and_ln134_fu_643_p2;
wire   [3:0] mul_ln121_fu_661_p0;
wire   [4:0] mul_ln121_fu_661_p1;
wire   [6:0] mul_ln121_fu_661_p2;
wire   [3:0] p_mid116_fu_672_p2;
wire   [3:0] mul_ln121_1_fu_681_p0;
wire   [4:0] mul_ln121_1_fu_681_p1;
wire   [6:0] mul_ln121_1_fu_681_p2;
wire   [6:0] add_ln133_12_fu_667_p2;
wire   [6:0] mul_ln121_mid2_fu_687_p3;
wire   [6:0] add_ln133_15_fu_701_p2;
wire   [6:0] shl_ln133_4_mid245_v_v_fu_694_p3;
wire   [6:0] select_ln121_13_fu_706_p3;
wire   [6:0] add_ln121_4_fu_721_p2;
wire   [31:0] bitcast_ln134_13_fu_735_p1;
wire   [31:0] bitcast_ln134_14_fu_752_p1;
wire   [7:0] tmp_24_fu_738_p4;
wire   [22:0] trunc_ln134_13_fu_748_p1;
wire   [0:0] icmp_ln134_29_fu_775_p2;
wire   [0:0] icmp_ln134_28_fu_769_p2;
wire   [7:0] tmp_25_fu_755_p4;
wire   [22:0] trunc_ln134_14_fu_765_p1;
wire   [0:0] icmp_ln134_31_fu_793_p2;
wire   [0:0] icmp_ln134_30_fu_787_p2;
wire   [0:0] or_ln134_13_fu_781_p2;
wire   [0:0] or_ln134_14_fu_799_p2;
wire   [0:0] and_ln134_13_fu_805_p2;
wire   [0:0] and_ln134_14_fu_811_p2;
wire   [11:0] shl_ln133_4_mid2_fu_713_p3;
wire   [11:0] add_ln133_16_fu_823_p2;
wire   [11:0] shl_ln133_5_mid2_fu_727_p3;
wire   [31:0] bitcast_ln134_15_fu_838_p1;
wire   [31:0] bitcast_ln134_16_fu_856_p1;
wire   [7:0] tmp_27_fu_842_p4;
wire   [22:0] trunc_ln134_15_fu_852_p1;
wire   [0:0] icmp_ln134_33_fu_879_p2;
wire   [0:0] icmp_ln134_32_fu_873_p2;
wire   [7:0] tmp_28_fu_859_p4;
wire   [22:0] trunc_ln134_16_fu_869_p1;
wire   [0:0] icmp_ln134_35_fu_897_p2;
wire   [0:0] icmp_ln134_34_fu_891_p2;
wire   [0:0] or_ln134_15_fu_885_p2;
wire   [0:0] or_ln134_16_fu_903_p2;
wire   [0:0] and_ln134_15_fu_909_p2;
wire   [0:0] grp_fu_208_p2;
wire   [0:0] and_ln134_16_fu_915_p2;
wire   [31:0] bitcast_ln134_17_fu_932_p1;
wire   [31:0] bitcast_ln134_18_fu_949_p1;
wire   [7:0] tmp_30_fu_935_p4;
wire   [22:0] trunc_ln134_17_fu_945_p1;
wire   [0:0] icmp_ln134_37_fu_972_p2;
wire   [0:0] icmp_ln134_36_fu_966_p2;
wire   [7:0] tmp_31_fu_952_p4;
wire   [22:0] trunc_ln134_18_fu_962_p1;
wire   [0:0] icmp_ln134_39_fu_990_p2;
wire   [0:0] icmp_ln134_38_fu_984_p2;
wire   [0:0] or_ln134_17_fu_978_p2;
wire   [0:0] or_ln134_18_fu_996_p2;
wire   [0:0] and_ln134_17_fu_1002_p2;
wire   [0:0] and_ln134_18_fu_1008_p2;
wire    grp_fu_202_ce;
wire   [4:0] grp_fu_202_opcode;
wire    ap_block_pp0_stage1_00001;
wire    ap_block_pp0_stage0_00001;
wire    grp_fu_208_ce;
wire   [4:0] grp_fu_208_opcode;
wire    ap_CS_fsm_state11;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [6:0] empty_fu_245_p00;
wire   [6:0] mul_ln121_1_fu_681_p00;
wire   [6:0] mul_ln121_fu_661_p00;
wire   [6:0] p_mid114_fu_359_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
end

infer_mul_4ns_5ns_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 7 ))
mul_4ns_5ns_7_1_1_U76(
    .din0(empty_fu_245_p0),
    .din1(empty_fu_245_p1),
    .dout(empty_fu_245_p2)
);

infer_mul_4ns_5ns_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 7 ))
mul_4ns_5ns_7_1_1_U77(
    .din0(p_mid114_fu_359_p0),
    .din1(p_mid114_fu_359_p1),
    .dout(p_mid114_fu_359_p2)
);

infer_mul_4ns_5ns_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 7 ))
mul_4ns_5ns_7_1_1_U78(
    .din0(mul_ln121_fu_661_p0),
    .din1(mul_ln121_fu_661_p1),
    .dout(mul_ln121_fu_661_p2)
);

infer_mul_4ns_5ns_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 7 ))
mul_4ns_5ns_7_1_1_U79(
    .din0(mul_ln121_1_fu_681_p0),
    .din1(mul_ln121_1_fu_681_p1),
    .dout(mul_ln121_1_fu_681_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp0_flush_enable)) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            if ((1'b1 == ap_condition_pp0_exit_iter1_state5)) begin
                ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b0)) | ((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln118_reg_1030 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        i_reg_156 <= select_ln118_reg_1099;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_156 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln118_reg_1030 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ii_reg_180 <= select_ln121_14_reg_1063;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ii_reg_180 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln118_reg_1030 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        iii_reg_191 <= add_ln124_reg_1111;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        iii_reg_191 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln118_reg_1030 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        indvar_flatten54_reg_144 <= add_ln118_reg_1089;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten54_reg_144 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln118_reg_1030 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        indvar_flatten_reg_168 <= select_ln121_15_reg_1116;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_168 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln118_fu_291_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln11861_reg_1042 <= add_ln11861_fu_311_p2;
        add_ln140_reg_1084 <= add_ln140_fu_565_p2;
        icmp_ln121_reg_1034 <= icmp_ln121_fu_297_p2;
        icmp_ln124_mid253_reg_1048 <= icmp_ln124_mid253_fu_403_p2;
        iii_cast_reg_1068[5 : 0] <= iii_cast_fu_527_p1[5 : 0];
        select_ln121_reg_1053 <= select_ln121_fu_421_p3;
        zext_ln121_4_reg_1058[3 : 0] <= zext_ln121_4_fu_429_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln11861_reg_1042_pp0_iter1_reg <= add_ln11861_reg_1042;
        add_ln140_reg_1084_pp0_iter1_reg <= add_ln140_reg_1084;
        add_ln140_reg_1084_pp0_iter2_reg <= add_ln140_reg_1084_pp0_iter1_reg;
        add_ln140_reg_1084_pp0_iter3_reg <= add_ln140_reg_1084_pp0_iter2_reg;
        icmp_ln118_reg_1030 <= icmp_ln118_fu_291_p2;
        icmp_ln118_reg_1030_pp0_iter1_reg <= icmp_ln118_reg_1030;
        icmp_ln118_reg_1030_pp0_iter2_reg <= icmp_ln118_reg_1030_pp0_iter1_reg;
        icmp_ln118_reg_1030_pp0_iter3_reg <= icmp_ln118_reg_1030_pp0_iter2_reg;
        icmp_ln121_reg_1034_pp0_iter1_reg <= icmp_ln121_reg_1034;
        icmp_ln124_mid253_reg_1048_pp0_iter1_reg <= icmp_ln124_mid253_reg_1048;
        iii_cast_reg_1068_pp0_iter1_reg[5 : 0] <= iii_cast_reg_1068[5 : 0];
        zext_ln121_1_reg_1025[3 : 0] <= zext_ln121_1_fu_251_p1[3 : 0];
        zext_ln121_1_reg_1025_pp0_iter1_reg[3 : 0] <= zext_ln121_1_reg_1025[3 : 0];
        zext_ln121_4_reg_1058_pp0_iter1_reg[3 : 0] <= zext_ln121_4_reg_1058[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln118_reg_1089 <= add_ln118_fu_571_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln118_reg_1030 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln124_reg_1111 <= add_ln124_fu_589_p2;
        input_load_7_reg_1104 <= input_r_q0;
        select_ln118_reg_1099 <= select_ln118_fu_583_p3;
        select_ln121_15_reg_1116 <= select_ln121_15_fu_600_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln118_reg_1030_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln133_17_reg_1140 <= add_ln133_17_fu_833_p2;
        select_ln134_7_reg_1128 <= select_ln134_7_fu_817_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        empty_41_reg_1094[3 : 1] <= empty_41_fu_577_p2[3 : 1];
        select_ln134_8_reg_1145_pp0_iter3_reg <= select_ln134_8_reg_1145;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln118_reg_1030_pp0_iter2_reg == 1'd0))) begin
        input_load_9_reg_1157 <= input_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln118_reg_1030_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln118_reg_1030 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_213 <= input_r_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln118_fu_291_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln121_14_reg_1063 <= select_ln121_14_fu_515_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln118_reg_1030_pp0_iter2_reg == 1'd0))) begin
        select_ln134_8_reg_1145 <= select_ln134_8_fu_921_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln118_reg_1030 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln134_reg_1121 <= select_ln134_fu_649_p3;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_condition_pp0_exit_iter1_state5 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter1_state5 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln118_reg_1030 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_pp0_flush_enable = 1'b1;
    end else begin
        ap_condition_pp0_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln118_reg_1030 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_i_phi_fu_160_p4 = select_ln118_reg_1099;
    end else begin
        ap_phi_mux_i_phi_fu_160_p4 = i_reg_156;
    end
end

always @ (*) begin
    if (((icmp_ln118_reg_1030 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_ii_phi_fu_184_p4 = select_ln121_14_reg_1063;
    end else begin
        ap_phi_mux_ii_phi_fu_184_p4 = ii_reg_180;
    end
end

always @ (*) begin
    if (((icmp_ln118_reg_1030 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_iii_phi_fu_195_p4 = add_ln124_reg_1111;
    end else begin
        ap_phi_mux_iii_phi_fu_195_p4 = iii_reg_191;
    end
end

always @ (*) begin
    if (((icmp_ln118_reg_1030 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_indvar_flatten54_phi_fu_148_p4 = add_ln118_reg_1089;
    end else begin
        ap_phi_mux_indvar_flatten54_phi_fu_148_p4 = indvar_flatten54_reg_144;
    end
end

always @ (*) begin
    if (((icmp_ln118_reg_1030 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_indvar_flatten_phi_fu_172_p4 = select_ln121_15_reg_1116;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_172_p4 = indvar_flatten_reg_168;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_202_p0 = input_load_7_reg_1104;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_202_p0 = input_r_q1;
    end else begin
        grp_fu_202_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_202_p1 = select_ln134_fu_649_p3;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_202_p1 = 32'd0;
    end else begin
        grp_fu_202_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        grp_fu_208_p0 = input_load_9_reg_1157;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_208_p0 = input_r_q1;
    end else begin
        grp_fu_208_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        grp_fu_208_p1 = select_ln134_8_reg_1145;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_208_p1 = select_ln134_7_reg_1128;
    end else begin
        grp_fu_208_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        input_r_address0 = zext_ln133_9_fu_928_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_r_address0 = zext_ln133_7_fu_560_p1;
    end else begin
        input_r_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        input_r_address1 = zext_ln133_8_fu_828_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_r_address1 = zext_ln133_fu_549_p1;
    end else begin
        input_r_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_r_ce0 = 1'b1;
    end else begin
        input_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        input_r_ce1 = 1'b1;
    end else begin
        input_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        output_r_ce0 = 1'b1;
    end else begin
        output_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln118_reg_1030_pp0_iter3_reg == 1'd0))) begin
        output_r_we0 = 1'b1;
    end else begin
        output_r_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add26_mid2_fu_479_p3 = {{select_ln121_11_fu_471_p3}, {5'd0}};

assign add_ln11861_fu_311_p2 = (ap_phi_mux_i_phi_fu_160_p4 + 4'd2);

assign add_ln118_fu_571_p2 = (indvar_flatten54_reg_144 + 10'd1);

assign add_ln121_4_fu_721_p2 = (select_ln121_13_fu_706_p3 + 7'd1);

assign add_ln121_5_fu_594_p2 = (indvar_flatten_reg_168 + 9'd1);

assign add_ln121_fu_409_p2 = (ii_mid210_fu_303_p3 + 4'd2);

assign add_ln124_fu_589_p2 = (select_ln121_reg_1053 + 6'd1);

assign add_ln133_12_fu_667_p2 = (mul_ln121_fu_661_p2 + zext_ln121_1_reg_1025_pp0_iter1_reg);

assign add_ln133_13_fu_487_p2 = (p_mid215_fu_365_p3 + zext_ln121_4_fu_429_p1);

assign add_ln133_14_fu_554_p2 = (shl_ln133_mid2_fu_507_p3 + iii_cast_fu_527_p1);

assign add_ln133_15_fu_701_p2 = (mul_ln121_mid2_fu_687_p3 + zext_ln121_4_reg_1058_pp0_iter1_reg);

assign add_ln133_16_fu_823_p2 = (shl_ln133_4_mid2_fu_713_p3 + iii_cast_reg_1068_pp0_iter1_reg);

assign add_ln133_17_fu_833_p2 = (shl_ln133_5_mid2_fu_727_p3 + iii_cast_reg_1068_pp0_iter1_reg);

assign add_ln133_fu_285_p2 = (empty_fu_245_p2 + zext_ln121_1_fu_251_p1);

assign add_ln133_mid233_fu_383_p3 = ((icmp_ln121_fu_297_p2[0:0] == 1'b1) ? p_mid114_fu_359_p2 : add_ln133_fu_285_p2);

assign add_ln133_s_fu_541_p3 = {{tmp_s_fu_531_p4}, {select_ln121_fu_421_p3}};

assign add_ln140_fu_565_p2 = (iii_cast8_fu_523_p1 + add26_mid2_fu_479_p3);

assign and_ln134_13_fu_805_p2 = (or_ln134_14_fu_799_p2 & or_ln134_13_fu_781_p2);

assign and_ln134_14_fu_811_p2 = (grp_fu_1954_p_dout0 & and_ln134_13_fu_805_p2);

assign and_ln134_15_fu_909_p2 = (or_ln134_16_fu_903_p2 & or_ln134_15_fu_885_p2);

assign and_ln134_16_fu_915_p2 = (grp_fu_1958_p_dout0 & and_ln134_15_fu_909_p2);

assign and_ln134_17_fu_1002_p2 = (or_ln134_18_fu_996_p2 & or_ln134_17_fu_978_p2);

assign and_ln134_18_fu_1008_p2 = (grp_fu_1958_p_dout0 & and_ln134_17_fu_1002_p2);

assign and_ln134_fu_643_p2 = (or_ln134_fu_637_p2 & grp_fu_1954_p_dout0);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign bitcast_ln134_13_fu_735_p1 = input_load_7_reg_1104;

assign bitcast_ln134_14_fu_752_p1 = select_ln134_reg_1121;

assign bitcast_ln134_15_fu_838_p1 = reg_213;

assign bitcast_ln134_16_fu_856_p1 = select_ln134_7_reg_1128;

assign bitcast_ln134_17_fu_932_p1 = input_load_9_reg_1157;

assign bitcast_ln134_18_fu_949_p1 = select_ln134_8_reg_1145_pp0_iter3_reg;

assign bitcast_ln134_fu_607_p1 = reg_213;

assign empty_41_fu_577_p2 = (i_reg_156 | 4'd1);

assign empty_43_fu_463_p3 = ((icmp_ln121_fu_297_p2[0:0] == 1'b1) ? mul2212_mid126_fu_377_p2 : mul2212_fu_279_p2);

assign empty_fu_245_p0 = empty_fu_245_p00;

assign empty_fu_245_p00 = ap_phi_mux_i_phi_fu_160_p4;

assign empty_fu_245_p1 = 7'd11;

assign grp_fu_1954_p_ce = 1'b1;

assign grp_fu_1954_p_din0 = grp_fu_202_p0;

assign grp_fu_1954_p_din1 = grp_fu_202_p1;

assign grp_fu_1954_p_opcode = 5'd2;

assign grp_fu_1958_p_ce = 1'b1;

assign grp_fu_1958_p_din0 = grp_fu_208_p0;

assign grp_fu_1958_p_din1 = grp_fu_208_p1;

assign grp_fu_1958_p_opcode = 5'd2;

assign grp_fu_202_ce = 1'b1;

assign grp_fu_202_opcode = 5'd2;

assign grp_fu_202_p2 = grp_fu_1954_p_dout0;

assign grp_fu_208_ce = 1'b1;

assign grp_fu_208_opcode = 5'd2;

assign grp_fu_208_p2 = grp_fu_1958_p_dout0;

assign icmp_ln118_fu_291_p2 = ((ap_phi_mux_indvar_flatten54_phi_fu_148_p4 == 10'd800) ? 1'b1 : 1'b0);

assign icmp_ln121_fu_297_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_172_p4 == 9'd160) ? 1'b1 : 1'b0);

assign icmp_ln124_fu_397_p2 = ((ap_phi_mux_iii_phi_fu_195_p4 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln124_mid253_fu_403_p2 = (not_exitcond_flatten_fu_391_p2 & icmp_ln124_fu_397_p2);

assign icmp_ln134_27_fu_631_p2 = ((trunc_ln134_fu_621_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln134_28_fu_769_p2 = ((tmp_24_fu_738_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln134_29_fu_775_p2 = ((trunc_ln134_13_fu_748_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln134_30_fu_787_p2 = ((tmp_25_fu_755_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln134_31_fu_793_p2 = ((trunc_ln134_14_fu_765_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln134_32_fu_873_p2 = ((tmp_27_fu_842_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln134_33_fu_879_p2 = ((trunc_ln134_15_fu_852_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln134_34_fu_891_p2 = ((tmp_28_fu_859_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln134_35_fu_897_p2 = ((trunc_ln134_16_fu_869_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln134_36_fu_966_p2 = ((tmp_30_fu_935_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln134_37_fu_972_p2 = ((trunc_ln134_17_fu_945_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln134_38_fu_984_p2 = ((tmp_31_fu_952_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln134_39_fu_990_p2 = ((trunc_ln134_18_fu_962_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln134_fu_625_p2 = ((tmp_22_fu_611_p4 != 8'd255) ? 1'b1 : 1'b0);

assign ii_mid210_fu_303_p3 = ((icmp_ln121_fu_297_p2[0:0] == 1'b1) ? 4'd0 : ap_phi_mux_ii_phi_fu_184_p4);

assign iii_cast8_fu_523_p1 = select_ln121_fu_421_p3;

assign iii_cast_fu_527_p1 = select_ln121_fu_421_p3;

assign mul2212_fu_279_p2 = (tmp_cast_fu_275_p1 + p_shl_fu_237_p3);

assign mul2212_mid126_fu_377_p2 = (tmp_cast_mid124_fu_373_p1 + p_shl_mid1_fu_343_p3);

assign mul2212_mid1_fu_457_p2 = (tmp_cast_mid1_fu_453_p1 + p_shl_mid2_fu_351_p3);

assign mul_ln121_1_fu_681_p0 = mul_ln121_1_fu_681_p00;

assign mul_ln121_1_fu_681_p00 = p_mid116_fu_672_p2;

assign mul_ln121_1_fu_681_p1 = 7'd11;

assign mul_ln121_fu_661_p0 = mul_ln121_fu_661_p00;

assign mul_ln121_fu_661_p00 = empty_41_reg_1094;

assign mul_ln121_fu_661_p1 = 7'd11;

assign mul_ln121_mid2_fu_687_p3 = ((icmp_ln121_reg_1034_pp0_iter1_reg[0:0] == 1'b1) ? mul_ln121_1_fu_681_p2 : mul_ln121_fu_661_p2);

assign not_exitcond_flatten_fu_391_p2 = (icmp_ln121_fu_297_p2 ^ 1'd1);

assign or_ln121_4_fu_501_p2 = (select_ln121_12_fu_493_p3 | 7'd1);

assign or_ln121_fu_415_p2 = (icmp_ln124_mid253_fu_403_p2 | icmp_ln121_fu_297_p2);

assign or_ln134_13_fu_781_p2 = (icmp_ln134_29_fu_775_p2 | icmp_ln134_28_fu_769_p2);

assign or_ln134_14_fu_799_p2 = (icmp_ln134_31_fu_793_p2 | icmp_ln134_30_fu_787_p2);

assign or_ln134_15_fu_885_p2 = (icmp_ln134_33_fu_879_p2 | icmp_ln134_32_fu_873_p2);

assign or_ln134_16_fu_903_p2 = (icmp_ln134_35_fu_897_p2 | icmp_ln134_34_fu_891_p2);

assign or_ln134_17_fu_978_p2 = (icmp_ln134_37_fu_972_p2 | icmp_ln134_36_fu_966_p2);

assign or_ln134_18_fu_996_p2 = (icmp_ln134_39_fu_990_p2 | icmp_ln134_38_fu_984_p2);

assign or_ln134_fu_637_p2 = (icmp_ln134_fu_625_p2 | icmp_ln134_27_fu_631_p2);

assign output_r_address0 = zext_ln140_fu_1021_p1;

assign output_r_d0 = ((and_ln134_18_fu_1008_p2[0:0] == 1'b1) ? input_load_9_reg_1157 : select_ln134_8_reg_1145_pp0_iter3_reg);

assign p_mid114_fu_359_p0 = p_mid114_fu_359_p00;

assign p_mid114_fu_359_p00 = add_ln11861_fu_311_p2;

assign p_mid114_fu_359_p1 = 7'd11;

assign p_mid116_fu_672_p2 = (4'd1 | add_ln11861_reg_1042_pp0_iter1_reg);

assign p_mid1_cast_fu_443_p1 = p_mid1_fu_433_p4;

assign p_mid1_fu_433_p4 = {{add_ln121_fu_409_p2[3:1]}};

assign p_mid213_cast_fu_339_p1 = p_mid213_fu_331_p3;

assign p_mid213_fu_331_p3 = ((icmp_ln121_fu_297_p2[0:0] == 1'b1) ? p_mid_fu_321_p4 : tmp_33_fu_223_p4);

assign p_mid215_fu_365_p3 = ((icmp_ln121_fu_297_p2[0:0] == 1'b1) ? p_mid114_fu_359_p2 : empty_fu_245_p2);

assign p_mid_fu_321_p4 = {{add_ln11861_fu_311_p2[3:1]}};

assign p_shl_fu_237_p3 = {{ap_phi_mux_i_phi_fu_160_p4}, {1'd0}};

assign p_shl_mid1_fu_343_p3 = {{add_ln11861_fu_311_p2}, {1'd0}};

assign p_shl_mid2_fu_351_p3 = ((icmp_ln121_fu_297_p2[0:0] == 1'b1) ? p_shl_mid1_fu_343_p3 : p_shl_fu_237_p3);

assign select_ln118_fu_583_p3 = ((icmp_ln121_reg_1034[0:0] == 1'b1) ? add_ln11861_reg_1042 : i_reg_156);

assign select_ln121_11_fu_471_p3 = ((icmp_ln124_mid253_fu_403_p2[0:0] == 1'b1) ? mul2212_mid1_fu_457_p2 : empty_43_fu_463_p3);

assign select_ln121_12_fu_493_p3 = ((icmp_ln124_mid253_fu_403_p2[0:0] == 1'b1) ? add_ln133_13_fu_487_p2 : add_ln133_mid233_fu_383_p3);

assign select_ln121_13_fu_706_p3 = ((icmp_ln124_mid253_reg_1048_pp0_iter1_reg[0:0] == 1'b1) ? add_ln133_15_fu_701_p2 : shl_ln133_4_mid245_v_v_fu_694_p3);

assign select_ln121_14_fu_515_p3 = ((icmp_ln124_mid253_fu_403_p2[0:0] == 1'b1) ? add_ln121_fu_409_p2 : ii_mid210_fu_303_p3);

assign select_ln121_15_fu_600_p3 = ((icmp_ln121_reg_1034[0:0] == 1'b1) ? 9'd1 : add_ln121_5_fu_594_p2);

assign select_ln121_fu_421_p3 = ((or_ln121_fu_415_p2[0:0] == 1'b1) ? 6'd0 : ap_phi_mux_iii_phi_fu_195_p4);

assign select_ln134_7_fu_817_p3 = ((and_ln134_14_fu_811_p2[0:0] == 1'b1) ? input_load_7_reg_1104 : select_ln134_reg_1121);

assign select_ln134_8_fu_921_p3 = ((and_ln134_16_fu_915_p2[0:0] == 1'b1) ? reg_213 : select_ln134_7_reg_1128);

assign select_ln134_fu_649_p3 = ((and_ln134_fu_643_p2[0:0] == 1'b1) ? reg_213 : 32'd0);

assign shl_ln133_4_mid245_v_v_fu_694_p3 = ((icmp_ln121_reg_1034_pp0_iter1_reg[0:0] == 1'b1) ? mul_ln121_1_fu_681_p2 : add_ln133_12_fu_667_p2);

assign shl_ln133_4_mid2_fu_713_p3 = {{select_ln121_13_fu_706_p3}, {5'd0}};

assign shl_ln133_5_mid2_fu_727_p3 = {{add_ln121_4_fu_721_p2}, {5'd0}};

assign shl_ln133_mid2_fu_507_p3 = {{or_ln121_4_fu_501_p2}, {5'd0}};

assign tmp_22_fu_611_p4 = {{bitcast_ln134_fu_607_p1[30:23]}};

assign tmp_24_fu_738_p4 = {{bitcast_ln134_13_fu_735_p1[30:23]}};

assign tmp_25_fu_755_p4 = {{bitcast_ln134_14_fu_752_p1[30:23]}};

assign tmp_27_fu_842_p4 = {{bitcast_ln134_15_fu_838_p1[30:23]}};

assign tmp_28_fu_859_p4 = {{bitcast_ln134_16_fu_856_p1[30:23]}};

assign tmp_30_fu_935_p4 = {{bitcast_ln134_17_fu_932_p1[30:23]}};

assign tmp_31_fu_952_p4 = {{bitcast_ln134_18_fu_949_p1[30:23]}};

assign tmp_33_fu_223_p4 = {{ap_phi_mux_i_phi_fu_160_p4[3:1]}};

assign tmp_34_fu_255_p4 = {{ap_phi_mux_ii_phi_fu_184_p4[3:1]}};

assign tmp_37_cast_fu_233_p1 = tmp_33_fu_223_p4;

assign tmp_38_cast_fu_265_p1 = tmp_34_fu_255_p4;

assign tmp_cast_fu_275_p1 = tmp_fu_269_p2;

assign tmp_cast_mid124_fu_373_p1 = p_mid_fu_321_p4;

assign tmp_cast_mid1_fu_453_p1 = tmp_mid1_fu_447_p2;

assign tmp_fu_269_p2 = (tmp_37_cast_fu_233_p1 + tmp_38_cast_fu_265_p1);

assign tmp_mid1_fu_447_p2 = (p_mid213_cast_fu_339_p1 + p_mid1_cast_fu_443_p1);

assign tmp_s_fu_531_p4 = {{select_ln121_12_fu_493_p3[6:1]}};

assign trunc_ln134_13_fu_748_p1 = bitcast_ln134_13_fu_735_p1[22:0];

assign trunc_ln134_14_fu_765_p1 = bitcast_ln134_14_fu_752_p1[22:0];

assign trunc_ln134_15_fu_852_p1 = bitcast_ln134_15_fu_838_p1[22:0];

assign trunc_ln134_16_fu_869_p1 = bitcast_ln134_16_fu_856_p1[22:0];

assign trunc_ln134_17_fu_945_p1 = bitcast_ln134_17_fu_932_p1[22:0];

assign trunc_ln134_18_fu_962_p1 = bitcast_ln134_18_fu_949_p1[22:0];

assign trunc_ln134_fu_621_p1 = bitcast_ln134_fu_607_p1[22:0];

assign zext_ln121_1_fu_251_p1 = ap_phi_mux_ii_phi_fu_184_p4;

assign zext_ln121_4_fu_429_p1 = add_ln121_fu_409_p2;

assign zext_ln133_7_fu_560_p1 = add_ln133_14_fu_554_p2;

assign zext_ln133_8_fu_828_p1 = add_ln133_16_fu_823_p2;

assign zext_ln133_9_fu_928_p1 = add_ln133_17_reg_1140;

assign zext_ln133_fu_549_p1 = add_ln133_s_fu_541_p3;

assign zext_ln140_fu_1021_p1 = add_ln140_reg_1084_pp0_iter3_reg;

always @ (posedge ap_clk) begin
    zext_ln121_1_reg_1025[6:4] <= 3'b000;
    zext_ln121_1_reg_1025_pp0_iter1_reg[6:4] <= 3'b000;
    zext_ln121_4_reg_1058[6:4] <= 3'b000;
    zext_ln121_4_reg_1058_pp0_iter1_reg[6:4] <= 3'b000;
    iii_cast_reg_1068[11:6] <= 6'b000000;
    iii_cast_reg_1068_pp0_iter1_reg[11:6] <= 6'b000000;
    empty_41_reg_1094[0] <= 1'b1;
end

endmodule //infer_max_pooling2d
