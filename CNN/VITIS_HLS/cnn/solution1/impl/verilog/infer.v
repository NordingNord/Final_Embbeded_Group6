// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="infer_infer,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu3eg-sbva484-1-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=12.036000,HLS_SYN_LAT=4054532,HLS_SYN_TPT=none,HLS_SYN_MEM=104,HLS_SYN_DSP=0,HLS_SYN_FF=6155,HLS_SYN_LUT=11790,HLS_VERSION=2020_2}" *)

module infer (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        infer_input_V_dout,
        infer_input_V_empty_n,
        infer_input_V_read,
        infer_output_V_din,
        infer_output_V_full_n,
        infer_output_V_write
);

parameter    ap_ST_fsm_state1 = 50'd1;
parameter    ap_ST_fsm_pp0_stage0 = 50'd2;
parameter    ap_ST_fsm_state9 = 50'd4;
parameter    ap_ST_fsm_pp1_stage0 = 50'd8;
parameter    ap_ST_fsm_state23 = 50'd16;
parameter    ap_ST_fsm_state24 = 50'd32;
parameter    ap_ST_fsm_state25 = 50'd64;
parameter    ap_ST_fsm_state26 = 50'd128;
parameter    ap_ST_fsm_state27 = 50'd256;
parameter    ap_ST_fsm_state28 = 50'd512;
parameter    ap_ST_fsm_state29 = 50'd1024;
parameter    ap_ST_fsm_state30 = 50'd2048;
parameter    ap_ST_fsm_state31 = 50'd4096;
parameter    ap_ST_fsm_state32 = 50'd8192;
parameter    ap_ST_fsm_state33 = 50'd16384;
parameter    ap_ST_fsm_state34 = 50'd32768;
parameter    ap_ST_fsm_state35 = 50'd65536;
parameter    ap_ST_fsm_state36 = 50'd131072;
parameter    ap_ST_fsm_state37 = 50'd262144;
parameter    ap_ST_fsm_state38 = 50'd524288;
parameter    ap_ST_fsm_state39 = 50'd1048576;
parameter    ap_ST_fsm_state40 = 50'd2097152;
parameter    ap_ST_fsm_pp3_stage0 = 50'd4194304;
parameter    ap_ST_fsm_pp3_stage1 = 50'd8388608;
parameter    ap_ST_fsm_pp3_stage2 = 50'd16777216;
parameter    ap_ST_fsm_pp3_stage3 = 50'd33554432;
parameter    ap_ST_fsm_state58 = 50'd67108864;
parameter    ap_ST_fsm_state59 = 50'd134217728;
parameter    ap_ST_fsm_state60 = 50'd268435456;
parameter    ap_ST_fsm_state61 = 50'd536870912;
parameter    ap_ST_fsm_state62 = 50'd1073741824;
parameter    ap_ST_fsm_pp5_stage0 = 50'd2147483648;
parameter    ap_ST_fsm_pp5_stage1 = 50'd4294967296;
parameter    ap_ST_fsm_pp5_stage2 = 50'd8589934592;
parameter    ap_ST_fsm_pp5_stage3 = 50'd17179869184;
parameter    ap_ST_fsm_state80 = 50'd34359738368;
parameter    ap_ST_fsm_state81 = 50'd68719476736;
parameter    ap_ST_fsm_state82 = 50'd137438953472;
parameter    ap_ST_fsm_state83 = 50'd274877906944;
parameter    ap_ST_fsm_state84 = 50'd549755813888;
parameter    ap_ST_fsm_pp7_stage0 = 50'd1099511627776;
parameter    ap_ST_fsm_pp7_stage1 = 50'd2199023255552;
parameter    ap_ST_fsm_pp7_stage2 = 50'd4398046511104;
parameter    ap_ST_fsm_pp7_stage3 = 50'd8796093022208;
parameter    ap_ST_fsm_state102 = 50'd17592186044416;
parameter    ap_ST_fsm_state103 = 50'd35184372088832;
parameter    ap_ST_fsm_state104 = 50'd70368744177664;
parameter    ap_ST_fsm_state105 = 50'd140737488355328;
parameter    ap_ST_fsm_pp9_stage0 = 50'd281474976710656;
parameter    ap_ST_fsm_state108 = 50'd562949953421312;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] infer_input_V_dout;
input   infer_input_V_empty_n;
output   infer_input_V_read;
output  [31:0] infer_output_V_din;
input   infer_output_V_full_n;
output   infer_output_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg infer_input_V_read;
reg infer_output_V_write;

(* fsm_encoding = "none" *) reg   [49:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [5:0] layer_9_bias_address0;
reg    layer_9_bias_ce0;
wire   [31:0] layer_9_bias_q0;
wire   [10:0] layer_9_weights_address0;
reg    layer_9_weights_ce0;
wire   [31:0] layer_9_weights_q0;
wire   [4:0] layer_10_bias_address0;
reg    layer_10_bias_ce0;
wire   [31:0] layer_10_bias_q0;
wire   [10:0] layer_10_weights_address0;
reg    layer_10_weights_ce0;
wire   [31:0] layer_10_weights_q0;
wire   [3:0] layer_11_bias_address0;
reg    layer_11_bias_ce0;
wire   [31:0] layer_11_bias_q0;
wire   [8:0] layer_11_weights_address0;
reg    layer_11_weights_ce0;
wire   [31:0] layer_11_weights_q0;
reg    infer_input_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln197_reg_1523;
reg    infer_output_V_blk_n;
wire    ap_CS_fsm_pp9_stage0;
reg    ap_enable_reg_pp9_iter1;
wire    ap_block_pp9_stage0;
reg   [0:0] icmp_ln298_reg_1830;
reg   [9:0] i_reg_422;
reg   [9:0] i_reg_422_pp0_iter1_reg;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
reg    ap_block_pp0_stage0_11001;
reg   [9:0] i_reg_422_pp0_iter2_reg;
reg   [9:0] i_reg_422_pp0_iter3_reg;
reg   [9:0] i_reg_422_pp0_iter4_reg;
reg   [9:0] i_reg_422_pp0_iter5_reg;
reg   [9:0] indvar_flatten_reg_434;
reg   [4:0] i_2_reg_445;
reg   [4:0] ii_reg_456;
reg   [5:0] ii_4_reg_490;
reg   [31:0] add108_i_reg_501;
reg   [6:0] ii_5_reg_534;
reg   [31:0] add108_i22667_reg_546;
reg   [5:0] ii_6_reg_579;
reg   [31:0] add108_i22688_reg_590;
reg   [2:0] i_8_reg_659;
wire   [31:0] layer_9_output_q0;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_pp5_stage1;
reg    ap_enable_reg_pp5_iter0;
wire    ap_block_state64_pp5_stage1_iter0;
wire    ap_block_state68_pp5_stage1_iter1;
wire    ap_block_state72_pp5_stage1_iter2;
wire    ap_block_state76_pp5_stage1_iter3;
wire    ap_block_pp5_stage1_11001;
reg   [0:0] icmp_ln159_1_reg_1679;
wire   [31:0] grp_fu_770_p2;
reg   [31:0] reg_799;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter1;
wire    ap_block_state41_pp3_stage0_iter0;
wire    ap_block_state45_pp3_stage0_iter1;
wire    ap_block_state49_pp3_stage0_iter2;
wire    ap_block_state53_pp3_stage0_iter3;
wire    ap_block_state57_pp3_stage0_iter4;
wire    ap_block_pp3_stage0_11001;
reg   [0:0] icmp_ln159_reg_1614;
wire    ap_CS_fsm_pp5_stage0;
wire    ap_block_state63_pp5_stage0_iter0;
wire    ap_block_state67_pp5_stage0_iter1;
wire    ap_block_state71_pp5_stage0_iter2;
wire    ap_block_state75_pp5_stage0_iter3;
wire    ap_block_state79_pp5_stage0_iter4;
wire    ap_block_pp5_stage0_11001;
wire    ap_CS_fsm_pp7_stage0;
wire    ap_block_state85_pp7_stage0_iter0;
wire    ap_block_state89_pp7_stage0_iter1;
wire    ap_block_state93_pp7_stage0_iter2;
wire    ap_block_state97_pp7_stage0_iter3;
wire    ap_block_state101_pp7_stage0_iter4;
wire    ap_block_pp7_stage0_11001;
reg    ap_enable_reg_pp5_iter1;
reg    ap_enable_reg_pp7_iter1;
reg   [0:0] icmp_ln159_2_reg_1754;
wire   [31:0] grp_fu_763_p2;
reg   [31:0] reg_804;
wire    ap_CS_fsm_pp3_stage1;
reg    ap_enable_reg_pp3_iter2;
wire    ap_block_state42_pp3_stage1_iter0;
wire    ap_block_state46_pp3_stage1_iter1;
wire    ap_block_state50_pp3_stage1_iter2;
wire    ap_block_state54_pp3_stage1_iter3;
wire    ap_block_pp3_stage1_11001;
reg   [0:0] icmp_ln159_reg_1614_pp3_iter2_reg;
wire    ap_CS_fsm_pp7_stage1;
wire    ap_block_state86_pp7_stage1_iter0;
wire    ap_block_state90_pp7_stage1_iter1;
wire    ap_block_state94_pp7_stage1_iter2;
wire    ap_block_state98_pp7_stage1_iter3;
wire    ap_block_pp7_stage1_11001;
reg    ap_enable_reg_pp5_iter2;
reg   [0:0] icmp_ln159_1_reg_1679_pp5_iter2_reg;
reg    ap_enable_reg_pp7_iter2;
reg   [0:0] icmp_ln159_2_reg_1754_pp7_iter2_reg;
reg   [31:0] reg_812;
wire    ap_CS_fsm_pp3_stage2;
reg    ap_enable_reg_pp3_iter3;
wire    ap_block_state43_pp3_stage2_iter0;
wire    ap_block_state47_pp3_stage2_iter1;
wire    ap_block_state51_pp3_stage2_iter2;
wire    ap_block_state55_pp3_stage2_iter3;
wire    ap_block_pp3_stage2_11001;
reg   [0:0] ifzero_reg_1628;
reg   [0:0] ifzero_reg_1628_pp3_iter3_reg;
wire    ap_CS_fsm_pp5_stage2;
reg    ap_enable_reg_pp5_iter3;
wire    ap_block_state65_pp5_stage2_iter0;
wire    ap_block_state69_pp5_stage2_iter1;
wire    ap_block_state73_pp5_stage2_iter2;
wire    ap_block_state77_pp5_stage2_iter3;
wire    ap_block_pp5_stage2_11001;
reg   [0:0] ifzero5_reg_1703;
reg   [0:0] ifzero5_reg_1703_pp5_iter2_reg;
wire    ap_CS_fsm_pp7_stage2;
reg    ap_enable_reg_pp7_iter3;
wire    ap_block_state87_pp7_stage2_iter0;
wire    ap_block_state91_pp7_stage2_iter1;
wire    ap_block_state95_pp7_stage2_iter2;
wire    ap_block_state99_pp7_stage2_iter3;
wire    ap_block_pp7_stage2_11001;
reg   [0:0] ifzero9_reg_1768;
reg   [0:0] ifzero9_reg_1768_pp7_iter3_reg;
wire   [31:0] layer_10_output_q0;
wire    ap_CS_fsm_state62;
reg    ap_enable_reg_pp7_iter0;
wire   [9:0] add_ln197_fu_823_p2;
reg   [9:0] add_ln197_reg_1518;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] icmp_ln197_fu_829_p2;
reg   [0:0] icmp_ln197_reg_1523_pp0_iter1_reg;
reg   [0:0] icmp_ln197_reg_1523_pp0_iter2_reg;
reg   [0:0] icmp_ln197_reg_1523_pp0_iter3_reg;
reg   [0:0] icmp_ln197_reg_1523_pp0_iter4_reg;
reg   [0:0] icmp_ln197_reg_1523_pp0_iter5_reg;
reg   [31:0] single_pixel_reg_1527;
wire   [31:0] grp_fu_785_p1;
reg   [31:0] conv_reg_1532;
wire   [9:0] add_ln31_fu_840_p2;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state10_pp1_stage0_iter0;
wire    ap_block_state11_pp1_stage0_iter1;
wire    ap_block_state12_pp1_stage0_iter2;
wire    ap_block_state13_pp1_stage0_iter3;
wire    ap_block_state14_pp1_stage0_iter4;
wire    ap_block_state15_pp1_stage0_iter5;
wire    ap_block_state16_pp1_stage0_iter6;
wire    ap_block_state17_pp1_stage0_iter7;
wire    ap_block_state18_pp1_stage0_iter8;
wire    ap_block_state19_pp1_stage0_iter9;
wire    ap_block_state20_pp1_stage0_iter10;
wire    ap_block_state21_pp1_stage0_iter11;
wire    ap_block_state22_pp1_stage0_iter12;
wire    ap_block_pp1_stage0_11001;
wire   [0:0] icmp_ln31_fu_872_p2;
reg   [0:0] icmp_ln31_reg_1542;
reg   [0:0] icmp_ln31_reg_1542_pp1_iter1_reg;
reg   [0:0] icmp_ln31_reg_1542_pp1_iter2_reg;
reg   [0:0] icmp_ln31_reg_1542_pp1_iter3_reg;
reg   [0:0] icmp_ln31_reg_1542_pp1_iter4_reg;
reg   [0:0] icmp_ln31_reg_1542_pp1_iter5_reg;
reg   [0:0] icmp_ln31_reg_1542_pp1_iter6_reg;
reg   [0:0] icmp_ln31_reg_1542_pp1_iter7_reg;
reg   [0:0] icmp_ln31_reg_1542_pp1_iter8_reg;
reg   [0:0] icmp_ln31_reg_1542_pp1_iter9_reg;
reg   [0:0] icmp_ln31_reg_1542_pp1_iter10_reg;
reg   [0:0] icmp_ln31_reg_1542_pp1_iter11_reg;
wire   [4:0] select_ln31_2_fu_932_p3;
reg   [9:0] image_input_addr_1_reg_1551;
reg   [9:0] image_input_addr_1_reg_1551_pp1_iter1_reg;
reg   [9:0] image_input_addr_1_reg_1551_pp1_iter2_reg;
reg   [9:0] image_input_addr_1_reg_1551_pp1_iter3_reg;
reg   [9:0] image_input_addr_1_reg_1551_pp1_iter4_reg;
reg   [9:0] image_input_addr_1_reg_1551_pp1_iter5_reg;
reg   [9:0] image_input_addr_1_reg_1551_pp1_iter6_reg;
reg   [9:0] image_input_addr_1_reg_1551_pp1_iter7_reg;
reg   [9:0] image_input_addr_1_reg_1551_pp1_iter8_reg;
reg   [9:0] image_input_addr_1_reg_1551_pp1_iter9_reg;
reg   [9:0] image_input_addr_1_reg_1551_pp1_iter10_reg;
reg   [9:0] image_input_addr_1_reg_1551_pp1_iter11_reg;
wire   [4:0] add_ln33_fu_955_p2;
wire   [31:0] image_input_q1;
reg   [31:0] image_input_load_reg_1562;
reg    ap_enable_reg_pp1_iter1;
wire   [31:0] grp_fu_780_p2;
reg   [31:0] conv12_i_reg_1567;
wire   [6:0] add_ln22_fu_961_p2;
wire    ap_CS_fsm_state37;
wire   [6:0] add_ln157_fu_978_p2;
reg   [6:0] add_ln157_reg_1580;
wire    ap_CS_fsm_state39;
wire   [0:0] icmp_ln157_fu_984_p2;
reg   [5:0] layer_9_output_addr_1_reg_1589;
wire   [10:0] zext_ln157_1_fu_996_p1;
reg   [10:0] zext_ln157_1_reg_1599;
reg   [31:0] layer_9_bias_load_reg_1604;
wire   [5:0] add_ln159_fu_1000_p2;
reg   [5:0] add_ln159_reg_1609;
reg    ap_enable_reg_pp3_iter0;
wire   [0:0] icmp_ln159_fu_1006_p2;
reg   [0:0] icmp_ln159_reg_1614_pp3_iter1_reg;
wire   [0:0] ifzero_fu_1039_p2;
reg   [0:0] ifzero_reg_1628_pp3_iter1_reg;
reg   [0:0] ifzero_reg_1628_pp3_iter2_reg;
wire   [31:0] layer_7_output_q0;
wire   [5:0] add_ln22_1_fu_1096_p2;
wire    ap_CS_fsm_state59;
wire   [5:0] add_ln157_1_fu_1113_p2;
reg   [5:0] add_ln157_1_reg_1650;
wire    ap_CS_fsm_state61;
wire   [0:0] icmp_ln157_1_fu_1119_p2;
reg   [4:0] layer_10_output_addr_1_reg_1659;
wire   [10:0] zext_ln157_3_fu_1131_p1;
reg   [10:0] zext_ln157_3_reg_1669;
reg   [31:0] layer_10_bias_load_reg_1674;
wire   [0:0] icmp_ln159_1_fu_1135_p2;
reg   [0:0] icmp_ln159_1_reg_1679_pp5_iter1_reg;
wire   [6:0] add_ln159_1_fu_1168_p2;
reg   [6:0] add_ln159_1_reg_1698;
wire    ap_CS_fsm_pp5_stage3;
wire    ap_block_state66_pp5_stage3_iter0;
wire    ap_block_state70_pp5_stage3_iter1;
wire    ap_block_state74_pp5_stage3_iter2;
wire    ap_block_state78_pp5_stage3_iter3;
wire    ap_block_pp5_stage3_11001;
wire   [0:0] ifzero5_fu_1174_p2;
reg   [0:0] ifzero5_reg_1703_pp5_iter1_reg;
reg   [0:0] ifzero5_reg_1703_pp5_iter3_reg;
wire   [4:0] add_ln22_2_fu_1231_p2;
wire    ap_CS_fsm_state81;
wire   [4:0] add_ln157_2_fu_1248_p2;
reg   [4:0] add_ln157_2_reg_1715;
wire    ap_CS_fsm_state83;
wire   [0:0] icmp_ln157_2_fu_1254_p2;
reg   [3:0] layer_11_output_addr_1_reg_1724;
wire   [8:0] zext_ln157_5_fu_1266_p1;
reg   [8:0] zext_ln157_5_reg_1734;
wire    ap_CS_fsm_state84;
wire   [31:0] layer_11_output_q0;
reg   [31:0] layer_11_bias_load_reg_1744;
wire   [5:0] add_ln159_2_fu_1270_p2;
reg   [5:0] add_ln159_2_reg_1749;
wire   [0:0] icmp_ln159_2_fu_1276_p2;
reg   [0:0] icmp_ln159_2_reg_1754_pp7_iter1_reg;
wire   [0:0] ifzero9_fu_1309_p2;
reg   [0:0] ifzero9_reg_1768_pp7_iter1_reg;
reg   [0:0] ifzero9_reg_1768_pp7_iter2_reg;
wire   [2:0] add_ln22_3_fu_1366_p2;
wire    ap_CS_fsm_state103;
wire   [31:0] layer_12_output_0_1_fu_1416_p3;
wire   [0:0] icmp_ln22_3_fu_1372_p2;
wire   [31:0] layer_12_output_1_1_fu_1432_p3;
wire   [31:0] layer_12_output_2_1_fu_1440_p3;
wire   [31:0] layer_12_output_3_1_fu_1464_p3;
reg   [31:0] layer_12_output_0_reg_1805;
wire    ap_CS_fsm_state105;
reg   [31:0] layer_12_output_1_reg_1810;
reg   [31:0] layer_12_output_2_reg_1815;
reg   [31:0] layer_12_output_3_reg_1820;
wire   [2:0] add_ln298_fu_1488_p2;
reg    ap_enable_reg_pp9_iter0;
wire    ap_block_state106_pp9_stage0_iter0;
reg    ap_block_state107_pp9_stage0_iter1;
reg    ap_block_pp9_stage0_11001;
wire   [0:0] icmp_ln298_fu_1494_p2;
wire   [1:0] trunc_ln300_fu_1500_p1;
reg   [1:0] trunc_ln300_reg_1834;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
wire    ap_CS_fsm_state9;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state10;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter3;
reg    ap_enable_reg_pp1_iter4;
reg    ap_enable_reg_pp1_iter5;
reg    ap_enable_reg_pp1_iter6;
reg    ap_enable_reg_pp1_iter7;
reg    ap_enable_reg_pp1_iter8;
reg    ap_enable_reg_pp1_iter9;
reg    ap_enable_reg_pp1_iter10;
reg    ap_enable_reg_pp1_iter11;
reg    ap_enable_reg_pp1_iter12;
wire    ap_CS_fsm_pp3_stage3;
wire    ap_block_state44_pp3_stage3_iter0;
wire    ap_block_state48_pp3_stage3_iter1;
wire    ap_block_state52_pp3_stage3_iter2;
wire    ap_block_state56_pp3_stage3_iter3;
wire    ap_block_pp3_stage3_subdone;
reg    ap_condition_pp3_flush_enable;
wire    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter1_state46;
reg    ap_enable_reg_pp3_iter4;
wire    ap_block_pp5_stage3_subdone;
reg    ap_condition_pp5_flush_enable;
wire    ap_block_pp5_stage0_subdone;
reg    ap_condition_pp5_exit_iter1_state68;
reg    ap_enable_reg_pp5_iter4;
wire    ap_CS_fsm_pp7_stage3;
wire    ap_block_state88_pp7_stage3_iter0;
wire    ap_block_state92_pp7_stage3_iter1;
wire    ap_block_state96_pp7_stage3_iter2;
wire    ap_block_state100_pp7_stage3_iter3;
wire    ap_block_pp7_stage3_subdone;
reg    ap_condition_pp7_flush_enable;
wire    ap_block_pp7_stage0_subdone;
reg    ap_condition_pp7_exit_iter1_state90;
reg    ap_enable_reg_pp7_iter4;
wire    grp_dense_relu_fu_670_ap_ready;
wire    grp_dense_relu_fu_670_ap_done;
reg    ap_block_pp9_stage0_subdone;
reg    ap_condition_pp9_exit_iter0_state106;
reg   [9:0] image_input_address0;
reg    image_input_ce0;
reg    image_input_we0;
reg   [31:0] image_input_d0;
wire   [31:0] image_input_q0;
wire   [9:0] image_input_address1;
reg    image_input_ce1;
reg   [13:0] layer_2_output_address0;
reg    layer_2_output_ce0;
reg    layer_2_output_we0;
reg   [31:0] layer_2_output_d0;
wire   [31:0] layer_2_output_q0;
reg    layer_2_output_ce1;
wire   [31:0] layer_2_output_q1;
reg   [11:0] layer_3_output_address0;
reg    layer_3_output_ce0;
reg    layer_3_output_we0;
reg   [31:0] layer_3_output_d0;
wire   [31:0] layer_3_output_q0;
reg   [11:0] layer_4_output_address0;
reg    layer_4_output_ce0;
reg    layer_4_output_we0;
reg   [31:0] layer_4_output_d0;
wire   [31:0] layer_4_output_q0;
reg    layer_4_output_ce1;
wire   [31:0] layer_4_output_q1;
reg   [8:0] layer_5_output_address0;
reg    layer_5_output_ce0;
reg    layer_5_output_we0;
reg   [31:0] layer_5_output_d0;
wire   [31:0] layer_5_output_q0;
reg   [6:0] layer_6_output_address0;
reg    layer_6_output_ce0;
reg    layer_6_output_we0;
reg   [31:0] layer_6_output_d0;
wire   [31:0] layer_6_output_q0;
reg    layer_6_output_ce1;
wire   [31:0] layer_6_output_q1;
reg   [4:0] layer_7_output_address0;
reg    layer_7_output_ce0;
reg    layer_7_output_we0;
reg   [31:0] layer_7_output_d0;
reg   [5:0] layer_9_output_address0;
reg    layer_9_output_ce0;
reg    layer_9_output_we0;
reg   [31:0] layer_9_output_d0;
reg   [4:0] layer_10_output_address0;
reg    layer_10_output_ce0;
reg    layer_10_output_we0;
reg   [31:0] layer_10_output_d0;
reg   [3:0] layer_11_output_address0;
reg    layer_11_output_ce0;
reg    layer_11_output_we0;
reg   [31:0] layer_11_output_d0;
wire    grp_dense_relu_fu_670_ap_start;
wire    grp_dense_relu_fu_670_ap_idle;
wire   [3:0] grp_dense_relu_fu_670_input_r_address0;
wire    grp_dense_relu_fu_670_input_r_ce0;
wire   [31:0] grp_dense_relu_fu_670_ap_return_0;
wire   [31:0] grp_dense_relu_fu_670_ap_return_1;
wire   [31:0] grp_dense_relu_fu_670_ap_return_2;
wire   [31:0] grp_dense_relu_fu_670_ap_return_3;
wire   [31:0] grp_dense_relu_fu_670_grp_fu_763_p_din0;
wire   [31:0] grp_dense_relu_fu_670_grp_fu_763_p_din1;
wire   [1:0] grp_dense_relu_fu_670_grp_fu_763_p_opcode;
wire   [31:0] grp_dense_relu_fu_670_grp_fu_763_p_dout0;
wire    grp_dense_relu_fu_670_grp_fu_763_p_ce;
wire   [31:0] grp_dense_relu_fu_670_grp_fu_770_p_din0;
wire   [31:0] grp_dense_relu_fu_670_grp_fu_770_p_din1;
wire   [31:0] grp_dense_relu_fu_670_grp_fu_770_p_dout0;
wire    grp_dense_relu_fu_670_grp_fu_770_p_ce;
wire   [31:0] grp_dense_relu_fu_670_grp_fu_788_p_din0;
wire   [31:0] grp_dense_relu_fu_670_grp_fu_788_p_din1;
wire   [4:0] grp_dense_relu_fu_670_grp_fu_788_p_opcode;
wire   [0:0] grp_dense_relu_fu_670_grp_fu_788_p_dout0;
wire    grp_dense_relu_fu_670_grp_fu_788_p_ce;
wire    grp_conv2d_2_fu_685_ap_start;
wire    grp_conv2d_2_fu_685_ap_done;
wire    grp_conv2d_2_fu_685_ap_idle;
wire    grp_conv2d_2_fu_685_ap_ready;
wire   [9:0] grp_conv2d_2_fu_685_input_r_address0;
wire    grp_conv2d_2_fu_685_input_r_ce0;
wire   [13:0] grp_conv2d_2_fu_685_output_r_address0;
wire    grp_conv2d_2_fu_685_output_r_ce0;
wire    grp_conv2d_2_fu_685_output_r_we0;
wire   [31:0] grp_conv2d_2_fu_685_output_r_d0;
wire   [31:0] grp_conv2d_2_fu_685_grp_fu_763_p_din0;
wire   [31:0] grp_conv2d_2_fu_685_grp_fu_763_p_din1;
wire   [1:0] grp_conv2d_2_fu_685_grp_fu_763_p_opcode;
wire   [31:0] grp_conv2d_2_fu_685_grp_fu_763_p_dout0;
wire    grp_conv2d_2_fu_685_grp_fu_763_p_ce;
wire   [31:0] grp_conv2d_2_fu_685_grp_fu_770_p_din0;
wire   [31:0] grp_conv2d_2_fu_685_grp_fu_770_p_din1;
wire   [31:0] grp_conv2d_2_fu_685_grp_fu_770_p_dout0;
wire    grp_conv2d_2_fu_685_grp_fu_770_p_ce;
wire   [31:0] grp_conv2d_2_fu_685_grp_fu_788_p_din0;
wire   [31:0] grp_conv2d_2_fu_685_grp_fu_788_p_din1;
wire   [4:0] grp_conv2d_2_fu_685_grp_fu_788_p_opcode;
wire   [0:0] grp_conv2d_2_fu_685_grp_fu_788_p_dout0;
wire    grp_conv2d_2_fu_685_grp_fu_788_p_ce;
wire    grp_conv2d_1_fu_695_ap_start;
wire    grp_conv2d_1_fu_695_ap_done;
wire    grp_conv2d_1_fu_695_ap_idle;
wire    grp_conv2d_1_fu_695_ap_ready;
wire   [11:0] grp_conv2d_1_fu_695_input_r_address0;
wire    grp_conv2d_1_fu_695_input_r_ce0;
wire   [11:0] grp_conv2d_1_fu_695_output_r_address0;
wire    grp_conv2d_1_fu_695_output_r_ce0;
wire    grp_conv2d_1_fu_695_output_r_we0;
wire   [31:0] grp_conv2d_1_fu_695_output_r_d0;
wire   [31:0] grp_conv2d_1_fu_695_grp_fu_763_p_din0;
wire   [31:0] grp_conv2d_1_fu_695_grp_fu_763_p_din1;
wire   [1:0] grp_conv2d_1_fu_695_grp_fu_763_p_opcode;
wire   [31:0] grp_conv2d_1_fu_695_grp_fu_763_p_dout0;
wire    grp_conv2d_1_fu_695_grp_fu_763_p_ce;
wire   [31:0] grp_conv2d_1_fu_695_grp_fu_770_p_din0;
wire   [31:0] grp_conv2d_1_fu_695_grp_fu_770_p_din1;
wire   [31:0] grp_conv2d_1_fu_695_grp_fu_770_p_dout0;
wire    grp_conv2d_1_fu_695_grp_fu_770_p_ce;
wire   [31:0] grp_conv2d_1_fu_695_grp_fu_788_p_din0;
wire   [31:0] grp_conv2d_1_fu_695_grp_fu_788_p_din1;
wire   [4:0] grp_conv2d_1_fu_695_grp_fu_788_p_opcode;
wire   [0:0] grp_conv2d_1_fu_695_grp_fu_788_p_dout0;
wire    grp_conv2d_1_fu_695_grp_fu_788_p_ce;
wire    grp_conv2d_fu_705_ap_start;
wire    grp_conv2d_fu_705_ap_done;
wire    grp_conv2d_fu_705_ap_idle;
wire    grp_conv2d_fu_705_ap_ready;
wire   [8:0] grp_conv2d_fu_705_input_r_address0;
wire    grp_conv2d_fu_705_input_r_ce0;
wire   [6:0] grp_conv2d_fu_705_output_r_address0;
wire    grp_conv2d_fu_705_output_r_ce0;
wire    grp_conv2d_fu_705_output_r_we0;
wire   [31:0] grp_conv2d_fu_705_output_r_d0;
wire   [31:0] grp_conv2d_fu_705_grp_fu_763_p_din0;
wire   [31:0] grp_conv2d_fu_705_grp_fu_763_p_din1;
wire   [1:0] grp_conv2d_fu_705_grp_fu_763_p_opcode;
wire   [31:0] grp_conv2d_fu_705_grp_fu_763_p_dout0;
wire    grp_conv2d_fu_705_grp_fu_763_p_ce;
wire   [31:0] grp_conv2d_fu_705_grp_fu_770_p_din0;
wire   [31:0] grp_conv2d_fu_705_grp_fu_770_p_din1;
wire   [31:0] grp_conv2d_fu_705_grp_fu_770_p_dout0;
wire    grp_conv2d_fu_705_grp_fu_770_p_ce;
wire   [31:0] grp_conv2d_fu_705_grp_fu_788_p_din0;
wire   [31:0] grp_conv2d_fu_705_grp_fu_788_p_din1;
wire   [4:0] grp_conv2d_fu_705_grp_fu_788_p_opcode;
wire   [0:0] grp_conv2d_fu_705_grp_fu_788_p_dout0;
wire    grp_conv2d_fu_705_grp_fu_788_p_ce;
wire    grp_max_pooling2d_2_fu_715_ap_start;
wire    grp_max_pooling2d_2_fu_715_ap_done;
wire    grp_max_pooling2d_2_fu_715_ap_idle;
wire    grp_max_pooling2d_2_fu_715_ap_ready;
wire   [13:0] grp_max_pooling2d_2_fu_715_input_r_address0;
wire    grp_max_pooling2d_2_fu_715_input_r_ce0;
wire   [13:0] grp_max_pooling2d_2_fu_715_input_r_address1;
wire    grp_max_pooling2d_2_fu_715_input_r_ce1;
wire   [11:0] grp_max_pooling2d_2_fu_715_output_r_address0;
wire    grp_max_pooling2d_2_fu_715_output_r_ce0;
wire    grp_max_pooling2d_2_fu_715_output_r_we0;
wire   [31:0] grp_max_pooling2d_2_fu_715_output_r_d0;
wire   [31:0] grp_max_pooling2d_2_fu_715_grp_fu_788_p_din0;
wire   [31:0] grp_max_pooling2d_2_fu_715_grp_fu_788_p_din1;
wire   [4:0] grp_max_pooling2d_2_fu_715_grp_fu_788_p_opcode;
wire   [0:0] grp_max_pooling2d_2_fu_715_grp_fu_788_p_dout0;
wire    grp_max_pooling2d_2_fu_715_grp_fu_788_p_ce;
wire   [31:0] grp_max_pooling2d_2_fu_715_grp_fu_1839_p_din0;
wire   [31:0] grp_max_pooling2d_2_fu_715_grp_fu_1839_p_din1;
wire   [4:0] grp_max_pooling2d_2_fu_715_grp_fu_1839_p_opcode;
wire   [0:0] grp_max_pooling2d_2_fu_715_grp_fu_1839_p_dout0;
wire    grp_max_pooling2d_2_fu_715_grp_fu_1839_p_ce;
wire    grp_max_pooling2d_1_fu_721_ap_start;
wire    grp_max_pooling2d_1_fu_721_ap_done;
wire    grp_max_pooling2d_1_fu_721_ap_idle;
wire    grp_max_pooling2d_1_fu_721_ap_ready;
wire   [11:0] grp_max_pooling2d_1_fu_721_input_r_address0;
wire    grp_max_pooling2d_1_fu_721_input_r_ce0;
wire   [11:0] grp_max_pooling2d_1_fu_721_input_r_address1;
wire    grp_max_pooling2d_1_fu_721_input_r_ce1;
wire   [8:0] grp_max_pooling2d_1_fu_721_output_r_address0;
wire    grp_max_pooling2d_1_fu_721_output_r_ce0;
wire    grp_max_pooling2d_1_fu_721_output_r_we0;
wire   [31:0] grp_max_pooling2d_1_fu_721_output_r_d0;
wire   [31:0] grp_max_pooling2d_1_fu_721_grp_fu_788_p_din0;
wire   [31:0] grp_max_pooling2d_1_fu_721_grp_fu_788_p_din1;
wire   [4:0] grp_max_pooling2d_1_fu_721_grp_fu_788_p_opcode;
wire   [0:0] grp_max_pooling2d_1_fu_721_grp_fu_788_p_dout0;
wire    grp_max_pooling2d_1_fu_721_grp_fu_788_p_ce;
wire   [31:0] grp_max_pooling2d_1_fu_721_grp_fu_1839_p_din0;
wire   [31:0] grp_max_pooling2d_1_fu_721_grp_fu_1839_p_din1;
wire   [4:0] grp_max_pooling2d_1_fu_721_grp_fu_1839_p_opcode;
wire   [0:0] grp_max_pooling2d_1_fu_721_grp_fu_1839_p_dout0;
wire    grp_max_pooling2d_1_fu_721_grp_fu_1839_p_ce;
wire    grp_max_pooling2d_fu_727_ap_start;
wire    grp_max_pooling2d_fu_727_ap_done;
wire    grp_max_pooling2d_fu_727_ap_idle;
wire    grp_max_pooling2d_fu_727_ap_ready;
wire   [6:0] grp_max_pooling2d_fu_727_input_r_address0;
wire    grp_max_pooling2d_fu_727_input_r_ce0;
wire   [6:0] grp_max_pooling2d_fu_727_input_r_address1;
wire    grp_max_pooling2d_fu_727_input_r_ce1;
wire   [4:0] grp_max_pooling2d_fu_727_output_r_address0;
wire    grp_max_pooling2d_fu_727_output_r_ce0;
wire    grp_max_pooling2d_fu_727_output_r_we0;
wire   [31:0] grp_max_pooling2d_fu_727_output_r_d0;
wire   [31:0] grp_max_pooling2d_fu_727_grp_fu_788_p_din0;
wire   [31:0] grp_max_pooling2d_fu_727_grp_fu_788_p_din1;
wire   [4:0] grp_max_pooling2d_fu_727_grp_fu_788_p_opcode;
wire   [0:0] grp_max_pooling2d_fu_727_grp_fu_788_p_dout0;
wire    grp_max_pooling2d_fu_727_grp_fu_788_p_ce;
wire   [31:0] grp_max_pooling2d_fu_727_grp_fu_1839_p_din0;
wire   [31:0] grp_max_pooling2d_fu_727_grp_fu_1839_p_din1;
wire   [4:0] grp_max_pooling2d_fu_727_grp_fu_1839_p_opcode;
wire   [0:0] grp_max_pooling2d_fu_727_grp_fu_1839_p_dout0;
wire    grp_max_pooling2d_fu_727_grp_fu_1839_p_ce;
wire    grp_set3DFloatArray_5_fu_733_ap_start;
wire    grp_set3DFloatArray_5_fu_733_ap_done;
wire    grp_set3DFloatArray_5_fu_733_ap_idle;
wire    grp_set3DFloatArray_5_fu_733_ap_ready;
wire   [13:0] grp_set3DFloatArray_5_fu_733_array_r_address0;
wire    grp_set3DFloatArray_5_fu_733_array_r_ce0;
wire    grp_set3DFloatArray_5_fu_733_array_r_we0;
wire   [31:0] grp_set3DFloatArray_5_fu_733_array_r_d0;
wire    grp_set3DFloatArray_3_fu_738_ap_start;
wire    grp_set3DFloatArray_3_fu_738_ap_done;
wire    grp_set3DFloatArray_3_fu_738_ap_idle;
wire    grp_set3DFloatArray_3_fu_738_ap_ready;
wire   [11:0] grp_set3DFloatArray_3_fu_738_array_r_address0;
wire    grp_set3DFloatArray_3_fu_738_array_r_ce0;
wire    grp_set3DFloatArray_3_fu_738_array_r_we0;
wire   [31:0] grp_set3DFloatArray_3_fu_738_array_r_d0;
wire    grp_set3DFloatArray_4_fu_743_ap_start;
wire    grp_set3DFloatArray_4_fu_743_ap_done;
wire    grp_set3DFloatArray_4_fu_743_ap_idle;
wire    grp_set3DFloatArray_4_fu_743_ap_ready;
wire   [11:0] grp_set3DFloatArray_4_fu_743_array_r_address0;
wire    grp_set3DFloatArray_4_fu_743_array_r_ce0;
wire    grp_set3DFloatArray_4_fu_743_array_r_we0;
wire   [31:0] grp_set3DFloatArray_4_fu_743_array_r_d0;
wire    grp_set3DFloatArray_2_fu_748_ap_start;
wire    grp_set3DFloatArray_2_fu_748_ap_done;
wire    grp_set3DFloatArray_2_fu_748_ap_idle;
wire    grp_set3DFloatArray_2_fu_748_ap_ready;
wire   [8:0] grp_set3DFloatArray_2_fu_748_array_r_address0;
wire    grp_set3DFloatArray_2_fu_748_array_r_ce0;
wire    grp_set3DFloatArray_2_fu_748_array_r_we0;
wire   [31:0] grp_set3DFloatArray_2_fu_748_array_r_d0;
wire    grp_set3DFloatArray_1_fu_753_ap_start;
wire    grp_set3DFloatArray_1_fu_753_ap_done;
wire    grp_set3DFloatArray_1_fu_753_ap_idle;
wire    grp_set3DFloatArray_1_fu_753_ap_ready;
wire   [6:0] grp_set3DFloatArray_1_fu_753_array_r_address0;
wire    grp_set3DFloatArray_1_fu_753_array_r_ce0;
wire    grp_set3DFloatArray_1_fu_753_array_r_we0;
wire   [31:0] grp_set3DFloatArray_1_fu_753_array_r_d0;
wire    grp_set3DFloatArray_fu_758_ap_start;
wire    grp_set3DFloatArray_fu_758_ap_done;
wire    grp_set3DFloatArray_fu_758_ap_idle;
wire    grp_set3DFloatArray_fu_758_ap_ready;
wire   [4:0] grp_set3DFloatArray_fu_758_array_r_address0;
wire    grp_set3DFloatArray_fu_758_array_r_ce0;
wire    grp_set3DFloatArray_fu_758_array_r_we0;
wire   [31:0] grp_set3DFloatArray_fu_758_array_r_d0;
reg   [9:0] ap_phi_mux_i_phi_fu_426_p4;
reg   [6:0] i_3_reg_467;
wire   [0:0] icmp_ln22_fu_967_p2;
wire    ap_CS_fsm_state36;
reg   [6:0] i_4_reg_478;
wire    ap_CS_fsm_state58;
wire    ap_CS_fsm_state38;
reg   [5:0] ap_phi_mux_ii_4_phi_fu_494_p4;
wire    ap_block_pp3_stage0;
reg   [31:0] ap_phi_mux_add108_i_phi_fu_504_p4;
wire    ap_block_pp3_stage1;
reg   [5:0] i_5_reg_511;
wire   [0:0] icmp_ln22_1_fu_1102_p2;
reg   [5:0] i_9_reg_522;
wire    ap_CS_fsm_state80;
wire    ap_CS_fsm_state60;
reg   [6:0] ap_phi_mux_ii_5_phi_fu_538_p4;
wire    ap_block_pp5_stage0;
reg   [31:0] ap_phi_mux_add108_i22667_phi_fu_549_p4;
wire    ap_block_pp5_stage1;
reg   [4:0] i_6_reg_556;
wire   [0:0] icmp_ln22_2_fu_1237_p2;
reg   [4:0] i_10_reg_567;
wire    ap_CS_fsm_state102;
wire    ap_CS_fsm_state82;
reg   [5:0] ap_phi_mux_ii_6_phi_fu_583_p4;
wire    ap_block_pp7_stage0;
reg   [31:0] ap_phi_mux_add108_i22688_phi_fu_593_p4;
wire    ap_block_pp7_stage1;
reg   [31:0] layer_12_output_3_0_reg_600;
reg   [31:0] layer_12_output_2_0_reg_612;
reg   [31:0] layer_12_output_1_0_reg_624;
reg   [31:0] layer_12_output_0_0_reg_636;
reg   [2:0] i_7_reg_648;
reg    grp_dense_relu_fu_670_ap_start_reg;
wire    ap_CS_fsm_state104;
reg    grp_conv2d_2_fu_685_ap_start_reg;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state26;
reg    grp_conv2d_1_fu_695_ap_start_reg;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state30;
reg    grp_conv2d_fu_705_ap_start_reg;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state34;
reg    grp_max_pooling2d_2_fu_715_ap_start_reg;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state28;
reg    grp_max_pooling2d_1_fu_721_ap_start_reg;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state32;
reg    grp_max_pooling2d_fu_727_ap_start_reg;
wire    ap_CS_fsm_state35;
reg    grp_set3DFloatArray_5_fu_733_ap_start_reg;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state24;
reg    grp_set3DFloatArray_3_fu_738_ap_start_reg;
reg    grp_set3DFloatArray_4_fu_743_ap_start_reg;
reg    grp_set3DFloatArray_2_fu_748_ap_start_reg;
reg    grp_set3DFloatArray_1_fu_753_ap_start_reg;
reg    grp_set3DFloatArray_fu_758_ap_start_reg;
wire   [63:0] i_cast_fu_835_p1;
wire   [63:0] zext_ln37_fu_950_p1;
wire    ap_block_pp1_stage0;
wire   [63:0] i_4_cast_fu_973_p1;
wire   [63:0] zext_ln157_fu_990_p1;
wire   [63:0] ii_4_cast8_fu_1012_p1;
wire   [63:0] zext_ln161_fu_1034_p1;
wire   [63:0] i_5_cast_fu_1108_p1;
wire   [63:0] zext_ln157_2_fu_1125_p1;
wire   [63:0] ii_5_cast10_fu_1141_p1;
wire   [63:0] zext_ln161_1_fu_1163_p1;
wire   [63:0] i_6_cast_fu_1243_p1;
wire   [63:0] zext_ln157_4_fu_1260_p1;
wire   [63:0] ii_6_cast11_fu_1282_p1;
wire   [63:0] zext_ln161_2_fu_1304_p1;
reg    ap_block_pp9_stage0_01001;
wire   [31:0] select_ln49_fu_1087_p3;
wire   [31:0] select_ln49_1_fu_1222_p3;
wire   [31:0] select_ln49_2_fu_1357_p3;
reg   [31:0] grp_fu_763_p0;
reg   [31:0] grp_fu_763_p1;
wire    ap_block_pp3_stage2;
wire    ap_block_pp5_stage2;
wire    ap_block_pp7_stage2;
reg   [31:0] grp_fu_770_p0;
reg   [31:0] grp_fu_770_p1;
reg   [31:0] grp_fu_788_p0;
reg   [31:0] grp_fu_788_p1;
wire    ap_block_pp3_stage3;
wire    ap_block_pp5_stage3;
wire    ap_block_pp7_stage3;
wire   [7:0] p_shl1_fu_854_p3;
wire   [9:0] p_shl_fu_846_p3;
wire   [9:0] p_shl22625_cast_fu_862_p1;
wire   [0:0] icmp_ln33_fu_878_p2;
wire   [4:0] add_ln31_1_fu_892_p2;
wire   [7:0] p_shl22625_mid1_fu_906_p3;
wire   [9:0] p_shl_mid1_fu_898_p3;
wire   [9:0] p_shl22625_cast_mid1_fu_914_p1;
wire   [9:0] p_mid1_fu_918_p2;
wire   [9:0] empty_38_fu_866_p2;
wire   [4:0] select_ln31_fu_884_p3;
wire   [9:0] ii_cast_fu_940_p1;
wire   [9:0] select_ln31_1_fu_924_p3;
wire   [9:0] empty_40_fu_944_p2;
wire   [4:0] trunc_ln161_fu_1017_p1;
wire   [10:0] shl_ln_fu_1021_p3;
wire   [10:0] add_ln161_fu_1029_p2;
wire   [31:0] bitcast_ln49_fu_1045_p1;
wire   [7:0] tmp_fu_1049_p4;
wire   [22:0] trunc_ln49_fu_1059_p1;
wire   [0:0] icmp_ln49_1_fu_1069_p2;
wire   [0:0] icmp_ln49_fu_1063_p2;
wire   [0:0] or_ln49_fu_1075_p2;
wire   [0:0] grp_fu_788_p2;
wire   [0:0] and_ln49_fu_1081_p2;
wire   [5:0] trunc_ln161_1_fu_1146_p1;
wire   [10:0] shl_ln161_1_fu_1150_p3;
wire   [10:0] add_ln161_1_fu_1158_p2;
wire   [31:0] bitcast_ln49_1_fu_1180_p1;
wire   [7:0] tmp_38_fu_1184_p4;
wire   [22:0] trunc_ln49_1_fu_1194_p1;
wire   [0:0] icmp_ln49_3_fu_1204_p2;
wire   [0:0] icmp_ln49_2_fu_1198_p2;
wire   [0:0] or_ln49_1_fu_1210_p2;
wire   [0:0] and_ln49_1_fu_1216_p2;
wire   [4:0] trunc_ln161_2_fu_1287_p1;
wire   [8:0] shl_ln161_2_fu_1291_p3;
wire   [8:0] add_ln161_2_fu_1299_p2;
wire   [31:0] bitcast_ln49_2_fu_1315_p1;
wire   [7:0] tmp_40_fu_1319_p4;
wire   [22:0] trunc_ln49_2_fu_1329_p1;
wire   [0:0] icmp_ln49_5_fu_1339_p2;
wire   [0:0] icmp_ln49_4_fu_1333_p2;
wire   [0:0] or_ln49_2_fu_1345_p2;
wire   [0:0] and_ln49_2_fu_1351_p2;
wire   [1:0] trunc_ln24_fu_1378_p1;
wire   [0:0] icmp_ln24_fu_1382_p2;
wire   [0:0] icmp_ln24_1_fu_1396_p2;
wire   [31:0] select_ln24_fu_1388_p3;
wire   [0:0] icmp_ln24_2_fu_1410_p2;
wire   [31:0] select_ln24_1_fu_1402_p3;
wire   [31:0] select_ln24_2_fu_1424_p3;
wire   [31:0] select_ln24_3_fu_1448_p3;
wire   [31:0] select_ln24_4_fu_1456_p3;
wire   [31:0] tmp_42_fu_1504_p6;
reg    grp_fu_763_ce;
reg    grp_fu_770_ce;
reg    grp_fu_785_ce;
reg    grp_fu_788_ce;
reg   [4:0] grp_fu_788_opcode;
wire    ap_block_pp3_stage3_00001;
wire    ap_block_pp5_stage3_00001;
wire    ap_block_pp7_stage3_00001;
wire   [0:0] grp_fu_1839_p2;
reg   [31:0] grp_fu_1839_p0;
reg   [31:0] grp_fu_1839_p1;
reg    grp_fu_1839_ce;
reg   [4:0] grp_fu_1839_opcode;
wire    ap_CS_fsm_state108;
reg   [49:0] ap_NS_fsm;
reg    ap_block_state24_on_subcall_done;
wire    ap_block_pp3_stage1_subdone;
wire    ap_block_pp3_stage2_subdone;
wire    ap_block_pp3_stage3_11001;
wire    ap_block_pp5_stage1_subdone;
wire    ap_block_pp5_stage2_subdone;
wire    ap_block_pp7_stage1_subdone;
wire    ap_block_pp7_stage2_subdone;
wire    ap_block_pp7_stage3_11001;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp5;
wire    ap_enable_pp5;
reg    ap_idle_pp7;
wire    ap_enable_pp7;
reg    ap_idle_pp9;
wire    ap_enable_pp9;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 50'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp9_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
#0 ap_enable_reg_pp7_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp5_iter2 = 1'b0;
#0 ap_enable_reg_pp7_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter3 = 1'b0;
#0 ap_enable_reg_pp5_iter3 = 1'b0;
#0 ap_enable_reg_pp7_iter3 = 1'b0;
#0 ap_enable_reg_pp7_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp9_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 ap_enable_reg_pp1_iter6 = 1'b0;
#0 ap_enable_reg_pp1_iter7 = 1'b0;
#0 ap_enable_reg_pp1_iter8 = 1'b0;
#0 ap_enable_reg_pp1_iter9 = 1'b0;
#0 ap_enable_reg_pp1_iter10 = 1'b0;
#0 ap_enable_reg_pp1_iter11 = 1'b0;
#0 ap_enable_reg_pp1_iter12 = 1'b0;
#0 ap_enable_reg_pp3_iter4 = 1'b0;
#0 ap_enable_reg_pp5_iter4 = 1'b0;
#0 ap_enable_reg_pp7_iter4 = 1'b0;
#0 grp_dense_relu_fu_670_ap_start_reg = 1'b0;
#0 grp_conv2d_2_fu_685_ap_start_reg = 1'b0;
#0 grp_conv2d_1_fu_695_ap_start_reg = 1'b0;
#0 grp_conv2d_fu_705_ap_start_reg = 1'b0;
#0 grp_max_pooling2d_2_fu_715_ap_start_reg = 1'b0;
#0 grp_max_pooling2d_1_fu_721_ap_start_reg = 1'b0;
#0 grp_max_pooling2d_fu_727_ap_start_reg = 1'b0;
#0 grp_set3DFloatArray_5_fu_733_ap_start_reg = 1'b0;
#0 grp_set3DFloatArray_3_fu_738_ap_start_reg = 1'b0;
#0 grp_set3DFloatArray_4_fu_743_ap_start_reg = 1'b0;
#0 grp_set3DFloatArray_2_fu_748_ap_start_reg = 1'b0;
#0 grp_set3DFloatArray_1_fu_753_ap_start_reg = 1'b0;
#0 grp_set3DFloatArray_fu_758_ap_start_reg = 1'b0;
end

infer_layer_9_bias #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer_9_bias_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer_9_bias_address0),
    .ce0(layer_9_bias_ce0),
    .q0(layer_9_bias_q0)
);

infer_layer_9_weights #(
    .DataWidth( 32 ),
    .AddressRange( 2048 ),
    .AddressWidth( 11 ))
layer_9_weights_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer_9_weights_address0),
    .ce0(layer_9_weights_ce0),
    .q0(layer_9_weights_q0)
);

infer_layer_10_bias #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
layer_10_bias_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer_10_bias_address0),
    .ce0(layer_10_bias_ce0),
    .q0(layer_10_bias_q0)
);

infer_layer_10_weights #(
    .DataWidth( 32 ),
    .AddressRange( 2048 ),
    .AddressWidth( 11 ))
layer_10_weights_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer_10_weights_address0),
    .ce0(layer_10_weights_ce0),
    .q0(layer_10_weights_q0)
);

infer_layer_11_bias #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
layer_11_bias_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer_11_bias_address0),
    .ce0(layer_11_bias_ce0),
    .q0(layer_11_bias_q0)
);

infer_layer_11_weights #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
layer_11_weights_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer_11_weights_address0),
    .ce0(layer_11_weights_ce0),
    .q0(layer_11_weights_q0)
);

infer_image_input #(
    .DataWidth( 32 ),
    .AddressRange( 576 ),
    .AddressWidth( 10 ))
image_input_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(image_input_address0),
    .ce0(image_input_ce0),
    .we0(image_input_we0),
    .d0(image_input_d0),
    .q0(image_input_q0),
    .address1(image_input_address1),
    .ce1(image_input_ce1),
    .q1(image_input_q1)
);

infer_layer_2_output #(
    .DataWidth( 32 ),
    .AddressRange( 15488 ),
    .AddressWidth( 14 ))
layer_2_output_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer_2_output_address0),
    .ce0(layer_2_output_ce0),
    .we0(layer_2_output_we0),
    .d0(layer_2_output_d0),
    .q0(layer_2_output_q0),
    .address1(grp_max_pooling2d_2_fu_715_input_r_address1),
    .ce1(layer_2_output_ce1),
    .q1(layer_2_output_q1)
);

infer_layer_3_output #(
    .DataWidth( 32 ),
    .AddressRange( 3872 ),
    .AddressWidth( 12 ))
layer_3_output_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer_3_output_address0),
    .ce0(layer_3_output_ce0),
    .we0(layer_3_output_we0),
    .d0(layer_3_output_d0),
    .q0(layer_3_output_q0)
);

infer_layer_4_output #(
    .DataWidth( 32 ),
    .AddressRange( 2592 ),
    .AddressWidth( 12 ))
layer_4_output_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer_4_output_address0),
    .ce0(layer_4_output_ce0),
    .we0(layer_4_output_we0),
    .d0(layer_4_output_d0),
    .q0(layer_4_output_q0),
    .address1(grp_max_pooling2d_1_fu_721_input_r_address1),
    .ce1(layer_4_output_ce1),
    .q1(layer_4_output_q1)
);

infer_layer_5_output #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
layer_5_output_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer_5_output_address0),
    .ce0(layer_5_output_ce0),
    .we0(layer_5_output_we0),
    .d0(layer_5_output_d0),
    .q0(layer_5_output_q0)
);

infer_layer_6_output #(
    .DataWidth( 32 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
layer_6_output_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer_6_output_address0),
    .ce0(layer_6_output_ce0),
    .we0(layer_6_output_we0),
    .d0(layer_6_output_d0),
    .q0(layer_6_output_q0),
    .address1(grp_max_pooling2d_fu_727_input_r_address1),
    .ce1(layer_6_output_ce1),
    .q1(layer_6_output_q1)
);

infer_layer_7_output #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
layer_7_output_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer_7_output_address0),
    .ce0(layer_7_output_ce0),
    .we0(layer_7_output_we0),
    .d0(layer_7_output_d0),
    .q0(layer_7_output_q0)
);

infer_layer_9_output #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
layer_9_output_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer_9_output_address0),
    .ce0(layer_9_output_ce0),
    .we0(layer_9_output_we0),
    .d0(layer_9_output_d0),
    .q0(layer_9_output_q0)
);

infer_layer_7_output #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
layer_10_output_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer_10_output_address0),
    .ce0(layer_10_output_ce0),
    .we0(layer_10_output_we0),
    .d0(layer_10_output_d0),
    .q0(layer_10_output_q0)
);

infer_layer_11_output #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
layer_11_output_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer_11_output_address0),
    .ce0(layer_11_output_ce0),
    .we0(layer_11_output_we0),
    .d0(layer_11_output_d0),
    .q0(layer_11_output_q0)
);

infer_dense_relu grp_dense_relu_fu_670(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dense_relu_fu_670_ap_start),
    .ap_done(grp_dense_relu_fu_670_ap_done),
    .ap_idle(grp_dense_relu_fu_670_ap_idle),
    .ap_ready(grp_dense_relu_fu_670_ap_ready),
    .input_r_address0(grp_dense_relu_fu_670_input_r_address0),
    .input_r_ce0(grp_dense_relu_fu_670_input_r_ce0),
    .input_r_q0(layer_11_output_q0),
    .output_0_read(layer_12_output_0_0_reg_636),
    .output_1_read(layer_12_output_1_0_reg_624),
    .output_2_read(layer_12_output_2_0_reg_612),
    .output_3_read(layer_12_output_3_0_reg_600),
    .ap_return_0(grp_dense_relu_fu_670_ap_return_0),
    .ap_return_1(grp_dense_relu_fu_670_ap_return_1),
    .ap_return_2(grp_dense_relu_fu_670_ap_return_2),
    .ap_return_3(grp_dense_relu_fu_670_ap_return_3),
    .grp_fu_763_p_din0(grp_dense_relu_fu_670_grp_fu_763_p_din0),
    .grp_fu_763_p_din1(grp_dense_relu_fu_670_grp_fu_763_p_din1),
    .grp_fu_763_p_opcode(grp_dense_relu_fu_670_grp_fu_763_p_opcode),
    .grp_fu_763_p_dout0(grp_dense_relu_fu_670_grp_fu_763_p_dout0),
    .grp_fu_763_p_ce(grp_dense_relu_fu_670_grp_fu_763_p_ce),
    .grp_fu_770_p_din0(grp_dense_relu_fu_670_grp_fu_770_p_din0),
    .grp_fu_770_p_din1(grp_dense_relu_fu_670_grp_fu_770_p_din1),
    .grp_fu_770_p_dout0(grp_dense_relu_fu_670_grp_fu_770_p_dout0),
    .grp_fu_770_p_ce(grp_dense_relu_fu_670_grp_fu_770_p_ce),
    .grp_fu_788_p_din0(grp_dense_relu_fu_670_grp_fu_788_p_din0),
    .grp_fu_788_p_din1(grp_dense_relu_fu_670_grp_fu_788_p_din1),
    .grp_fu_788_p_opcode(grp_dense_relu_fu_670_grp_fu_788_p_opcode),
    .grp_fu_788_p_dout0(grp_dense_relu_fu_670_grp_fu_788_p_dout0),
    .grp_fu_788_p_ce(grp_dense_relu_fu_670_grp_fu_788_p_ce)
);

infer_conv2d_2 grp_conv2d_2_fu_685(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_conv2d_2_fu_685_ap_start),
    .ap_done(grp_conv2d_2_fu_685_ap_done),
    .ap_idle(grp_conv2d_2_fu_685_ap_idle),
    .ap_ready(grp_conv2d_2_fu_685_ap_ready),
    .input_r_address0(grp_conv2d_2_fu_685_input_r_address0),
    .input_r_ce0(grp_conv2d_2_fu_685_input_r_ce0),
    .input_r_q0(image_input_q0),
    .output_r_address0(grp_conv2d_2_fu_685_output_r_address0),
    .output_r_ce0(grp_conv2d_2_fu_685_output_r_ce0),
    .output_r_we0(grp_conv2d_2_fu_685_output_r_we0),
    .output_r_d0(grp_conv2d_2_fu_685_output_r_d0),
    .output_r_q0(layer_2_output_q0),
    .grp_fu_763_p_din0(grp_conv2d_2_fu_685_grp_fu_763_p_din0),
    .grp_fu_763_p_din1(grp_conv2d_2_fu_685_grp_fu_763_p_din1),
    .grp_fu_763_p_opcode(grp_conv2d_2_fu_685_grp_fu_763_p_opcode),
    .grp_fu_763_p_dout0(grp_conv2d_2_fu_685_grp_fu_763_p_dout0),
    .grp_fu_763_p_ce(grp_conv2d_2_fu_685_grp_fu_763_p_ce),
    .grp_fu_770_p_din0(grp_conv2d_2_fu_685_grp_fu_770_p_din0),
    .grp_fu_770_p_din1(grp_conv2d_2_fu_685_grp_fu_770_p_din1),
    .grp_fu_770_p_dout0(grp_conv2d_2_fu_685_grp_fu_770_p_dout0),
    .grp_fu_770_p_ce(grp_conv2d_2_fu_685_grp_fu_770_p_ce),
    .grp_fu_788_p_din0(grp_conv2d_2_fu_685_grp_fu_788_p_din0),
    .grp_fu_788_p_din1(grp_conv2d_2_fu_685_grp_fu_788_p_din1),
    .grp_fu_788_p_opcode(grp_conv2d_2_fu_685_grp_fu_788_p_opcode),
    .grp_fu_788_p_dout0(grp_conv2d_2_fu_685_grp_fu_788_p_dout0),
    .grp_fu_788_p_ce(grp_conv2d_2_fu_685_grp_fu_788_p_ce)
);

infer_conv2d_1 grp_conv2d_1_fu_695(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_conv2d_1_fu_695_ap_start),
    .ap_done(grp_conv2d_1_fu_695_ap_done),
    .ap_idle(grp_conv2d_1_fu_695_ap_idle),
    .ap_ready(grp_conv2d_1_fu_695_ap_ready),
    .input_r_address0(grp_conv2d_1_fu_695_input_r_address0),
    .input_r_ce0(grp_conv2d_1_fu_695_input_r_ce0),
    .input_r_q0(layer_3_output_q0),
    .output_r_address0(grp_conv2d_1_fu_695_output_r_address0),
    .output_r_ce0(grp_conv2d_1_fu_695_output_r_ce0),
    .output_r_we0(grp_conv2d_1_fu_695_output_r_we0),
    .output_r_d0(grp_conv2d_1_fu_695_output_r_d0),
    .output_r_q0(layer_4_output_q0),
    .grp_fu_763_p_din0(grp_conv2d_1_fu_695_grp_fu_763_p_din0),
    .grp_fu_763_p_din1(grp_conv2d_1_fu_695_grp_fu_763_p_din1),
    .grp_fu_763_p_opcode(grp_conv2d_1_fu_695_grp_fu_763_p_opcode),
    .grp_fu_763_p_dout0(grp_conv2d_1_fu_695_grp_fu_763_p_dout0),
    .grp_fu_763_p_ce(grp_conv2d_1_fu_695_grp_fu_763_p_ce),
    .grp_fu_770_p_din0(grp_conv2d_1_fu_695_grp_fu_770_p_din0),
    .grp_fu_770_p_din1(grp_conv2d_1_fu_695_grp_fu_770_p_din1),
    .grp_fu_770_p_dout0(grp_conv2d_1_fu_695_grp_fu_770_p_dout0),
    .grp_fu_770_p_ce(grp_conv2d_1_fu_695_grp_fu_770_p_ce),
    .grp_fu_788_p_din0(grp_conv2d_1_fu_695_grp_fu_788_p_din0),
    .grp_fu_788_p_din1(grp_conv2d_1_fu_695_grp_fu_788_p_din1),
    .grp_fu_788_p_opcode(grp_conv2d_1_fu_695_grp_fu_788_p_opcode),
    .grp_fu_788_p_dout0(grp_conv2d_1_fu_695_grp_fu_788_p_dout0),
    .grp_fu_788_p_ce(grp_conv2d_1_fu_695_grp_fu_788_p_ce)
);

infer_conv2d grp_conv2d_fu_705(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_conv2d_fu_705_ap_start),
    .ap_done(grp_conv2d_fu_705_ap_done),
    .ap_idle(grp_conv2d_fu_705_ap_idle),
    .ap_ready(grp_conv2d_fu_705_ap_ready),
    .input_r_address0(grp_conv2d_fu_705_input_r_address0),
    .input_r_ce0(grp_conv2d_fu_705_input_r_ce0),
    .input_r_q0(layer_5_output_q0),
    .output_r_address0(grp_conv2d_fu_705_output_r_address0),
    .output_r_ce0(grp_conv2d_fu_705_output_r_ce0),
    .output_r_we0(grp_conv2d_fu_705_output_r_we0),
    .output_r_d0(grp_conv2d_fu_705_output_r_d0),
    .output_r_q0(layer_6_output_q0),
    .grp_fu_763_p_din0(grp_conv2d_fu_705_grp_fu_763_p_din0),
    .grp_fu_763_p_din1(grp_conv2d_fu_705_grp_fu_763_p_din1),
    .grp_fu_763_p_opcode(grp_conv2d_fu_705_grp_fu_763_p_opcode),
    .grp_fu_763_p_dout0(grp_conv2d_fu_705_grp_fu_763_p_dout0),
    .grp_fu_763_p_ce(grp_conv2d_fu_705_grp_fu_763_p_ce),
    .grp_fu_770_p_din0(grp_conv2d_fu_705_grp_fu_770_p_din0),
    .grp_fu_770_p_din1(grp_conv2d_fu_705_grp_fu_770_p_din1),
    .grp_fu_770_p_dout0(grp_conv2d_fu_705_grp_fu_770_p_dout0),
    .grp_fu_770_p_ce(grp_conv2d_fu_705_grp_fu_770_p_ce),
    .grp_fu_788_p_din0(grp_conv2d_fu_705_grp_fu_788_p_din0),
    .grp_fu_788_p_din1(grp_conv2d_fu_705_grp_fu_788_p_din1),
    .grp_fu_788_p_opcode(grp_conv2d_fu_705_grp_fu_788_p_opcode),
    .grp_fu_788_p_dout0(grp_conv2d_fu_705_grp_fu_788_p_dout0),
    .grp_fu_788_p_ce(grp_conv2d_fu_705_grp_fu_788_p_ce)
);

infer_max_pooling2d_2 grp_max_pooling2d_2_fu_715(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_max_pooling2d_2_fu_715_ap_start),
    .ap_done(grp_max_pooling2d_2_fu_715_ap_done),
    .ap_idle(grp_max_pooling2d_2_fu_715_ap_idle),
    .ap_ready(grp_max_pooling2d_2_fu_715_ap_ready),
    .input_r_address0(grp_max_pooling2d_2_fu_715_input_r_address0),
    .input_r_ce0(grp_max_pooling2d_2_fu_715_input_r_ce0),
    .input_r_q0(layer_2_output_q0),
    .input_r_address1(grp_max_pooling2d_2_fu_715_input_r_address1),
    .input_r_ce1(grp_max_pooling2d_2_fu_715_input_r_ce1),
    .input_r_q1(layer_2_output_q1),
    .output_r_address0(grp_max_pooling2d_2_fu_715_output_r_address0),
    .output_r_ce0(grp_max_pooling2d_2_fu_715_output_r_ce0),
    .output_r_we0(grp_max_pooling2d_2_fu_715_output_r_we0),
    .output_r_d0(grp_max_pooling2d_2_fu_715_output_r_d0),
    .grp_fu_788_p_din0(grp_max_pooling2d_2_fu_715_grp_fu_788_p_din0),
    .grp_fu_788_p_din1(grp_max_pooling2d_2_fu_715_grp_fu_788_p_din1),
    .grp_fu_788_p_opcode(grp_max_pooling2d_2_fu_715_grp_fu_788_p_opcode),
    .grp_fu_788_p_dout0(grp_max_pooling2d_2_fu_715_grp_fu_788_p_dout0),
    .grp_fu_788_p_ce(grp_max_pooling2d_2_fu_715_grp_fu_788_p_ce),
    .grp_fu_1839_p_din0(grp_max_pooling2d_2_fu_715_grp_fu_1839_p_din0),
    .grp_fu_1839_p_din1(grp_max_pooling2d_2_fu_715_grp_fu_1839_p_din1),
    .grp_fu_1839_p_opcode(grp_max_pooling2d_2_fu_715_grp_fu_1839_p_opcode),
    .grp_fu_1839_p_dout0(grp_max_pooling2d_2_fu_715_grp_fu_1839_p_dout0),
    .grp_fu_1839_p_ce(grp_max_pooling2d_2_fu_715_grp_fu_1839_p_ce)
);

infer_max_pooling2d_1 grp_max_pooling2d_1_fu_721(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_max_pooling2d_1_fu_721_ap_start),
    .ap_done(grp_max_pooling2d_1_fu_721_ap_done),
    .ap_idle(grp_max_pooling2d_1_fu_721_ap_idle),
    .ap_ready(grp_max_pooling2d_1_fu_721_ap_ready),
    .input_r_address0(grp_max_pooling2d_1_fu_721_input_r_address0),
    .input_r_ce0(grp_max_pooling2d_1_fu_721_input_r_ce0),
    .input_r_q0(layer_4_output_q0),
    .input_r_address1(grp_max_pooling2d_1_fu_721_input_r_address1),
    .input_r_ce1(grp_max_pooling2d_1_fu_721_input_r_ce1),
    .input_r_q1(layer_4_output_q1),
    .output_r_address0(grp_max_pooling2d_1_fu_721_output_r_address0),
    .output_r_ce0(grp_max_pooling2d_1_fu_721_output_r_ce0),
    .output_r_we0(grp_max_pooling2d_1_fu_721_output_r_we0),
    .output_r_d0(grp_max_pooling2d_1_fu_721_output_r_d0),
    .grp_fu_788_p_din0(grp_max_pooling2d_1_fu_721_grp_fu_788_p_din0),
    .grp_fu_788_p_din1(grp_max_pooling2d_1_fu_721_grp_fu_788_p_din1),
    .grp_fu_788_p_opcode(grp_max_pooling2d_1_fu_721_grp_fu_788_p_opcode),
    .grp_fu_788_p_dout0(grp_max_pooling2d_1_fu_721_grp_fu_788_p_dout0),
    .grp_fu_788_p_ce(grp_max_pooling2d_1_fu_721_grp_fu_788_p_ce),
    .grp_fu_1839_p_din0(grp_max_pooling2d_1_fu_721_grp_fu_1839_p_din0),
    .grp_fu_1839_p_din1(grp_max_pooling2d_1_fu_721_grp_fu_1839_p_din1),
    .grp_fu_1839_p_opcode(grp_max_pooling2d_1_fu_721_grp_fu_1839_p_opcode),
    .grp_fu_1839_p_dout0(grp_max_pooling2d_1_fu_721_grp_fu_1839_p_dout0),
    .grp_fu_1839_p_ce(grp_max_pooling2d_1_fu_721_grp_fu_1839_p_ce)
);

infer_max_pooling2d grp_max_pooling2d_fu_727(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_max_pooling2d_fu_727_ap_start),
    .ap_done(grp_max_pooling2d_fu_727_ap_done),
    .ap_idle(grp_max_pooling2d_fu_727_ap_idle),
    .ap_ready(grp_max_pooling2d_fu_727_ap_ready),
    .input_r_address0(grp_max_pooling2d_fu_727_input_r_address0),
    .input_r_ce0(grp_max_pooling2d_fu_727_input_r_ce0),
    .input_r_q0(layer_6_output_q0),
    .input_r_address1(grp_max_pooling2d_fu_727_input_r_address1),
    .input_r_ce1(grp_max_pooling2d_fu_727_input_r_ce1),
    .input_r_q1(layer_6_output_q1),
    .output_r_address0(grp_max_pooling2d_fu_727_output_r_address0),
    .output_r_ce0(grp_max_pooling2d_fu_727_output_r_ce0),
    .output_r_we0(grp_max_pooling2d_fu_727_output_r_we0),
    .output_r_d0(grp_max_pooling2d_fu_727_output_r_d0),
    .grp_fu_788_p_din0(grp_max_pooling2d_fu_727_grp_fu_788_p_din0),
    .grp_fu_788_p_din1(grp_max_pooling2d_fu_727_grp_fu_788_p_din1),
    .grp_fu_788_p_opcode(grp_max_pooling2d_fu_727_grp_fu_788_p_opcode),
    .grp_fu_788_p_dout0(grp_max_pooling2d_fu_727_grp_fu_788_p_dout0),
    .grp_fu_788_p_ce(grp_max_pooling2d_fu_727_grp_fu_788_p_ce),
    .grp_fu_1839_p_din0(grp_max_pooling2d_fu_727_grp_fu_1839_p_din0),
    .grp_fu_1839_p_din1(grp_max_pooling2d_fu_727_grp_fu_1839_p_din1),
    .grp_fu_1839_p_opcode(grp_max_pooling2d_fu_727_grp_fu_1839_p_opcode),
    .grp_fu_1839_p_dout0(grp_max_pooling2d_fu_727_grp_fu_1839_p_dout0),
    .grp_fu_1839_p_ce(grp_max_pooling2d_fu_727_grp_fu_1839_p_ce)
);

infer_set3DFloatArray_5 grp_set3DFloatArray_5_fu_733(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_set3DFloatArray_5_fu_733_ap_start),
    .ap_done(grp_set3DFloatArray_5_fu_733_ap_done),
    .ap_idle(grp_set3DFloatArray_5_fu_733_ap_idle),
    .ap_ready(grp_set3DFloatArray_5_fu_733_ap_ready),
    .array_r_address0(grp_set3DFloatArray_5_fu_733_array_r_address0),
    .array_r_ce0(grp_set3DFloatArray_5_fu_733_array_r_ce0),
    .array_r_we0(grp_set3DFloatArray_5_fu_733_array_r_we0),
    .array_r_d0(grp_set3DFloatArray_5_fu_733_array_r_d0)
);

infer_set3DFloatArray_3 grp_set3DFloatArray_3_fu_738(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_set3DFloatArray_3_fu_738_ap_start),
    .ap_done(grp_set3DFloatArray_3_fu_738_ap_done),
    .ap_idle(grp_set3DFloatArray_3_fu_738_ap_idle),
    .ap_ready(grp_set3DFloatArray_3_fu_738_ap_ready),
    .array_r_address0(grp_set3DFloatArray_3_fu_738_array_r_address0),
    .array_r_ce0(grp_set3DFloatArray_3_fu_738_array_r_ce0),
    .array_r_we0(grp_set3DFloatArray_3_fu_738_array_r_we0),
    .array_r_d0(grp_set3DFloatArray_3_fu_738_array_r_d0)
);

infer_set3DFloatArray_4 grp_set3DFloatArray_4_fu_743(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_set3DFloatArray_4_fu_743_ap_start),
    .ap_done(grp_set3DFloatArray_4_fu_743_ap_done),
    .ap_idle(grp_set3DFloatArray_4_fu_743_ap_idle),
    .ap_ready(grp_set3DFloatArray_4_fu_743_ap_ready),
    .array_r_address0(grp_set3DFloatArray_4_fu_743_array_r_address0),
    .array_r_ce0(grp_set3DFloatArray_4_fu_743_array_r_ce0),
    .array_r_we0(grp_set3DFloatArray_4_fu_743_array_r_we0),
    .array_r_d0(grp_set3DFloatArray_4_fu_743_array_r_d0)
);

infer_set3DFloatArray_2 grp_set3DFloatArray_2_fu_748(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_set3DFloatArray_2_fu_748_ap_start),
    .ap_done(grp_set3DFloatArray_2_fu_748_ap_done),
    .ap_idle(grp_set3DFloatArray_2_fu_748_ap_idle),
    .ap_ready(grp_set3DFloatArray_2_fu_748_ap_ready),
    .array_r_address0(grp_set3DFloatArray_2_fu_748_array_r_address0),
    .array_r_ce0(grp_set3DFloatArray_2_fu_748_array_r_ce0),
    .array_r_we0(grp_set3DFloatArray_2_fu_748_array_r_we0),
    .array_r_d0(grp_set3DFloatArray_2_fu_748_array_r_d0)
);

infer_set3DFloatArray_1 grp_set3DFloatArray_1_fu_753(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_set3DFloatArray_1_fu_753_ap_start),
    .ap_done(grp_set3DFloatArray_1_fu_753_ap_done),
    .ap_idle(grp_set3DFloatArray_1_fu_753_ap_idle),
    .ap_ready(grp_set3DFloatArray_1_fu_753_ap_ready),
    .array_r_address0(grp_set3DFloatArray_1_fu_753_array_r_address0),
    .array_r_ce0(grp_set3DFloatArray_1_fu_753_array_r_ce0),
    .array_r_we0(grp_set3DFloatArray_1_fu_753_array_r_we0),
    .array_r_d0(grp_set3DFloatArray_1_fu_753_array_r_d0)
);

infer_set3DFloatArray grp_set3DFloatArray_fu_758(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_set3DFloatArray_fu_758_ap_start),
    .ap_done(grp_set3DFloatArray_fu_758_ap_done),
    .ap_idle(grp_set3DFloatArray_fu_758_ap_idle),
    .ap_ready(grp_set3DFloatArray_fu_758_ap_ready),
    .array_r_address0(grp_set3DFloatArray_fu_758_array_r_address0),
    .array_r_ce0(grp_set3DFloatArray_fu_758_array_r_ce0),
    .array_r_we0(grp_set3DFloatArray_fu_758_array_r_we0),
    .array_r_d0(grp_set3DFloatArray_fu_758_array_r_d0)
);

infer_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_5_full_dsp_1_U72(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_763_p0),
    .din1(grp_fu_763_p1),
    .ce(grp_fu_763_ce),
    .dout(grp_fu_763_p2)
);

infer_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U73(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_770_p0),
    .din1(grp_fu_770_p1),
    .ce(grp_fu_770_ce),
    .dout(grp_fu_770_p2)
);

infer_fdiv_32ns_32ns_32_10_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_10_no_dsp_1_U74(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(image_input_load_reg_1562),
    .din1(32'd1132396544),
    .ce(1'b1),
    .dout(grp_fu_780_p2)
);

infer_sitofp_32ns_32_4_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sitofp_32ns_32_4_no_dsp_1_U75(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(single_pixel_reg_1527),
    .ce(grp_fu_785_ce),
    .dout(grp_fu_785_p1)
);

infer_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U76(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_788_p0),
    .din1(grp_fu_788_p1),
    .ce(grp_fu_788_ce),
    .opcode(grp_fu_788_opcode),
    .dout(grp_fu_788_p2)
);

infer_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U77(
    .din0(layer_12_output_0_reg_1805),
    .din1(layer_12_output_1_reg_1810),
    .din2(layer_12_output_2_reg_1815),
    .din3(layer_12_output_3_reg_1820),
    .din4(trunc_ln300_reg_1834),
    .dout(tmp_42_fu_1504_p6)
);

infer_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U78(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1839_p0),
    .din1(grp_fu_1839_p1),
    .ce(grp_fu_1839_ce),
    .opcode(grp_fu_1839_opcode),
    .dout(grp_fu_1839_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter6 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state10) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state9)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state10)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state10);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter10 <= ap_enable_reg_pp1_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter11 <= ap_enable_reg_pp1_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter12 <= ap_enable_reg_pp1_iter11;
        end else if ((1'b1 == ap_CS_fsm_state9)) begin
            ap_enable_reg_pp1_iter12 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter9 <= ap_enable_reg_pp1_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp3_flush_enable)) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state40)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp3_stage3) & (1'b0 == ap_block_pp3_stage3_subdone))) begin
            ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp3_stage3) & (1'b0 == ap_block_pp3_stage3_subdone))) begin
            if ((1'b1 == ap_condition_pp3_exit_iter1_state46)) begin
                ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter0;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp3_stage3) & (1'b0 == ap_block_pp3_stage3_subdone))) begin
            ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter4 <= 1'b0;
    end else begin
        if ((((ap_enable_reg_pp3_iter3 == 1'b0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_subdone)) | ((1'b1 == ap_CS_fsm_pp3_stage3) & (1'b0 == ap_block_pp3_stage3_subdone)))) begin
            ap_enable_reg_pp3_iter4 <= ap_enable_reg_pp3_iter3;
        end else if ((1'b1 == ap_CS_fsm_state40)) begin
            ap_enable_reg_pp3_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp5_flush_enable)) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state62)) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage3) & (1'b0 == ap_block_pp5_stage3_subdone))) begin
            ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage3) & (1'b0 == ap_block_pp5_stage3_subdone))) begin
            if ((1'b1 == ap_condition_pp5_exit_iter1_state68)) begin
                ap_enable_reg_pp5_iter2 <= ap_enable_reg_pp5_iter0;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp5_iter2 <= ap_enable_reg_pp5_iter1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage3) & (1'b0 == ap_block_pp5_stage3_subdone))) begin
            ap_enable_reg_pp5_iter3 <= ap_enable_reg_pp5_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter4 <= 1'b0;
    end else begin
        if ((((ap_enable_reg_pp5_iter3 == 1'b0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_subdone)) | ((1'b1 == ap_CS_fsm_pp5_stage3) & (1'b0 == ap_block_pp5_stage3_subdone)))) begin
            ap_enable_reg_pp5_iter4 <= ap_enable_reg_pp5_iter3;
        end else if ((1'b1 == ap_CS_fsm_state62)) begin
            ap_enable_reg_pp5_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp7_flush_enable)) begin
            ap_enable_reg_pp7_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state84)) begin
            ap_enable_reg_pp7_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp7_stage3) & (1'b0 == ap_block_pp7_stage3_subdone))) begin
            ap_enable_reg_pp7_iter1 <= ap_enable_reg_pp7_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp7_stage3) & (1'b0 == ap_block_pp7_stage3_subdone))) begin
            if ((1'b1 == ap_condition_pp7_exit_iter1_state90)) begin
                ap_enable_reg_pp7_iter2 <= ap_enable_reg_pp7_iter0;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp7_iter2 <= ap_enable_reg_pp7_iter1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp7_stage3) & (1'b0 == ap_block_pp7_stage3_subdone))) begin
            ap_enable_reg_pp7_iter3 <= ap_enable_reg_pp7_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter4 <= 1'b0;
    end else begin
        if ((((ap_enable_reg_pp7_iter3 == 1'b0) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_subdone)) | ((1'b1 == ap_CS_fsm_pp7_stage3) & (1'b0 == ap_block_pp7_stage3_subdone)))) begin
            ap_enable_reg_pp7_iter4 <= ap_enable_reg_pp7_iter3;
        end else if ((1'b1 == ap_CS_fsm_state84)) begin
            ap_enable_reg_pp7_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp9_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp9_exit_iter0_state106) & (1'b1 == ap_CS_fsm_pp9_stage0) & (1'b0 == ap_block_pp9_stage0_subdone))) begin
            ap_enable_reg_pp9_iter0 <= 1'b0;
        end else if (((grp_dense_relu_fu_670_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state105))) begin
            ap_enable_reg_pp9_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp9_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp9_exit_iter0_state106) & (1'b0 == ap_block_pp9_stage0_subdone))) begin
            ap_enable_reg_pp9_iter1 <= (1'b1 ^ ap_condition_pp9_exit_iter0_state106);
        end else if ((1'b0 == ap_block_pp9_stage0_subdone)) begin
            ap_enable_reg_pp9_iter1 <= ap_enable_reg_pp9_iter0;
        end else if (((grp_dense_relu_fu_670_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state105))) begin
            ap_enable_reg_pp9_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_conv2d_1_fu_695_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state29)) begin
            grp_conv2d_1_fu_695_ap_start_reg <= 1'b1;
        end else if ((grp_conv2d_1_fu_695_ap_ready == 1'b1)) begin
            grp_conv2d_1_fu_695_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_conv2d_2_fu_685_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state25)) begin
            grp_conv2d_2_fu_685_ap_start_reg <= 1'b1;
        end else if ((grp_conv2d_2_fu_685_ap_ready == 1'b1)) begin
            grp_conv2d_2_fu_685_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_conv2d_fu_705_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state33)) begin
            grp_conv2d_fu_705_ap_start_reg <= 1'b1;
        end else if ((grp_conv2d_fu_705_ap_ready == 1'b1)) begin
            grp_conv2d_fu_705_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_dense_relu_fu_670_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state104)) begin
            grp_dense_relu_fu_670_ap_start_reg <= 1'b1;
        end else if ((grp_dense_relu_fu_670_ap_ready == 1'b1)) begin
            grp_dense_relu_fu_670_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_max_pooling2d_1_fu_721_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state31)) begin
            grp_max_pooling2d_1_fu_721_ap_start_reg <= 1'b1;
        end else if ((grp_max_pooling2d_1_fu_721_ap_ready == 1'b1)) begin
            grp_max_pooling2d_1_fu_721_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_max_pooling2d_2_fu_715_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state27)) begin
            grp_max_pooling2d_2_fu_715_ap_start_reg <= 1'b1;
        end else if ((grp_max_pooling2d_2_fu_715_ap_ready == 1'b1)) begin
            grp_max_pooling2d_2_fu_715_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_max_pooling2d_fu_727_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state35)) begin
            grp_max_pooling2d_fu_727_ap_start_reg <= 1'b1;
        end else if ((grp_max_pooling2d_fu_727_ap_ready == 1'b1)) begin
            grp_max_pooling2d_fu_727_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_set3DFloatArray_1_fu_753_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state23)) begin
            grp_set3DFloatArray_1_fu_753_ap_start_reg <= 1'b1;
        end else if ((grp_set3DFloatArray_1_fu_753_ap_ready == 1'b1)) begin
            grp_set3DFloatArray_1_fu_753_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_set3DFloatArray_2_fu_748_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state23)) begin
            grp_set3DFloatArray_2_fu_748_ap_start_reg <= 1'b1;
        end else if ((grp_set3DFloatArray_2_fu_748_ap_ready == 1'b1)) begin
            grp_set3DFloatArray_2_fu_748_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_set3DFloatArray_3_fu_738_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state23)) begin
            grp_set3DFloatArray_3_fu_738_ap_start_reg <= 1'b1;
        end else if ((grp_set3DFloatArray_3_fu_738_ap_ready == 1'b1)) begin
            grp_set3DFloatArray_3_fu_738_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_set3DFloatArray_4_fu_743_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state23)) begin
            grp_set3DFloatArray_4_fu_743_ap_start_reg <= 1'b1;
        end else if ((grp_set3DFloatArray_4_fu_743_ap_ready == 1'b1)) begin
            grp_set3DFloatArray_4_fu_743_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_set3DFloatArray_5_fu_733_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state23)) begin
            grp_set3DFloatArray_5_fu_733_ap_start_reg <= 1'b1;
        end else if ((grp_set3DFloatArray_5_fu_733_ap_ready == 1'b1)) begin
            grp_set3DFloatArray_5_fu_733_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_set3DFloatArray_fu_758_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state23)) begin
            grp_set3DFloatArray_fu_758_ap_start_reg <= 1'b1;
        end else if ((grp_set3DFloatArray_fu_758_ap_ready == 1'b1)) begin
            grp_set3DFloatArray_fu_758_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        add108_i22667_reg_546 <= layer_10_output_q0;
    end else if (((icmp_ln159_1_reg_1679_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage1) & (1'b0 == ap_block_pp5_stage1_11001))) begin
        add108_i22667_reg_546 <= grp_fu_763_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        add108_i22688_reg_590 <= layer_11_output_q0;
    end else if (((icmp_ln159_2_reg_1754_pp7_iter2_reg == 1'd0) & (ap_enable_reg_pp7_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage1) & (1'b0 == ap_block_pp7_stage1_11001))) begin
        add108_i22688_reg_590 <= grp_fu_763_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        add108_i_reg_501 <= layer_9_output_q0;
    end else if (((icmp_ln159_reg_1614_pp3_iter2_reg == 1'd0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage1) & (1'b0 == ap_block_pp3_stage1_11001))) begin
        add108_i_reg_501 <= grp_fu_763_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state82)) begin
        i_10_reg_567 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state102)) begin
        i_10_reg_567 <= add_ln157_2_reg_1715;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        i_2_reg_445 <= 5'd0;
    end else if (((icmp_ln31_fu_872_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        i_2_reg_445 <= select_ln31_2_fu_932_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state36) & (grp_max_pooling2d_fu_727_ap_done == 1'b1))) begin
        i_3_reg_467 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state37) & (icmp_ln22_fu_967_p2 == 1'd0))) begin
        i_3_reg_467 <= add_ln22_fu_961_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        i_4_reg_478 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        i_4_reg_478 <= add_ln157_reg_1580;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln157_fu_984_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        i_5_reg_511 <= 6'd0;
    end else if (((1'b1 == ap_CS_fsm_state59) & (icmp_ln22_1_fu_1102_p2 == 1'd0))) begin
        i_5_reg_511 <= add_ln22_1_fu_1096_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln157_1_fu_1119_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state61))) begin
        i_6_reg_556 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_state81) & (icmp_ln22_2_fu_1237_p2 == 1'd0))) begin
        i_6_reg_556 <= add_ln22_2_fu_1231_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln157_2_fu_1254_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state83))) begin
        i_7_reg_648 <= 3'd0;
    end else if (((icmp_ln22_3_fu_1372_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state103))) begin
        i_7_reg_648 <= add_ln22_3_fu_1366_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_dense_relu_fu_670_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state105))) begin
        i_8_reg_659 <= 3'd0;
    end else if (((icmp_ln298_fu_1494_p2 == 1'd0) & (ap_enable_reg_pp9_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp9_stage0) & (1'b0 == ap_block_pp9_stage0_11001))) begin
        i_8_reg_659 <= add_ln298_fu_1488_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        i_9_reg_522 <= 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        i_9_reg_522 <= add_ln157_1_reg_1650;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_422 <= 10'd0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln197_reg_1523 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        i_reg_422 <= add_ln197_reg_1518;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        ii_4_reg_490 <= 6'd0;
    end else if (((icmp_ln159_reg_1614 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        ii_4_reg_490 <= add_ln159_reg_1609;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        ii_5_reg_534 <= 7'd0;
    end else if (((ap_enable_reg_pp5_iter1 == 1'b1) & (icmp_ln159_1_reg_1679 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        ii_5_reg_534 <= add_ln159_1_reg_1698;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        ii_6_reg_579 <= 6'd0;
    end else if (((icmp_ln159_2_reg_1754 == 1'd0) & (ap_enable_reg_pp7_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        ii_6_reg_579 <= add_ln159_2_reg_1749;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        ii_reg_456 <= 5'd0;
    end else if (((icmp_ln31_fu_872_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ii_reg_456 <= add_ln33_fu_955_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        indvar_flatten_reg_434 <= 10'd0;
    end else if (((icmp_ln31_fu_872_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        indvar_flatten_reg_434 <= add_ln31_fu_840_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        add_ln157_1_reg_1650 <= add_ln157_1_fu_1113_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state83)) begin
        add_ln157_2_reg_1715 <= add_ln157_2_fu_1248_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        add_ln157_reg_1580 <= add_ln157_fu_978_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage3) & (1'b0 == ap_block_pp5_stage3_11001))) begin
        add_ln159_1_reg_1698 <= add_ln159_1_fu_1168_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp7_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        add_ln159_2_reg_1749 <= add_ln159_2_fu_1270_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        add_ln159_reg_1609 <= add_ln159_fu_1000_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln197_reg_1518 <= add_ln197_fu_823_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln31_reg_1542_pp1_iter10_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        conv12_i_reg_1567 <= grp_fu_780_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln197_reg_1523_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_reg_1532 <= grp_fu_785_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_reg_422_pp0_iter1_reg <= i_reg_422;
        icmp_ln197_reg_1523 <= icmp_ln197_fu_829_p2;
        icmp_ln197_reg_1523_pp0_iter1_reg <= icmp_ln197_reg_1523;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        i_reg_422_pp0_iter2_reg <= i_reg_422_pp0_iter1_reg;
        i_reg_422_pp0_iter3_reg <= i_reg_422_pp0_iter2_reg;
        i_reg_422_pp0_iter4_reg <= i_reg_422_pp0_iter3_reg;
        i_reg_422_pp0_iter5_reg <= i_reg_422_pp0_iter4_reg;
        icmp_ln197_reg_1523_pp0_iter2_reg <= icmp_ln197_reg_1523_pp0_iter1_reg;
        icmp_ln197_reg_1523_pp0_iter3_reg <= icmp_ln197_reg_1523_pp0_iter2_reg;
        icmp_ln197_reg_1523_pp0_iter4_reg <= icmp_ln197_reg_1523_pp0_iter3_reg;
        icmp_ln197_reg_1523_pp0_iter5_reg <= icmp_ln197_reg_1523_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        icmp_ln159_1_reg_1679 <= icmp_ln159_1_fu_1135_p2;
        icmp_ln159_1_reg_1679_pp5_iter1_reg <= icmp_ln159_1_reg_1679;
        icmp_ln159_1_reg_1679_pp5_iter2_reg <= icmp_ln159_1_reg_1679_pp5_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        icmp_ln159_2_reg_1754 <= icmp_ln159_2_fu_1276_p2;
        icmp_ln159_2_reg_1754_pp7_iter1_reg <= icmp_ln159_2_reg_1754;
        icmp_ln159_2_reg_1754_pp7_iter2_reg <= icmp_ln159_2_reg_1754_pp7_iter1_reg;
        ifzero9_reg_1768_pp7_iter1_reg <= ifzero9_reg_1768;
        ifzero9_reg_1768_pp7_iter2_reg <= ifzero9_reg_1768_pp7_iter1_reg;
        ifzero9_reg_1768_pp7_iter3_reg <= ifzero9_reg_1768_pp7_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        icmp_ln159_reg_1614 <= icmp_ln159_fu_1006_p2;
        icmp_ln159_reg_1614_pp3_iter1_reg <= icmp_ln159_reg_1614;
        icmp_ln159_reg_1614_pp3_iter2_reg <= icmp_ln159_reg_1614_pp3_iter1_reg;
        ifzero_reg_1628_pp3_iter1_reg <= ifzero_reg_1628;
        ifzero_reg_1628_pp3_iter2_reg <= ifzero_reg_1628_pp3_iter1_reg;
        ifzero_reg_1628_pp3_iter3_reg <= ifzero_reg_1628_pp3_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp9_stage0) & (1'b0 == ap_block_pp9_stage0_11001))) begin
        icmp_ln298_reg_1830 <= icmp_ln298_fu_1494_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        icmp_ln31_reg_1542 <= icmp_ln31_fu_872_p2;
        icmp_ln31_reg_1542_pp1_iter1_reg <= icmp_ln31_reg_1542;
        image_input_addr_1_reg_1551_pp1_iter1_reg <= image_input_addr_1_reg_1551;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        icmp_ln31_reg_1542_pp1_iter10_reg <= icmp_ln31_reg_1542_pp1_iter9_reg;
        icmp_ln31_reg_1542_pp1_iter11_reg <= icmp_ln31_reg_1542_pp1_iter10_reg;
        icmp_ln31_reg_1542_pp1_iter2_reg <= icmp_ln31_reg_1542_pp1_iter1_reg;
        icmp_ln31_reg_1542_pp1_iter3_reg <= icmp_ln31_reg_1542_pp1_iter2_reg;
        icmp_ln31_reg_1542_pp1_iter4_reg <= icmp_ln31_reg_1542_pp1_iter3_reg;
        icmp_ln31_reg_1542_pp1_iter5_reg <= icmp_ln31_reg_1542_pp1_iter4_reg;
        icmp_ln31_reg_1542_pp1_iter6_reg <= icmp_ln31_reg_1542_pp1_iter5_reg;
        icmp_ln31_reg_1542_pp1_iter7_reg <= icmp_ln31_reg_1542_pp1_iter6_reg;
        icmp_ln31_reg_1542_pp1_iter8_reg <= icmp_ln31_reg_1542_pp1_iter7_reg;
        icmp_ln31_reg_1542_pp1_iter9_reg <= icmp_ln31_reg_1542_pp1_iter8_reg;
        image_input_addr_1_reg_1551_pp1_iter10_reg <= image_input_addr_1_reg_1551_pp1_iter9_reg;
        image_input_addr_1_reg_1551_pp1_iter11_reg <= image_input_addr_1_reg_1551_pp1_iter10_reg;
        image_input_addr_1_reg_1551_pp1_iter2_reg <= image_input_addr_1_reg_1551_pp1_iter1_reg;
        image_input_addr_1_reg_1551_pp1_iter3_reg <= image_input_addr_1_reg_1551_pp1_iter2_reg;
        image_input_addr_1_reg_1551_pp1_iter4_reg <= image_input_addr_1_reg_1551_pp1_iter3_reg;
        image_input_addr_1_reg_1551_pp1_iter5_reg <= image_input_addr_1_reg_1551_pp1_iter4_reg;
        image_input_addr_1_reg_1551_pp1_iter6_reg <= image_input_addr_1_reg_1551_pp1_iter5_reg;
        image_input_addr_1_reg_1551_pp1_iter7_reg <= image_input_addr_1_reg_1551_pp1_iter6_reg;
        image_input_addr_1_reg_1551_pp1_iter8_reg <= image_input_addr_1_reg_1551_pp1_iter7_reg;
        image_input_addr_1_reg_1551_pp1_iter9_reg <= image_input_addr_1_reg_1551_pp1_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln159_1_reg_1679 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage3) & (1'b0 == ap_block_pp5_stage3_11001))) begin
        ifzero5_reg_1703 <= ifzero5_fu_1174_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage3) & (1'b0 == ap_block_pp5_stage3_11001))) begin
        ifzero5_reg_1703_pp5_iter1_reg <= ifzero5_reg_1703;
        ifzero5_reg_1703_pp5_iter2_reg <= ifzero5_reg_1703_pp5_iter1_reg;
        ifzero5_reg_1703_pp5_iter3_reg <= ifzero5_reg_1703_pp5_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln159_2_fu_1276_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        ifzero9_reg_1768 <= ifzero9_fu_1309_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln159_fu_1006_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        ifzero_reg_1628 <= ifzero_fu_1039_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln31_fu_872_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        image_input_addr_1_reg_1551 <= zext_ln37_fu_950_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln31_reg_1542 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        image_input_load_reg_1562 <= image_input_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        layer_10_bias_load_reg_1674 <= layer_10_bias_q0;
        zext_ln157_3_reg_1669[5 : 0] <= zext_ln157_3_fu_1131_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln157_1_fu_1119_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state61))) begin
        layer_10_output_addr_1_reg_1659 <= zext_ln157_2_fu_1125_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        layer_11_bias_load_reg_1744 <= layer_11_bias_q0;
        zext_ln157_5_reg_1734[4 : 0] <= zext_ln157_5_fu_1266_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln157_2_fu_1254_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state83))) begin
        layer_11_output_addr_1_reg_1724 <= zext_ln157_4_fu_1260_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln22_3_fu_1372_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state103))) begin
        layer_12_output_0_0_reg_636 <= layer_12_output_0_1_fu_1416_p3;
        layer_12_output_1_0_reg_624 <= layer_12_output_1_1_fu_1432_p3;
        layer_12_output_2_0_reg_612 <= layer_12_output_2_1_fu_1440_p3;
        layer_12_output_3_0_reg_600 <= layer_12_output_3_1_fu_1464_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state105)) begin
        layer_12_output_0_reg_1805 <= grp_dense_relu_fu_670_ap_return_0;
        layer_12_output_1_reg_1810 <= grp_dense_relu_fu_670_ap_return_1;
        layer_12_output_2_reg_1815 <= grp_dense_relu_fu_670_ap_return_2;
        layer_12_output_3_reg_1820 <= grp_dense_relu_fu_670_ap_return_3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        layer_9_bias_load_reg_1604 <= layer_9_bias_q0;
        zext_ln157_1_reg_1599[6 : 0] <= zext_ln157_1_fu_996_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln157_fu_984_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state39))) begin
        layer_9_output_addr_1_reg_1589 <= zext_ln157_fu_990_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln159_2_reg_1754 == 1'd0) & (ap_enable_reg_pp7_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001)) | ((ap_enable_reg_pp5_iter1 == 1'b1) & (icmp_ln159_1_reg_1679 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001)) | ((icmp_ln159_reg_1614 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001)))) begin
        reg_799 <= grp_fu_770_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln159_2_reg_1754_pp7_iter2_reg == 1'd0) & (ap_enable_reg_pp7_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage1) & (1'b0 == ap_block_pp7_stage1_11001)) | ((icmp_ln159_1_reg_1679_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage1) & (1'b0 == ap_block_pp5_stage1_11001)) | ((icmp_ln159_reg_1614_pp3_iter2_reg == 1'd0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage1) & (1'b0 == ap_block_pp3_stage1_11001)))) begin
        reg_804 <= grp_fu_763_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((ifzero9_reg_1768_pp7_iter3_reg == 1'd1) & (ap_enable_reg_pp7_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage2) & (1'b0 == ap_block_pp7_stage2_11001)) | ((ifzero5_reg_1703_pp5_iter2_reg == 1'd1) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage2) & (1'b0 == ap_block_pp5_stage2_11001)) | ((ifzero_reg_1628_pp3_iter3_reg == 1'd1) & (ap_enable_reg_pp3_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage2) & (1'b0 == ap_block_pp3_stage2_11001)))) begin
        reg_812 <= grp_fu_763_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln197_reg_1523 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        single_pixel_reg_1527 <= infer_input_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln298_fu_1494_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp9_stage0) & (1'b0 == ap_block_pp9_stage0_11001))) begin
        trunc_ln300_reg_1834 <= trunc_ln300_fu_1500_p1;
    end
end

always @ (*) begin
    if ((icmp_ln197_fu_829_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln31_fu_872_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state10 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state10 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b1))) begin
        ap_condition_pp3_exit_iter1_state46 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter1_state46 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln159_reg_1614 == 1'd1) & (1'b1 == ap_CS_fsm_pp3_stage3) & (1'b0 == ap_block_pp3_stage3_subdone))) begin
        ap_condition_pp3_flush_enable = 1'b1;
    end else begin
        ap_condition_pp3_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter1 == 1'b1) & (ap_enable_reg_pp5_iter0 == 1'b0))) begin
        ap_condition_pp5_exit_iter1_state68 = 1'b1;
    end else begin
        ap_condition_pp5_exit_iter1_state68 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln159_1_reg_1679 == 1'd1) & (1'b1 == ap_CS_fsm_pp5_stage3) & (1'b0 == ap_block_pp5_stage3_subdone))) begin
        ap_condition_pp5_flush_enable = 1'b1;
    end else begin
        ap_condition_pp5_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter0 == 1'b0) & (ap_enable_reg_pp7_iter1 == 1'b1))) begin
        ap_condition_pp7_exit_iter1_state90 = 1'b1;
    end else begin
        ap_condition_pp7_exit_iter1_state90 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln159_2_reg_1754 == 1'd1) & (1'b1 == ap_CS_fsm_pp7_stage3) & (1'b0 == ap_block_pp7_stage3_subdone))) begin
        ap_condition_pp7_flush_enable = 1'b1;
    end else begin
        ap_condition_pp7_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln298_fu_1494_p2 == 1'd1)) begin
        ap_condition_pp9_exit_iter0_state106 = 1'b1;
    end else begin
        ap_condition_pp9_exit_iter0_state106 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state108)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter12 == 1'b0) & (ap_enable_reg_pp1_iter11 == 1'b0) & (ap_enable_reg_pp1_iter10 == 1'b0) & (ap_enable_reg_pp1_iter9 == 1'b0) & (ap_enable_reg_pp1_iter8 == 1'b0) & (ap_enable_reg_pp1_iter7 == 1'b0) & (ap_enable_reg_pp1_iter6 == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter4 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter4 == 1'b0) & (ap_enable_reg_pp5_iter3 == 1'b0) & (ap_enable_reg_pp5_iter2 == 1'b0) & (ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter0 == 1'b0))) begin
        ap_idle_pp5 = 1'b1;
    end else begin
        ap_idle_pp5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter4 == 1'b0) & (ap_enable_reg_pp7_iter0 == 1'b0) & (ap_enable_reg_pp7_iter3 == 1'b0) & (ap_enable_reg_pp7_iter2 == 1'b0) & (ap_enable_reg_pp7_iter1 == 1'b0))) begin
        ap_idle_pp7 = 1'b1;
    end else begin
        ap_idle_pp7 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp9_iter0 == 1'b0) & (ap_enable_reg_pp9_iter1 == 1'b0))) begin
        ap_idle_pp9 = 1'b1;
    end else begin
        ap_idle_pp9 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln159_1_reg_1679_pp5_iter2_reg == 1'd0) & (ap_enable_reg_pp5_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage1) & (1'b0 == ap_block_pp5_stage1))) begin
        ap_phi_mux_add108_i22667_phi_fu_549_p4 = grp_fu_763_p2;
    end else begin
        ap_phi_mux_add108_i22667_phi_fu_549_p4 = add108_i22667_reg_546;
    end
end

always @ (*) begin
    if (((icmp_ln159_2_reg_1754_pp7_iter2_reg == 1'd0) & (ap_enable_reg_pp7_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage1) & (1'b0 == ap_block_pp7_stage1))) begin
        ap_phi_mux_add108_i22688_phi_fu_593_p4 = grp_fu_763_p2;
    end else begin
        ap_phi_mux_add108_i22688_phi_fu_593_p4 = add108_i22688_reg_590;
    end
end

always @ (*) begin
    if (((icmp_ln159_reg_1614_pp3_iter2_reg == 1'd0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage1) & (1'b0 == ap_block_pp3_stage1))) begin
        ap_phi_mux_add108_i_phi_fu_504_p4 = grp_fu_763_p2;
    end else begin
        ap_phi_mux_add108_i_phi_fu_504_p4 = add108_i_reg_501;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln197_reg_1523 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_i_phi_fu_426_p4 = add_ln197_reg_1518;
    end else begin
        ap_phi_mux_i_phi_fu_426_p4 = i_reg_422;
    end
end

always @ (*) begin
    if (((icmp_ln159_reg_1614 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        ap_phi_mux_ii_4_phi_fu_494_p4 = add_ln159_reg_1609;
    end else begin
        ap_phi_mux_ii_4_phi_fu_494_p4 = ii_4_reg_490;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter1 == 1'b1) & (icmp_ln159_1_reg_1679 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        ap_phi_mux_ii_5_phi_fu_538_p4 = add_ln159_1_reg_1698;
    end else begin
        ap_phi_mux_ii_5_phi_fu_538_p4 = ii_5_reg_534;
    end
end

always @ (*) begin
    if (((icmp_ln159_2_reg_1754 == 1'd0) & (ap_enable_reg_pp7_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0))) begin
        ap_phi_mux_ii_6_phi_fu_583_p4 = add_ln159_2_reg_1749;
    end else begin
        ap_phi_mux_ii_6_phi_fu_583_p4 = ii_6_reg_579;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state108)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state36))) begin
        grp_fu_1839_ce = grp_max_pooling2d_fu_727_grp_fu_1839_p_ce;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31))) begin
        grp_fu_1839_ce = grp_max_pooling2d_1_fu_721_grp_fu_1839_p_ce;
    end else if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27))) begin
        grp_fu_1839_ce = grp_max_pooling2d_2_fu_715_grp_fu_1839_p_ce;
    end else begin
        grp_fu_1839_ce = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state36))) begin
        grp_fu_1839_opcode = grp_max_pooling2d_fu_727_grp_fu_1839_p_opcode;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31))) begin
        grp_fu_1839_opcode = grp_max_pooling2d_1_fu_721_grp_fu_1839_p_opcode;
    end else if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27))) begin
        grp_fu_1839_opcode = grp_max_pooling2d_2_fu_715_grp_fu_1839_p_opcode;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state36))) begin
        grp_fu_1839_p0 = grp_max_pooling2d_fu_727_grp_fu_1839_p_din0;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31))) begin
        grp_fu_1839_p0 = grp_max_pooling2d_1_fu_721_grp_fu_1839_p_din0;
    end else if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27))) begin
        grp_fu_1839_p0 = grp_max_pooling2d_2_fu_715_grp_fu_1839_p_din0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state36))) begin
        grp_fu_1839_p1 = grp_max_pooling2d_fu_727_grp_fu_1839_p_din1;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31))) begin
        grp_fu_1839_p1 = grp_max_pooling2d_1_fu_721_grp_fu_1839_p_din1;
    end else if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27))) begin
        grp_fu_1839_p1 = grp_max_pooling2d_2_fu_715_grp_fu_1839_p_din1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33))) begin
        grp_fu_763_ce = grp_conv2d_fu_705_grp_fu_763_p_ce;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29))) begin
        grp_fu_763_ce = grp_conv2d_1_fu_695_grp_fu_763_p_ce;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25))) begin
        grp_fu_763_ce = grp_conv2d_2_fu_685_grp_fu_763_p_ce;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state104))) begin
        grp_fu_763_ce = grp_dense_relu_fu_670_grp_fu_763_p_ce;
    end else begin
        grp_fu_763_ce = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33))) begin
        grp_fu_763_p0 = grp_conv2d_fu_705_grp_fu_763_p_din0;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29))) begin
        grp_fu_763_p0 = grp_conv2d_1_fu_695_grp_fu_763_p_din0;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25))) begin
        grp_fu_763_p0 = grp_conv2d_2_fu_685_grp_fu_763_p_din0;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state104))) begin
        grp_fu_763_p0 = grp_dense_relu_fu_670_grp_fu_763_p_din0;
    end else if (((ap_enable_reg_pp7_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage1) & (1'b0 == ap_block_pp7_stage1))) begin
        grp_fu_763_p0 = ap_phi_mux_add108_i22688_phi_fu_593_p4;
    end else if (((ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage1) & (1'b0 == ap_block_pp5_stage1))) begin
        grp_fu_763_p0 = ap_phi_mux_add108_i22667_phi_fu_549_p4;
    end else if ((((ap_enable_reg_pp7_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage2) & (1'b0 == ap_block_pp7_stage2)) | ((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage2) & (1'b0 == ap_block_pp5_stage2)) | ((ap_enable_reg_pp3_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage2) & (1'b0 == ap_block_pp3_stage2)))) begin
        grp_fu_763_p0 = reg_804;
    end else if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage1) & (1'b0 == ap_block_pp3_stage1))) begin
        grp_fu_763_p0 = ap_phi_mux_add108_i_phi_fu_504_p4;
    end else begin
        grp_fu_763_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33))) begin
        grp_fu_763_p1 = grp_conv2d_fu_705_grp_fu_763_p_din1;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29))) begin
        grp_fu_763_p1 = grp_conv2d_1_fu_695_grp_fu_763_p_din1;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25))) begin
        grp_fu_763_p1 = grp_conv2d_2_fu_685_grp_fu_763_p_din1;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state104))) begin
        grp_fu_763_p1 = grp_dense_relu_fu_670_grp_fu_763_p_din1;
    end else if (((ap_enable_reg_pp7_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage2) & (1'b0 == ap_block_pp7_stage2))) begin
        grp_fu_763_p1 = layer_11_bias_load_reg_1744;
    end else if (((ap_enable_reg_pp5_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage2) & (1'b0 == ap_block_pp5_stage2))) begin
        grp_fu_763_p1 = layer_10_bias_load_reg_1674;
    end else if (((ap_enable_reg_pp3_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage2) & (1'b0 == ap_block_pp3_stage2))) begin
        grp_fu_763_p1 = layer_9_bias_load_reg_1604;
    end else if ((((ap_enable_reg_pp7_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage1) & (1'b0 == ap_block_pp7_stage1)) | ((ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage1) & (1'b0 == ap_block_pp5_stage1)) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage1) & (1'b0 == ap_block_pp3_stage1)))) begin
        grp_fu_763_p1 = reg_799;
    end else begin
        grp_fu_763_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33))) begin
        grp_fu_770_ce = grp_conv2d_fu_705_grp_fu_770_p_ce;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29))) begin
        grp_fu_770_ce = grp_conv2d_1_fu_695_grp_fu_770_p_ce;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25))) begin
        grp_fu_770_ce = grp_conv2d_2_fu_685_grp_fu_770_p_ce;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state104))) begin
        grp_fu_770_ce = grp_dense_relu_fu_670_grp_fu_770_p_ce;
    end else begin
        grp_fu_770_ce = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33))) begin
        grp_fu_770_p0 = grp_conv2d_fu_705_grp_fu_770_p_din0;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29))) begin
        grp_fu_770_p0 = grp_conv2d_1_fu_695_grp_fu_770_p_din0;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25))) begin
        grp_fu_770_p0 = grp_conv2d_2_fu_685_grp_fu_770_p_din0;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state104))) begin
        grp_fu_770_p0 = grp_dense_relu_fu_670_grp_fu_770_p_din0;
    end else if (((ap_enable_reg_pp7_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage1) & (1'b0 == ap_block_pp7_stage1))) begin
        grp_fu_770_p0 = layer_10_output_q0;
    end else if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage1) & (1'b0 == ap_block_pp5_stage1))) begin
        grp_fu_770_p0 = layer_9_output_q0;
    end else if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage1) & (1'b0 == ap_block_pp3_stage1))) begin
        grp_fu_770_p0 = layer_7_output_q0;
    end else begin
        grp_fu_770_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33))) begin
        grp_fu_770_p1 = grp_conv2d_fu_705_grp_fu_770_p_din1;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29))) begin
        grp_fu_770_p1 = grp_conv2d_1_fu_695_grp_fu_770_p_din1;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25))) begin
        grp_fu_770_p1 = grp_conv2d_2_fu_685_grp_fu_770_p_din1;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state104))) begin
        grp_fu_770_p1 = grp_dense_relu_fu_670_grp_fu_770_p_din1;
    end else if (((ap_enable_reg_pp7_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage1) & (1'b0 == ap_block_pp7_stage1))) begin
        grp_fu_770_p1 = layer_11_weights_q0;
    end else if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage1) & (1'b0 == ap_block_pp5_stage1))) begin
        grp_fu_770_p1 = layer_10_weights_q0;
    end else if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage1) & (1'b0 == ap_block_pp3_stage1))) begin
        grp_fu_770_p1 = layer_9_weights_q0;
    end else begin
        grp_fu_770_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_785_ce = 1'b1;
    end else begin
        grp_fu_785_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state36))) begin
        grp_fu_788_ce = grp_max_pooling2d_fu_727_grp_fu_788_p_ce;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31))) begin
        grp_fu_788_ce = grp_max_pooling2d_1_fu_721_grp_fu_788_p_ce;
    end else if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27))) begin
        grp_fu_788_ce = grp_max_pooling2d_2_fu_715_grp_fu_788_p_ce;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33))) begin
        grp_fu_788_ce = grp_conv2d_fu_705_grp_fu_788_p_ce;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29))) begin
        grp_fu_788_ce = grp_conv2d_1_fu_695_grp_fu_788_p_ce;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25))) begin
        grp_fu_788_ce = grp_conv2d_2_fu_685_grp_fu_788_p_ce;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state104))) begin
        grp_fu_788_ce = grp_dense_relu_fu_670_grp_fu_788_p_ce;
    end else begin
        grp_fu_788_ce = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state36))) begin
        grp_fu_788_opcode = grp_max_pooling2d_fu_727_grp_fu_788_p_opcode;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31))) begin
        grp_fu_788_opcode = grp_max_pooling2d_1_fu_721_grp_fu_788_p_opcode;
    end else if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27))) begin
        grp_fu_788_opcode = grp_max_pooling2d_2_fu_715_grp_fu_788_p_opcode;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33))) begin
        grp_fu_788_opcode = grp_conv2d_fu_705_grp_fu_788_p_opcode;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29))) begin
        grp_fu_788_opcode = grp_conv2d_1_fu_695_grp_fu_788_p_opcode;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25))) begin
        grp_fu_788_opcode = grp_conv2d_2_fu_685_grp_fu_788_p_opcode;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state104))) begin
        grp_fu_788_opcode = grp_dense_relu_fu_670_grp_fu_788_p_opcode;
    end else if ((((ifzero9_reg_1768_pp7_iter3_reg == 1'd1) & (ap_enable_reg_pp7_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage3) & (1'b0 == ap_block_pp7_stage3_00001)) | ((ifzero5_reg_1703_pp5_iter2_reg == 1'd1) & (ap_enable_reg_pp5_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage3) & (1'b0 == ap_block_pp5_stage3_00001)) | ((ifzero_reg_1628_pp3_iter3_reg == 1'd1) & (ap_enable_reg_pp3_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage3) & (1'b0 == ap_block_pp3_stage3_00001)))) begin
        grp_fu_788_opcode = 5'd2;
    end else begin
        grp_fu_788_opcode = 5'd2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state36))) begin
        grp_fu_788_p0 = grp_max_pooling2d_fu_727_grp_fu_788_p_din0;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31))) begin
        grp_fu_788_p0 = grp_max_pooling2d_1_fu_721_grp_fu_788_p_din0;
    end else if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27))) begin
        grp_fu_788_p0 = grp_max_pooling2d_2_fu_715_grp_fu_788_p_din0;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33))) begin
        grp_fu_788_p0 = grp_conv2d_fu_705_grp_fu_788_p_din0;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29))) begin
        grp_fu_788_p0 = grp_conv2d_1_fu_695_grp_fu_788_p_din0;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25))) begin
        grp_fu_788_p0 = grp_conv2d_2_fu_685_grp_fu_788_p_din0;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state104))) begin
        grp_fu_788_p0 = grp_dense_relu_fu_670_grp_fu_788_p_din0;
    end else if ((((ap_enable_reg_pp7_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage3) & (1'b0 == ap_block_pp7_stage3)) | ((ap_enable_reg_pp5_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage3) & (1'b0 == ap_block_pp5_stage3)) | ((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage3) & (1'b0 == ap_block_pp3_stage3)))) begin
        grp_fu_788_p0 = reg_812;
    end else begin
        grp_fu_788_p0 = reg_812;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state36))) begin
        grp_fu_788_p1 = grp_max_pooling2d_fu_727_grp_fu_788_p_din1;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31))) begin
        grp_fu_788_p1 = grp_max_pooling2d_1_fu_721_grp_fu_788_p_din1;
    end else if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27))) begin
        grp_fu_788_p1 = grp_max_pooling2d_2_fu_715_grp_fu_788_p_din1;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33))) begin
        grp_fu_788_p1 = grp_conv2d_fu_705_grp_fu_788_p_din1;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29))) begin
        grp_fu_788_p1 = grp_conv2d_1_fu_695_grp_fu_788_p_din1;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25))) begin
        grp_fu_788_p1 = grp_conv2d_2_fu_685_grp_fu_788_p_din1;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state104))) begin
        grp_fu_788_p1 = grp_dense_relu_fu_670_grp_fu_788_p_din1;
    end else if ((((ap_enable_reg_pp7_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage3) & (1'b0 == ap_block_pp7_stage3)) | ((ap_enable_reg_pp5_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage3) & (1'b0 == ap_block_pp5_stage3)) | ((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage3) & (1'b0 == ap_block_pp3_stage3)))) begin
        grp_fu_788_p1 = 32'd0;
    end else begin
        grp_fu_788_p1 = 32'd0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter12 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        image_input_address0 = image_input_addr_1_reg_1551_pp1_iter11_reg;
    end else if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        image_input_address0 = i_cast_fu_835_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        image_input_address0 = grp_conv2d_2_fu_685_input_r_address0;
    end else begin
        image_input_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter12 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        image_input_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        image_input_ce0 = grp_conv2d_2_fu_685_input_r_ce0;
    end else begin
        image_input_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        image_input_ce1 = 1'b1;
    end else begin
        image_input_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter12 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        image_input_d0 = conv12_i_reg_1567;
    end else if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        image_input_d0 = conv_reg_1532;
    end else begin
        image_input_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter12 == 1'b1) & (icmp_ln31_reg_1542_pp1_iter11_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (icmp_ln197_reg_1523_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        image_input_we0 = 1'b1;
    end else begin
        image_input_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln197_reg_1523 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        infer_input_V_blk_n = infer_input_V_empty_n;
    end else begin
        infer_input_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln197_reg_1523 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        infer_input_V_read = 1'b1;
    end else begin
        infer_input_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp9_stage0) & (icmp_ln298_reg_1830 == 1'd0) & (ap_enable_reg_pp9_iter1 == 1'b1) & (1'b0 == ap_block_pp9_stage0))) begin
        infer_output_V_blk_n = infer_output_V_full_n;
    end else begin
        infer_output_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp9_stage0) & (icmp_ln298_reg_1830 == 1'd0) & (ap_enable_reg_pp9_iter1 == 1'b1) & (1'b0 == ap_block_pp9_stage0_11001))) begin
        infer_output_V_write = 1'b1;
    end else begin
        infer_output_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        layer_10_bias_ce0 = 1'b1;
    end else begin
        layer_10_bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0))) begin
        layer_10_output_address0 = ii_6_cast11_fu_1282_p1;
    end else if (((ap_enable_reg_pp5_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        layer_10_output_address0 = layer_10_output_addr_1_reg_1659;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        layer_10_output_address0 = zext_ln157_2_fu_1125_p1;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        layer_10_output_address0 = i_5_cast_fu_1108_p1;
    end else begin
        layer_10_output_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state59) | ((ap_enable_reg_pp7_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001)) | ((ap_enable_reg_pp5_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001)))) begin
        layer_10_output_ce0 = 1'b1;
    end else begin
        layer_10_output_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        layer_10_output_d0 = select_ln49_1_fu_1222_p3;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        layer_10_output_d0 = 32'd0;
    end else begin
        layer_10_output_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state59) & (icmp_ln22_1_fu_1102_p2 == 1'd0)) | ((ap_enable_reg_pp5_iter4 == 1'b1) & (ifzero5_reg_1703_pp5_iter3_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001)))) begin
        layer_10_output_we0 = 1'b1;
    end else begin
        layer_10_output_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        layer_10_weights_ce0 = 1'b1;
    end else begin
        layer_10_weights_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state83)) begin
        layer_11_bias_ce0 = 1'b1;
    end else begin
        layer_11_bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0))) begin
        layer_11_output_address0 = layer_11_output_addr_1_reg_1724;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        layer_11_output_address0 = zext_ln157_4_fu_1260_p1;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        layer_11_output_address0 = i_6_cast_fu_1243_p1;
    end else if ((1'b1 == ap_CS_fsm_state105)) begin
        layer_11_output_address0 = grp_dense_relu_fu_670_input_r_address0;
    end else begin
        layer_11_output_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state81) | ((ap_enable_reg_pp7_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001)))) begin
        layer_11_output_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state105)) begin
        layer_11_output_ce0 = grp_dense_relu_fu_670_input_r_ce0;
    end else begin
        layer_11_output_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0))) begin
        layer_11_output_d0 = select_ln49_2_fu_1357_p3;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        layer_11_output_d0 = 32'd0;
    end else begin
        layer_11_output_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state81) & (icmp_ln22_2_fu_1237_p2 == 1'd0)) | ((ap_enable_reg_pp7_iter4 == 1'b1) & (ifzero9_reg_1768_pp7_iter3_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001)))) begin
        layer_11_output_we0 = 1'b1;
    end else begin
        layer_11_output_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        layer_11_weights_ce0 = 1'b1;
    end else begin
        layer_11_weights_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        layer_2_output_address0 = grp_set3DFloatArray_5_fu_733_array_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        layer_2_output_address0 = grp_max_pooling2d_2_fu_715_input_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        layer_2_output_address0 = grp_conv2d_2_fu_685_output_r_address0;
    end else begin
        layer_2_output_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        layer_2_output_ce0 = grp_set3DFloatArray_5_fu_733_array_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        layer_2_output_ce0 = grp_max_pooling2d_2_fu_715_input_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        layer_2_output_ce0 = grp_conv2d_2_fu_685_output_r_ce0;
    end else begin
        layer_2_output_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        layer_2_output_ce1 = grp_max_pooling2d_2_fu_715_input_r_ce1;
    end else begin
        layer_2_output_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        layer_2_output_d0 = grp_set3DFloatArray_5_fu_733_array_r_d0;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        layer_2_output_d0 = grp_conv2d_2_fu_685_output_r_d0;
    end else begin
        layer_2_output_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        layer_2_output_we0 = grp_set3DFloatArray_5_fu_733_array_r_we0;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        layer_2_output_we0 = grp_conv2d_2_fu_685_output_r_we0;
    end else begin
        layer_2_output_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        layer_3_output_address0 = grp_set3DFloatArray_4_fu_743_array_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        layer_3_output_address0 = grp_max_pooling2d_2_fu_715_output_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        layer_3_output_address0 = grp_conv2d_1_fu_695_input_r_address0;
    end else begin
        layer_3_output_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        layer_3_output_ce0 = grp_set3DFloatArray_4_fu_743_array_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        layer_3_output_ce0 = grp_max_pooling2d_2_fu_715_output_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        layer_3_output_ce0 = grp_conv2d_1_fu_695_input_r_ce0;
    end else begin
        layer_3_output_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        layer_3_output_d0 = grp_set3DFloatArray_4_fu_743_array_r_d0;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        layer_3_output_d0 = grp_max_pooling2d_2_fu_715_output_r_d0;
    end else begin
        layer_3_output_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        layer_3_output_we0 = grp_set3DFloatArray_4_fu_743_array_r_we0;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        layer_3_output_we0 = grp_max_pooling2d_2_fu_715_output_r_we0;
    end else begin
        layer_3_output_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        layer_4_output_address0 = grp_set3DFloatArray_3_fu_738_array_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        layer_4_output_address0 = grp_max_pooling2d_1_fu_721_input_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        layer_4_output_address0 = grp_conv2d_1_fu_695_output_r_address0;
    end else begin
        layer_4_output_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        layer_4_output_ce0 = grp_set3DFloatArray_3_fu_738_array_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        layer_4_output_ce0 = grp_max_pooling2d_1_fu_721_input_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        layer_4_output_ce0 = grp_conv2d_1_fu_695_output_r_ce0;
    end else begin
        layer_4_output_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        layer_4_output_ce1 = grp_max_pooling2d_1_fu_721_input_r_ce1;
    end else begin
        layer_4_output_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        layer_4_output_d0 = grp_set3DFloatArray_3_fu_738_array_r_d0;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        layer_4_output_d0 = grp_conv2d_1_fu_695_output_r_d0;
    end else begin
        layer_4_output_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        layer_4_output_we0 = grp_set3DFloatArray_3_fu_738_array_r_we0;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        layer_4_output_we0 = grp_conv2d_1_fu_695_output_r_we0;
    end else begin
        layer_4_output_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        layer_5_output_address0 = grp_set3DFloatArray_2_fu_748_array_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        layer_5_output_address0 = grp_max_pooling2d_1_fu_721_output_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        layer_5_output_address0 = grp_conv2d_fu_705_input_r_address0;
    end else begin
        layer_5_output_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        layer_5_output_ce0 = grp_set3DFloatArray_2_fu_748_array_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        layer_5_output_ce0 = grp_max_pooling2d_1_fu_721_output_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        layer_5_output_ce0 = grp_conv2d_fu_705_input_r_ce0;
    end else begin
        layer_5_output_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        layer_5_output_d0 = grp_set3DFloatArray_2_fu_748_array_r_d0;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        layer_5_output_d0 = grp_max_pooling2d_1_fu_721_output_r_d0;
    end else begin
        layer_5_output_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        layer_5_output_we0 = grp_set3DFloatArray_2_fu_748_array_r_we0;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        layer_5_output_we0 = grp_max_pooling2d_1_fu_721_output_r_we0;
    end else begin
        layer_5_output_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        layer_6_output_address0 = grp_set3DFloatArray_1_fu_753_array_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        layer_6_output_address0 = grp_max_pooling2d_fu_727_input_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        layer_6_output_address0 = grp_conv2d_fu_705_output_r_address0;
    end else begin
        layer_6_output_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        layer_6_output_ce0 = grp_set3DFloatArray_1_fu_753_array_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        layer_6_output_ce0 = grp_max_pooling2d_fu_727_input_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        layer_6_output_ce0 = grp_conv2d_fu_705_output_r_ce0;
    end else begin
        layer_6_output_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        layer_6_output_ce1 = grp_max_pooling2d_fu_727_input_r_ce1;
    end else begin
        layer_6_output_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        layer_6_output_d0 = grp_set3DFloatArray_1_fu_753_array_r_d0;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        layer_6_output_d0 = grp_conv2d_fu_705_output_r_d0;
    end else begin
        layer_6_output_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        layer_6_output_we0 = grp_set3DFloatArray_1_fu_753_array_r_we0;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        layer_6_output_we0 = grp_conv2d_fu_705_output_r_we0;
    end else begin
        layer_6_output_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        layer_7_output_address0 = ii_4_cast8_fu_1012_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        layer_7_output_address0 = grp_set3DFloatArray_fu_758_array_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        layer_7_output_address0 = grp_max_pooling2d_fu_727_output_r_address0;
    end else begin
        layer_7_output_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        layer_7_output_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        layer_7_output_ce0 = grp_set3DFloatArray_fu_758_array_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        layer_7_output_ce0 = grp_max_pooling2d_fu_727_output_r_ce0;
    end else begin
        layer_7_output_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        layer_7_output_d0 = grp_set3DFloatArray_fu_758_array_r_d0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        layer_7_output_d0 = grp_max_pooling2d_fu_727_output_r_d0;
    end else begin
        layer_7_output_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        layer_7_output_we0 = grp_set3DFloatArray_fu_758_array_r_we0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        layer_7_output_we0 = grp_max_pooling2d_fu_727_output_r_we0;
    end else begin
        layer_7_output_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        layer_9_bias_ce0 = 1'b1;
    end else begin
        layer_9_bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        layer_9_output_address0 = ii_5_cast10_fu_1141_p1;
    end else if (((ap_enable_reg_pp3_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        layer_9_output_address0 = layer_9_output_addr_1_reg_1589;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        layer_9_output_address0 = zext_ln157_fu_990_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        layer_9_output_address0 = i_4_cast_fu_973_p1;
    end else begin
        layer_9_output_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state37) | ((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001)) | ((ap_enable_reg_pp3_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001)))) begin
        layer_9_output_ce0 = 1'b1;
    end else begin
        layer_9_output_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        layer_9_output_d0 = select_ln49_fu_1087_p3;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        layer_9_output_d0 = 32'd0;
    end else begin
        layer_9_output_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state37) & (icmp_ln22_fu_967_p2 == 1'd0)) | ((ap_enable_reg_pp3_iter4 == 1'b1) & (ifzero_reg_1628_pp3_iter3_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001)))) begin
        layer_9_output_we0 = 1'b1;
    end else begin
        layer_9_output_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        layer_9_weights_ce0 = 1'b1;
    end else begin
        layer_9_weights_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln197_fu_829_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)) & ~((ap_enable_reg_pp0_iter6 == 1'b1) & (ap_enable_reg_pp0_iter5 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((icmp_ln197_fu_829_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (ap_enable_reg_pp0_iter5 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln31_fu_872_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)) & ~((ap_enable_reg_pp1_iter12 == 1'b1) & (ap_enable_reg_pp1_iter11 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln31_fu_872_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)) | ((ap_enable_reg_pp1_iter12 == 1'b1) & (ap_enable_reg_pp1_iter11 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            if (((1'b1 == ap_CS_fsm_state24) & (1'b0 == ap_block_state24_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            if (((1'b1 == ap_CS_fsm_state26) & (grp_conv2d_2_fu_685_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            if (((1'b1 == ap_CS_fsm_state28) & (grp_max_pooling2d_2_fu_715_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            if (((1'b1 == ap_CS_fsm_state30) & (grp_conv2d_1_fu_695_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            if (((1'b1 == ap_CS_fsm_state32) & (grp_max_pooling2d_1_fu_721_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            if (((1'b1 == ap_CS_fsm_state34) & (grp_conv2d_fu_705_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            if (((1'b1 == ap_CS_fsm_state36) & (grp_max_pooling2d_fu_727_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end
        end
        ap_ST_fsm_state37 : begin
            if (((1'b1 == ap_CS_fsm_state37) & (icmp_ln22_fu_967_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            if (((icmp_ln157_fu_984_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((ap_enable_reg_pp3_iter4 == 1'b1) & (ap_enable_reg_pp3_iter3 == 1'b0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_subdone)) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage1;
            end else if (((ap_enable_reg_pp3_iter4 == 1'b1) & (ap_enable_reg_pp3_iter3 == 1'b0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_pp3_stage1 : begin
            if ((~((ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage1) & (1'b0 == ap_block_pp3_stage1_subdone)) & (1'b0 == ap_block_pp3_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage2;
            end else if (((ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage1) & (1'b0 == ap_block_pp3_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage1;
            end
        end
        ap_ST_fsm_pp3_stage2 : begin
            if ((1'b0 == ap_block_pp3_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage2;
            end
        end
        ap_ST_fsm_pp3_stage3 : begin
            if ((1'b0 == ap_block_pp3_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage3;
            end
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state59 : begin
            if (((1'b1 == ap_CS_fsm_state59) & (icmp_ln22_1_fu_1102_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            if (((icmp_ln157_1_fu_1119_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state61))) begin
                ap_NS_fsm = ap_ST_fsm_state81;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state62;
            end
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage0;
        end
        ap_ST_fsm_pp5_stage0 : begin
            if ((~((ap_enable_reg_pp5_iter4 == 1'b1) & (ap_enable_reg_pp5_iter3 == 1'b0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_subdone)) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage1;
            end else if (((ap_enable_reg_pp5_iter4 == 1'b1) & (ap_enable_reg_pp5_iter3 == 1'b0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state80;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_pp5_stage1 : begin
            if ((~((ap_enable_reg_pp5_iter2 == 1'b0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (ap_enable_reg_pp5_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp5_stage1) & (1'b0 == ap_block_pp5_stage1_subdone)) & (1'b0 == ap_block_pp5_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage2;
            end else if (((ap_enable_reg_pp5_iter2 == 1'b0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (ap_enable_reg_pp5_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp5_stage1) & (1'b0 == ap_block_pp5_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state80;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage1;
            end
        end
        ap_ST_fsm_pp5_stage2 : begin
            if ((1'b0 == ap_block_pp5_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage2;
            end
        end
        ap_ST_fsm_pp5_stage3 : begin
            if ((1'b0 == ap_block_pp5_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage3;
            end
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state81 : begin
            if (((1'b1 == ap_CS_fsm_state81) & (icmp_ln22_2_fu_1237_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state81;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state82;
            end
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            if (((icmp_ln157_2_fu_1254_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state83))) begin
                ap_NS_fsm = ap_ST_fsm_state103;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state84;
            end
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_pp7_stage0;
        end
        ap_ST_fsm_pp7_stage0 : begin
            if ((~((ap_enable_reg_pp7_iter4 == 1'b1) & (ap_enable_reg_pp7_iter3 == 1'b0) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_subdone)) & (1'b0 == ap_block_pp7_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage1;
            end else if (((ap_enable_reg_pp7_iter4 == 1'b1) & (ap_enable_reg_pp7_iter3 == 1'b0) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state102;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end
        end
        ap_ST_fsm_pp7_stage1 : begin
            if ((~((ap_enable_reg_pp7_iter0 == 1'b0) & (ap_enable_reg_pp7_iter2 == 1'b0) & (ap_enable_reg_pp7_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage1) & (1'b0 == ap_block_pp7_stage1_subdone)) & (1'b0 == ap_block_pp7_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage2;
            end else if (((ap_enable_reg_pp7_iter0 == 1'b0) & (ap_enable_reg_pp7_iter2 == 1'b0) & (ap_enable_reg_pp7_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage1) & (1'b0 == ap_block_pp7_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state102;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage1;
            end
        end
        ap_ST_fsm_pp7_stage2 : begin
            if ((1'b0 == ap_block_pp7_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage2;
            end
        end
        ap_ST_fsm_pp7_stage3 : begin
            if ((1'b0 == ap_block_pp7_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage3;
            end
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state103 : begin
            if (((icmp_ln22_3_fu_1372_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state103))) begin
                ap_NS_fsm = ap_ST_fsm_state103;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state104;
            end
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            if (((grp_dense_relu_fu_670_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state105))) begin
                ap_NS_fsm = ap_ST_fsm_pp9_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state105;
            end
        end
        ap_ST_fsm_pp9_stage0 : begin
            if (~((icmp_ln298_fu_1494_p2 == 1'd1) & (ap_enable_reg_pp9_iter0 == 1'b1) & (1'b0 == ap_block_pp9_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp9_stage0;
            end else if (((icmp_ln298_fu_1494_p2 == 1'd1) & (ap_enable_reg_pp9_iter0 == 1'b1) & (1'b0 == ap_block_pp9_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state108;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp9_stage0;
            end
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln157_1_fu_1113_p2 = (i_9_reg_522 + 6'd1);

assign add_ln157_2_fu_1248_p2 = (i_10_reg_567 + 5'd1);

assign add_ln157_fu_978_p2 = (i_4_reg_478 + 7'd1);

assign add_ln159_1_fu_1168_p2 = (ii_5_reg_534 + 7'd1);

assign add_ln159_2_fu_1270_p2 = (ap_phi_mux_ii_6_phi_fu_583_p4 + 6'd1);

assign add_ln159_fu_1000_p2 = (ap_phi_mux_ii_4_phi_fu_494_p4 + 6'd1);

assign add_ln161_1_fu_1158_p2 = (shl_ln161_1_fu_1150_p3 + zext_ln157_3_reg_1669);

assign add_ln161_2_fu_1299_p2 = (shl_ln161_2_fu_1291_p3 + zext_ln157_5_reg_1734);

assign add_ln161_fu_1029_p2 = (shl_ln_fu_1021_p3 + zext_ln157_1_reg_1599);

assign add_ln197_fu_823_p2 = (ap_phi_mux_i_phi_fu_426_p4 + 10'd1);

assign add_ln22_1_fu_1096_p2 = (i_5_reg_511 + 6'd1);

assign add_ln22_2_fu_1231_p2 = (i_6_reg_556 + 5'd1);

assign add_ln22_3_fu_1366_p2 = (i_7_reg_648 + 3'd1);

assign add_ln22_fu_961_p2 = (i_3_reg_467 + 7'd1);

assign add_ln298_fu_1488_p2 = (i_8_reg_659 + 3'd1);

assign add_ln31_1_fu_892_p2 = (i_2_reg_445 + 5'd1);

assign add_ln31_fu_840_p2 = (indvar_flatten_reg_434 + 10'd1);

assign add_ln33_fu_955_p2 = (select_ln31_fu_884_p3 + 5'd1);

assign and_ln49_1_fu_1216_p2 = (or_ln49_1_fu_1210_p2 & grp_fu_788_p2);

assign and_ln49_2_fu_1351_p2 = (or_ln49_2_fu_1345_p2 & grp_fu_788_p2);

assign and_ln49_fu_1081_p2 = (or_ln49_fu_1075_p2 & grp_fu_788_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp3_stage1 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_pp3_stage2 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp3_stage3 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_pp5_stage1 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_pp5_stage2 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_pp5_stage3 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_pp7_stage0 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_pp7_stage1 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_pp7_stage2 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_pp7_stage3 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_pp9_stage0 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state102 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state103 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state104 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state105 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state108 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((infer_input_V_empty_n == 1'b0) & (icmp_ln197_reg_1523 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((infer_input_V_empty_n == 1'b0) & (icmp_ln197_reg_1523 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage3_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage3_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage3_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp9_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp9_stage0_01001 = ((infer_output_V_full_n == 1'b0) & (icmp_ln298_reg_1830 == 1'd0) & (ap_enable_reg_pp9_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp9_stage0_11001 = ((infer_output_V_full_n == 1'b0) & (icmp_ln298_reg_1830 == 1'd0) & (ap_enable_reg_pp9_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp9_stage0_subdone = ((infer_output_V_full_n == 1'b0) & (icmp_ln298_reg_1830 == 1'd0) & (ap_enable_reg_pp9_iter1 == 1'b1));
end

assign ap_block_state100_pp7_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state101_pp7_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state106_pp9_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state107_pp9_stage0_iter1 = ((infer_output_V_full_n == 1'b0) & (icmp_ln298_reg_1830 == 1'd0));
end

assign ap_block_state10_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp1_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage0_iter12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state24_on_subcall_done = ((grp_set3DFloatArray_fu_758_ap_done == 1'b0) | (grp_set3DFloatArray_1_fu_753_ap_done == 1'b0) | (grp_set3DFloatArray_2_fu_748_ap_done == 1'b0) | (grp_set3DFloatArray_4_fu_743_ap_done == 1'b0) | (grp_set3DFloatArray_3_fu_738_ap_done == 1'b0) | (grp_set3DFloatArray_5_fu_733_ap_done == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((infer_input_V_empty_n == 1'b0) & (icmp_ln197_reg_1523 == 1'd0));
end

assign ap_block_state41_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp3_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp3_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp3_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp3_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp3_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp3_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp3_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp3_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp3_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp3_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp3_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp3_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp3_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp3_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp5_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp5_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp5_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp5_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp5_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp5_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp5_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp5_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp5_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp5_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp5_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp5_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp5_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state76_pp5_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp5_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp5_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state79_pp5_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state85_pp7_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state86_pp7_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state87_pp7_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state88_pp7_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state89_pp7_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state90_pp7_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state91_pp7_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state92_pp7_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state93_pp7_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state94_pp7_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state95_pp7_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state96_pp7_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state97_pp7_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state98_pp7_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state99_pp7_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp5 = (ap_idle_pp5 ^ 1'b1);

assign ap_enable_pp7 = (ap_idle_pp7 ^ 1'b1);

assign ap_enable_pp9 = (ap_idle_pp9 ^ 1'b1);

assign bitcast_ln49_1_fu_1180_p1 = reg_812;

assign bitcast_ln49_2_fu_1315_p1 = reg_812;

assign bitcast_ln49_fu_1045_p1 = reg_812;

assign empty_38_fu_866_p2 = (p_shl_fu_846_p3 - p_shl22625_cast_fu_862_p1);

assign empty_40_fu_944_p2 = (ii_cast_fu_940_p1 + select_ln31_1_fu_924_p3);

assign grp_conv2d_1_fu_695_ap_start = grp_conv2d_1_fu_695_ap_start_reg;

assign grp_conv2d_1_fu_695_grp_fu_763_p_dout0 = grp_fu_763_p2;

assign grp_conv2d_1_fu_695_grp_fu_770_p_dout0 = grp_fu_770_p2;

assign grp_conv2d_1_fu_695_grp_fu_788_p_dout0 = grp_fu_788_p2;

assign grp_conv2d_2_fu_685_ap_start = grp_conv2d_2_fu_685_ap_start_reg;

assign grp_conv2d_2_fu_685_grp_fu_763_p_dout0 = grp_fu_763_p2;

assign grp_conv2d_2_fu_685_grp_fu_770_p_dout0 = grp_fu_770_p2;

assign grp_conv2d_2_fu_685_grp_fu_788_p_dout0 = grp_fu_788_p2;

assign grp_conv2d_fu_705_ap_start = grp_conv2d_fu_705_ap_start_reg;

assign grp_conv2d_fu_705_grp_fu_763_p_dout0 = grp_fu_763_p2;

assign grp_conv2d_fu_705_grp_fu_770_p_dout0 = grp_fu_770_p2;

assign grp_conv2d_fu_705_grp_fu_788_p_dout0 = grp_fu_788_p2;

assign grp_dense_relu_fu_670_ap_start = grp_dense_relu_fu_670_ap_start_reg;

assign grp_dense_relu_fu_670_grp_fu_763_p_dout0 = grp_fu_763_p2;

assign grp_dense_relu_fu_670_grp_fu_770_p_dout0 = grp_fu_770_p2;

assign grp_dense_relu_fu_670_grp_fu_788_p_dout0 = grp_fu_788_p2;

assign grp_max_pooling2d_1_fu_721_ap_start = grp_max_pooling2d_1_fu_721_ap_start_reg;

assign grp_max_pooling2d_1_fu_721_grp_fu_1839_p_dout0 = grp_fu_1839_p2;

assign grp_max_pooling2d_1_fu_721_grp_fu_788_p_dout0 = grp_fu_788_p2;

assign grp_max_pooling2d_2_fu_715_ap_start = grp_max_pooling2d_2_fu_715_ap_start_reg;

assign grp_max_pooling2d_2_fu_715_grp_fu_1839_p_dout0 = grp_fu_1839_p2;

assign grp_max_pooling2d_2_fu_715_grp_fu_788_p_dout0 = grp_fu_788_p2;

assign grp_max_pooling2d_fu_727_ap_start = grp_max_pooling2d_fu_727_ap_start_reg;

assign grp_max_pooling2d_fu_727_grp_fu_1839_p_dout0 = grp_fu_1839_p2;

assign grp_max_pooling2d_fu_727_grp_fu_788_p_dout0 = grp_fu_788_p2;

assign grp_set3DFloatArray_1_fu_753_ap_start = grp_set3DFloatArray_1_fu_753_ap_start_reg;

assign grp_set3DFloatArray_2_fu_748_ap_start = grp_set3DFloatArray_2_fu_748_ap_start_reg;

assign grp_set3DFloatArray_3_fu_738_ap_start = grp_set3DFloatArray_3_fu_738_ap_start_reg;

assign grp_set3DFloatArray_4_fu_743_ap_start = grp_set3DFloatArray_4_fu_743_ap_start_reg;

assign grp_set3DFloatArray_5_fu_733_ap_start = grp_set3DFloatArray_5_fu_733_ap_start_reg;

assign grp_set3DFloatArray_fu_758_ap_start = grp_set3DFloatArray_fu_758_ap_start_reg;

assign i_4_cast_fu_973_p1 = i_3_reg_467;

assign i_5_cast_fu_1108_p1 = i_5_reg_511;

assign i_6_cast_fu_1243_p1 = i_6_reg_556;

assign i_cast_fu_835_p1 = i_reg_422_pp0_iter5_reg;

assign icmp_ln157_1_fu_1119_p2 = ((i_9_reg_522 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln157_2_fu_1254_p2 = ((i_10_reg_567 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln157_fu_984_p2 = ((i_4_reg_478 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln159_1_fu_1135_p2 = ((ap_phi_mux_ii_5_phi_fu_538_p4 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln159_2_fu_1276_p2 = ((ap_phi_mux_ii_6_phi_fu_583_p4 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln159_fu_1006_p2 = ((ap_phi_mux_ii_4_phi_fu_494_p4 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln197_fu_829_p2 = ((ap_phi_mux_i_phi_fu_426_p4 == 10'd576) ? 1'b1 : 1'b0);

assign icmp_ln22_1_fu_1102_p2 = ((i_5_reg_511 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln22_2_fu_1237_p2 = ((i_6_reg_556 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln22_3_fu_1372_p2 = ((i_7_reg_648 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln22_fu_967_p2 = ((i_3_reg_467 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln24_1_fu_1396_p2 = ((trunc_ln24_fu_1378_p1 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln24_2_fu_1410_p2 = ((trunc_ln24_fu_1378_p1 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln24_fu_1382_p2 = ((trunc_ln24_fu_1378_p1 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln298_fu_1494_p2 = ((i_8_reg_659 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln31_fu_872_p2 = ((indvar_flatten_reg_434 == 10'd576) ? 1'b1 : 1'b0);

assign icmp_ln33_fu_878_p2 = ((ii_reg_456 == 5'd24) ? 1'b1 : 1'b0);

assign icmp_ln49_1_fu_1069_p2 = ((trunc_ln49_fu_1059_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln49_2_fu_1198_p2 = ((tmp_38_fu_1184_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln49_3_fu_1204_p2 = ((trunc_ln49_1_fu_1194_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln49_4_fu_1333_p2 = ((tmp_40_fu_1319_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln49_5_fu_1339_p2 = ((trunc_ln49_2_fu_1329_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln49_fu_1063_p2 = ((tmp_fu_1049_p4 != 8'd255) ? 1'b1 : 1'b0);

assign ifzero5_fu_1174_p2 = ((add_ln159_1_fu_1168_p2 == 7'd64) ? 1'b1 : 1'b0);

assign ifzero9_fu_1309_p2 = ((add_ln159_2_fu_1270_p2 == 6'd32) ? 1'b1 : 1'b0);

assign ifzero_fu_1039_p2 = ((add_ln159_fu_1000_p2 == 6'd32) ? 1'b1 : 1'b0);

assign ii_4_cast8_fu_1012_p1 = ap_phi_mux_ii_4_phi_fu_494_p4;

assign ii_5_cast10_fu_1141_p1 = ap_phi_mux_ii_5_phi_fu_538_p4;

assign ii_6_cast11_fu_1282_p1 = ap_phi_mux_ii_6_phi_fu_583_p4;

assign ii_cast_fu_940_p1 = select_ln31_fu_884_p3;

assign image_input_address1 = zext_ln37_fu_950_p1;

assign infer_output_V_din = tmp_42_fu_1504_p6;

assign layer_10_bias_address0 = zext_ln157_2_fu_1125_p1;

assign layer_10_weights_address0 = zext_ln161_1_fu_1163_p1;

assign layer_11_bias_address0 = zext_ln157_4_fu_1260_p1;

assign layer_11_weights_address0 = zext_ln161_2_fu_1304_p1;

assign layer_12_output_0_1_fu_1416_p3 = ((icmp_ln24_2_fu_1410_p2[0:0] == 1'b1) ? layer_12_output_0_0_reg_636 : select_ln24_1_fu_1402_p3);

assign layer_12_output_1_1_fu_1432_p3 = ((icmp_ln24_2_fu_1410_p2[0:0] == 1'b1) ? layer_12_output_1_0_reg_624 : select_ln24_2_fu_1424_p3);

assign layer_12_output_2_1_fu_1440_p3 = ((icmp_ln24_2_fu_1410_p2[0:0] == 1'b1) ? 32'd0 : layer_12_output_2_0_reg_612);

assign layer_12_output_3_1_fu_1464_p3 = ((icmp_ln24_2_fu_1410_p2[0:0] == 1'b1) ? layer_12_output_3_0_reg_600 : select_ln24_4_fu_1456_p3);

assign layer_9_bias_address0 = zext_ln157_fu_990_p1;

assign layer_9_weights_address0 = zext_ln161_fu_1034_p1;

assign or_ln49_1_fu_1210_p2 = (icmp_ln49_3_fu_1204_p2 | icmp_ln49_2_fu_1198_p2);

assign or_ln49_2_fu_1345_p2 = (icmp_ln49_5_fu_1339_p2 | icmp_ln49_4_fu_1333_p2);

assign or_ln49_fu_1075_p2 = (icmp_ln49_fu_1063_p2 | icmp_ln49_1_fu_1069_p2);

assign p_mid1_fu_918_p2 = (p_shl_mid1_fu_898_p3 - p_shl22625_cast_mid1_fu_914_p1);

assign p_shl1_fu_854_p3 = {{i_2_reg_445}, {3'd0}};

assign p_shl22625_cast_fu_862_p1 = p_shl1_fu_854_p3;

assign p_shl22625_cast_mid1_fu_914_p1 = p_shl22625_mid1_fu_906_p3;

assign p_shl22625_mid1_fu_906_p3 = {{add_ln31_1_fu_892_p2}, {3'd0}};

assign p_shl_fu_846_p3 = {{i_2_reg_445}, {5'd0}};

assign p_shl_mid1_fu_898_p3 = {{add_ln31_1_fu_892_p2}, {5'd0}};

assign select_ln24_1_fu_1402_p3 = ((icmp_ln24_1_fu_1396_p2[0:0] == 1'b1) ? layer_12_output_0_0_reg_636 : select_ln24_fu_1388_p3);

assign select_ln24_2_fu_1424_p3 = ((icmp_ln24_1_fu_1396_p2[0:0] == 1'b1) ? 32'd0 : layer_12_output_1_0_reg_624);

assign select_ln24_3_fu_1448_p3 = ((icmp_ln24_fu_1382_p2[0:0] == 1'b1) ? layer_12_output_3_0_reg_600 : 32'd0);

assign select_ln24_4_fu_1456_p3 = ((icmp_ln24_1_fu_1396_p2[0:0] == 1'b1) ? layer_12_output_3_0_reg_600 : select_ln24_3_fu_1448_p3);

assign select_ln24_fu_1388_p3 = ((icmp_ln24_fu_1382_p2[0:0] == 1'b1) ? 32'd0 : layer_12_output_0_0_reg_636);

assign select_ln31_1_fu_924_p3 = ((icmp_ln33_fu_878_p2[0:0] == 1'b1) ? p_mid1_fu_918_p2 : empty_38_fu_866_p2);

assign select_ln31_2_fu_932_p3 = ((icmp_ln33_fu_878_p2[0:0] == 1'b1) ? add_ln31_1_fu_892_p2 : i_2_reg_445);

assign select_ln31_fu_884_p3 = ((icmp_ln33_fu_878_p2[0:0] == 1'b1) ? 5'd0 : ii_reg_456);

assign select_ln49_1_fu_1222_p3 = ((and_ln49_1_fu_1216_p2[0:0] == 1'b1) ? reg_812 : 32'd0);

assign select_ln49_2_fu_1357_p3 = ((and_ln49_2_fu_1351_p2[0:0] == 1'b1) ? reg_812 : 32'd0);

assign select_ln49_fu_1087_p3 = ((and_ln49_fu_1081_p2[0:0] == 1'b1) ? reg_812 : 32'd0);

assign shl_ln161_1_fu_1150_p3 = {{trunc_ln161_1_fu_1146_p1}, {5'd0}};

assign shl_ln161_2_fu_1291_p3 = {{trunc_ln161_2_fu_1287_p1}, {4'd0}};

assign shl_ln_fu_1021_p3 = {{trunc_ln161_fu_1017_p1}, {6'd0}};

assign tmp_38_fu_1184_p4 = {{bitcast_ln49_1_fu_1180_p1[30:23]}};

assign tmp_40_fu_1319_p4 = {{bitcast_ln49_2_fu_1315_p1[30:23]}};

assign tmp_fu_1049_p4 = {{bitcast_ln49_fu_1045_p1[30:23]}};

assign trunc_ln161_1_fu_1146_p1 = ap_phi_mux_ii_5_phi_fu_538_p4[5:0];

assign trunc_ln161_2_fu_1287_p1 = ap_phi_mux_ii_6_phi_fu_583_p4[4:0];

assign trunc_ln161_fu_1017_p1 = ap_phi_mux_ii_4_phi_fu_494_p4[4:0];

assign trunc_ln24_fu_1378_p1 = i_7_reg_648[1:0];

assign trunc_ln300_fu_1500_p1 = i_8_reg_659[1:0];

assign trunc_ln49_1_fu_1194_p1 = bitcast_ln49_1_fu_1180_p1[22:0];

assign trunc_ln49_2_fu_1329_p1 = bitcast_ln49_2_fu_1315_p1[22:0];

assign trunc_ln49_fu_1059_p1 = bitcast_ln49_fu_1045_p1[22:0];

assign zext_ln157_1_fu_996_p1 = i_4_reg_478;

assign zext_ln157_2_fu_1125_p1 = i_9_reg_522;

assign zext_ln157_3_fu_1131_p1 = i_9_reg_522;

assign zext_ln157_4_fu_1260_p1 = i_10_reg_567;

assign zext_ln157_5_fu_1266_p1 = i_10_reg_567;

assign zext_ln157_fu_990_p1 = i_4_reg_478;

assign zext_ln161_1_fu_1163_p1 = add_ln161_1_fu_1158_p2;

assign zext_ln161_2_fu_1304_p1 = add_ln161_2_fu_1299_p2;

assign zext_ln161_fu_1034_p1 = add_ln161_fu_1029_p2;

assign zext_ln37_fu_950_p1 = empty_40_fu_944_p2;

always @ (posedge ap_clk) begin
    zext_ln157_1_reg_1599[10:7] <= 4'b0000;
    zext_ln157_3_reg_1669[10:6] <= 5'b00000;
    zext_ln157_5_reg_1734[8:5] <= 4'b0000;
end

endmodule //infer
